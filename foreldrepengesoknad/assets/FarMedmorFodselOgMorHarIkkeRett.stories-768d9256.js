import{j as s}from"./jsx-runtime-670450c2.js";import{w as F}from"./withIntl-b4aa299e.js";import{w as u}from"./withRouter-71d505f2.js";import{w as O,F as S}from"./ForeldrepengerStateMock-1afbcff7.js";import{A as R}from"./AxiosMock-3a64d69b.js";import{F as N,U}from"./UttaksplanInfo-a5e4d26b.js";import{R as T}from"./api-02d91960.js";import"./index-f1f749bf.js";import"./_commonjsHelpers-042e6b4d.js";import"./IntlProvider-a02d6ab7.js";import"./validationUtils-aa1d1f93.js";import"./index-4d501b15.js";import"./Link-40b5f3c6.js";import"./clsx.m-266f4de0.js";import"./index-7e4e529b.js";import"./Label-bbf0f831.js";import"./index-96c5f47c.js";import"./extends-98964cd2.js";import"./useSøknad-c113ad03.js";import"./dateUtils-06999df8.js";import"./getTypedFormComponents-373c5aee.js";import"./mapSøkerinfoDTO-cc88f2a7.js";import"./useFortsettSøknadSenere-e922abdf.js";import"./apiInterceptor-b5d8b8e4.js";import"./amplitude-982d123d.js";import"./globalUtil-9d9e0ee4.js";import"./AnnenForelder-5c5d4f7f.js";import"./personUtils-3224fb9b.js";import"./Personkort-33b551aa.js";import"./periodeUtils-dfdcada7.js";import"./Dekningsgrad-fced8842.js";import"./useSøkerinfo-3096846c.js";import"./index-47edccfa.js";import"./annenForelderUtils-0aa532b4.js";import"./constants-c4bc2eb8.js";import"./LenkeKnapp-ee13c829.js";import"./InfoOmSøknaden-26941c35.js";import"./Sirkelmaske-d78a61bd.js";import"./Foreldrepar-2fb0bcd4.js";import"./InnholdMedIllustrasjon-e302fedc.js";import"./links-b36d21ab.js";import"./Periodene-7a4ae12e.js";import"./useOnValidSubmit-34cf285a.js";import"./useSaveLoadedRoute-bcb66eb1.js";import"./vedleggUtils-681932f9.js";import"./Attachment-a8e5b8d1.js";import"./eksisterendeSakUtils-1da04758.js";import"./velkommenUtils-8d8f7024.js";import"./Fieldset-b0352ef9.js";import"./formUtils-07817100.js";const A={søker:{fnr:"1212121313",fornavn:"Espen",etternavn:"Utvikler",kjønn:"M",fødselsdato:"1978-04-12",barn:[{fnr:"19047815714",fødselsdato:"2021-03-15",annenForelder:{fnr:"12038517080",fødselsdato:"1985-03-12",fornavn:"TALENTFULL",etternavn:"MYGG"},fornavn:"KLØKTIG",etternavn:"MIDTPUNKT",kjønn:"M"}]}},I=4,E="/soknad/uttaksplan-info",x={søknad:{type:"foreldrepenger",harGodkjentVilkår:!0,søkersituasjon:{situasjon:"fødsel",rolle:"far"},barn:{type:"født",fødselsdatoer:["2021-07-01"],antallBarn:"1",termindato:"2021-07-01"},annenForelder:{etternavn:"dfg",fornavn:"dsgdfg",fnr:"123123123",utenlandskFnr:!1,erUfør:!1,kanIkkeOppgis:!1,harRettPåForeldrepengerINorge:!1,harRettPåForeldrepengerIEØS:!1},søker:{erAleneOmOmsorg:!1,språkkode:"nb"},informasjonOmUtenlandsopphold:{tidligereOpphold:[],senereOpphold:[]},erEndringssøknad:!1,uttaksplan:[]},version:I,currentRoute:E,søknadGjelderEtNyttBarn:!0},D={FORELDREPENGER:250},L={farRundtFødsel:0,generellMinsterett:0,toTette:0},l={kontoer:D,minsteretter:L},P={FORELDREPENGER:200},_={farRundtFødsel:0,generellMinsterett:0,toTette:0},f={kontoer:P,minsteretter:_},v="/innsyn/v2/annenPartVedtak",a="/uttak-url/konto",o=x,M=A,Pr={title:"steps/uttaksplan-info/FarMedmorFødselOgMorHarIkkeRett",component:N,decorators:[u,F,O]},g=t=>s(R,{mock:n=>{n.onPost(v).replyOnce(200,void 0,T.FINISHED),n.onGet(a).replyOnce(200,t.stønadskonto100),n.onGet(a).replyOnce(200,t.stønadskonto80)},children:s(S,{søknad:t.context,søkerinfo:t.søkerinfo,children:s(U,{})})}),r=g.bind({});r.args={stønadskonto100:f,stønadskonto80:l,context:o,søkerinfo:M};const e=g.bind({});e.args={stønadskonto100:f,stønadskonto80:l,context:{...o,søknad:{...o.søknad,annenForelder:{...o.søknad.annenForelder,erUfør:!0}}},søkerinfo:M};var k,p,i;r.parameters={...r.parameters,docs:{...(k=r.parameters)==null?void 0:k.docs,source:{originalSource:`args => {
  const restMock = (apiMock: MockAdapter) => {
    apiMock.onPost(UTTAKSPLAN_ANNEN_URL).replyOnce(200, undefined, RequestStatus.FINISHED);
    apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);
    apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);
  };
  return <AxiosMock mock={restMock}>\r
            <ForeldrepengerStateMock søknad={(args.context as ForeldrepengesøknadContextState)} søkerinfo={(args.søkerinfo as SøkerinfoDTO)}>\r
                <UttaksplanInfo />\r
            </ForeldrepengerStateMock>\r
        </AxiosMock>;
}`,...(i=(p=r.parameters)==null?void 0:p.docs)==null?void 0:i.source}}};var d,c,m;e.parameters={...e.parameters,docs:{...(d=e.parameters)==null?void 0:d.docs,source:{originalSource:`args => {
  const restMock = (apiMock: MockAdapter) => {
    apiMock.onPost(UTTAKSPLAN_ANNEN_URL).replyOnce(200, undefined, RequestStatus.FINISHED);
    apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);
    apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);
  };
  return <AxiosMock mock={restMock}>\r
            <ForeldrepengerStateMock søknad={(args.context as ForeldrepengesøknadContextState)} søkerinfo={(args.søkerinfo as SøkerinfoDTO)}>\r
                <UttaksplanInfo />\r
            </ForeldrepengerStateMock>\r
        </AxiosMock>;
}`,...(m=(c=e.parameters)==null?void 0:c.docs)==null?void 0:m.source}}};const _r=["UttaksplanDerMorIkkeHarRettPåForeldrepenger","UttaksplanDerMorIkkeHarRettPåForeldrepengerOgMorErUfør"];export{r as UttaksplanDerMorIkkeHarRettPåForeldrepenger,e as UttaksplanDerMorIkkeHarRettPåForeldrepengerOgMorErUfør,_r as __namedExportsOrder,Pr as default};
//# sourceMappingURL=FarMedmorFodselOgMorHarIkkeRett.stories-768d9256.js.map
