{"version":3,"file":"mapSøkerinfoDTO-f7746f82.js","sources":["../../src/app/routes/routes.ts","../../src/app/context/ForeldrepengesøknadContextConfig.ts","../../src/app/context/action/actionCreator.ts","../../src/app/context/reducer/foreldrepengesøknadReducer.ts","../../src/app/context/ForeldrepengesøknadContext.tsx","../../src/uttaksplan/types/SenEndringÅrsak.ts","../../src/app/steps/uttaksplan-info/utils/Periodene.ts","../../src/app/context/hooks/useForeldrepengesøknadContext.ts","../../src/app/utils/mapSøkerinfoDTO.ts"],"sourcesContent":["enum SøknadRoutes {\n    VELKOMMEN = '/',\n    SØKERSITUASJON = '/soknad/sokersituasjon',\n    OM_BARNET = '/soknad/om-barnet',\n    ANNEN_FORELDER = '/soknad/annen-forelder',\n    UTTAKSPLAN_INFO = '/soknad/uttaksplan-info',\n    UTTAKSPLAN = '/soknad/uttaksplan',\n    UTENLANDSOPPHOLD = '/soknad/utenlandsopphold',\n    INNTEKTSINFORMASJON = '/soknad/inntektsinformasjon',\n    MANGLENDE_VEDLEGG = '/soknad/manglende-vedlegg',\n    OPPSUMMERING = '/soknad/oppsummering',\n    SØKNAD_SENDT = '/soknad/soknad-sendt',\n    IKKE_MYNDIG = 'ikke-myndig',\n}\n\nexport default SøknadRoutes;\n","import SøknadRoutes from 'app/routes/routes';\nimport { EksisterendeSak } from 'app/types/EksisterendeSak';\nimport { Kvittering } from 'app/types/Kvittering';\nimport { Sak } from 'app/types/Sak';\nimport { Situasjon } from 'app/types/Situasjon';\nimport { Søkerinfo } from 'app/types/Søkerinfo';\nimport { Søkerrolle } from 'app/types/Søkerrolle';\nimport { Periode } from 'uttaksplan/types/Periode';\nimport { BarnFraNesteSak } from './types/Barn';\nimport { Søknad } from './types/Søknad';\nimport UttaksplanInfo from './types/UttaksplanInfo';\n\nexport interface ForeldrepengesøknadContextState {\n    version: number;\n    currentRoute: SøknadRoutes;\n    søknad: Søknad;\n    søkerinfo: Søkerinfo;\n    saker: Sak[];\n    kvittering: Kvittering;\n    antallUkerIUttaksplan: number;\n    perioderSomSkalSendesInn: Periode[];\n    harUttaksplanBlittSlettet: boolean;\n    brukerSvarteJaPåAutoJustering: boolean | undefined;\n    søknadGjelderEtNyttBarn: boolean;\n    harEksisterendeSak?: boolean;\n    harAnnenPartEksisterendeSak?: boolean;\n    annenPartEksisterendeSakSaksnummer?: string;\n    uttaksplanInfo?: UttaksplanInfo;\n    eksisterendeSak?: EksisterendeSak;\n    endringstidspunkt?: Date;\n    barnFraNesteSak?: BarnFraNesteSak;\n    annenPartsUttakErLagtTilIPlan?: boolean;\n}\n\nexport const foreldrepengesøknadInitialState: ForeldrepengesøknadContextState = {\n    version: 5,\n    currentRoute: SøknadRoutes.VELKOMMEN,\n    søknad: {\n        type: 'foreldrepenger',\n        harGodkjentVilkår: false,\n        søkersituasjon: {\n            rolle: '' as Søkerrolle,\n            situasjon: '' as Situasjon,\n        },\n        barn: undefined!,\n        annenForelder: {\n            kanIkkeOppgis: false,\n        },\n        søker: {\n            harHattAnnenInntektSiste10Mnd: undefined!,\n            harJobbetSomFrilansSiste10Mnd: undefined!,\n            harJobbetSomSelvstendigNæringsdrivendeSiste10Mnd: undefined!,\n            erAleneOmOmsorg: undefined!,\n            språkkode: 'nb',\n        },\n        informasjonOmUtenlandsopphold: {\n            iNorgeNeste12Mnd: undefined!,\n            iNorgeSiste12Mnd: undefined!,\n            tidligereOpphold: [],\n            senereOpphold: [],\n        },\n        erEndringssøknad: false,\n        dekningsgrad: undefined!,\n        uttaksplan: [],\n        harGodkjentOppsummering: false,\n        vedlegg: [],\n        tilleggsopplysninger: {\n            begrunnelseForSenEndring: undefined!,\n        },\n        saksnummer: undefined,\n        ønskerJustertUttakVedFødsel: undefined,\n    },\n    søkerinfo: undefined!,\n    saker: [],\n    uttaksplanInfo: undefined,\n    antallUkerIUttaksplan: undefined!,\n    kvittering: undefined!,\n    endringstidspunkt: undefined,\n    perioderSomSkalSendesInn: [],\n    harUttaksplanBlittSlettet: false,\n    brukerSvarteJaPåAutoJustering: undefined,\n    søknadGjelderEtNyttBarn: undefined!,\n    barnFraNesteSak: undefined,\n    annenPartsUttakErLagtTilIPlan: undefined,\n};\n","import { Locale } from '@navikt/fp-common';\nimport SøknadRoutes from 'app/routes/routes';\nimport { Attachment } from 'app/types/Attachment';\nimport { Dekningsgrad } from 'app/types/Dekningsgrad';\nimport { EksisterendeSak } from 'app/types/EksisterendeSak';\nimport { Kvittering } from 'app/types/Kvittering';\nimport { Sak } from 'app/types/Sak';\nimport { Søkerinfo } from 'app/types/Søkerinfo';\nimport { Periode } from 'uttaksplan/types/Periode';\nimport { ForeldrepengesøknadContextState } from '../ForeldrepengesøknadContextConfig';\nimport AnnenForelder from '../types/AnnenForelder';\nimport Barn, { BarnFraNesteSak } from '../types/Barn';\nimport InformasjonOmUtenlandsopphold from '../types/InformasjonOmUtenlandsopphold';\nimport Søker from '../types/Søker';\nimport Søkersituasjon from '../types/Søkersituasjon';\nimport { Søknad } from '../types/Søknad';\nimport { Tilleggsopplysninger } from '../types/Tilleggsopplysninger';\nimport UttaksplanInfo from '../types/UttaksplanInfo';\n\nexport enum ForeldrepengesøknadContextActionKeys {\n    SET_HARGODKJENTVILKÅR = 'setVelkommen',\n    SET_ER_ENDRINGSSØKNAD = 'setErEndringssøknad',\n    SET_SØKERSITUASJON = 'setSøkersituasjon',\n    SET_OMBARNET = 'setOmBarnet',\n    AVBRYT_SØKNAD = 'avbrytSøknad',\n    UPDATE_CURRENT_ROUTE = 'updateCurrentRoute',\n    APPLY_STORED_STATE = 'applyStoredState',\n    SET_ANNENFORELDER = 'setAnnenForelder',\n    SET_SØKERINFO = 'setSøkerinfo',\n    SET_SØKER = 'setSøker',\n    SET_SØKNAD_GJELDER_ET_NYTT_BARN = 'setSøknadGjelderEtNyttBarn',\n    SET_INFORMASJON_OM_UTENLANDSOPPHOLD = 'setInformasjonOmUtenlandsopphold',\n    SET_INFORMASJON_OM_ANDRE_INNTEKTER = 'setInformasjonOmAndreInntekter',\n    SET_SAKER = 'setSaker',\n    SET_UTTAKSPLAN_INFO = 'setUttaksplanInfo',\n    SET_DEKNINGSGRAD = 'setDekningsgrad',\n    SET_VEDLEGG = 'setVedlegg',\n    LAG_UTTAKSPLANFORSLAG = 'lagUttaksplanforslag',\n    SET_UTTAKSPLAN = 'setUttaksplan',\n    SET_PERIODER_SOM_SKAL_SENDES_INN = 'setPerioderSomSkalSendesInn',\n    SET_SØKNAD = 'setSøknad',\n    SET_EKSISTERENDE_SAK = 'setEksisterendeSak',\n    SET_GODKJENT_OPPSUMMERING = 'setGodkjentOppsummering',\n    SET_KVITTERING = 'setKvittering',\n    SET_ANTALL_UKER_I_UTTAKSPLAN = 'setAntallUkerIUttaksplan',\n    SET_ENDRINGSTIDSPUNKT = 'setEndringstidspunkt',\n    SET_SPRÅKKODE = 'setSpråkkode',\n    SET_TILLEGGSOPPLYSNINGER = 'setTilleggsopplysninger',\n    SLETT_UTTAKSPLAN = 'slettUttaksplan',\n    SET_UTTAKSPLAN_SLETTET = 'setUttaksplanSlettet',\n    SET_ØNSKER_JUSTERT_UTTAK_VED_FØDSEL = 'setØnskerJustertUttakVedFødsel',\n    SET_BRUKER_SVARTE_JA_PÅ_AUTO_JUSTERING = 'setBrukerSvarteJaPAutoJustering',\n    SET_BARN_FRA_NESTE_SAK = 'setBarnFraNesteSak',\n    SET_ANNEN_PARTS_UTTAK_ER_LAGT_TIL_I_PLAN = 'setAnnenPartsUttakErLagtTilIPlan',\n}\n\ninterface SetVelkommen {\n    type: ForeldrepengesøknadContextActionKeys.SET_HARGODKJENTVILKÅR;\n    payload: boolean;\n}\n\nconst setVelkommen = (payload: boolean): SetVelkommen => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_HARGODKJENTVILKÅR,\n    payload,\n});\n\ninterface SetErEndringssøknad {\n    type: ForeldrepengesøknadContextActionKeys.SET_ER_ENDRINGSSØKNAD;\n    payload: boolean;\n}\n\nconst setErEndringssøknad = (payload: boolean): SetErEndringssøknad => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_ER_ENDRINGSSØKNAD,\n    payload,\n});\n\ninterface SetSøkersituasjon {\n    type: ForeldrepengesøknadContextActionKeys.SET_SØKERSITUASJON;\n    payload: Søkersituasjon;\n}\n\nconst setSøkersituasjon = (payload: Søkersituasjon): SetSøkersituasjon => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_SØKERSITUASJON,\n    payload,\n});\n\ninterface SetOmBarnet {\n    type: ForeldrepengesøknadContextActionKeys.SET_OMBARNET;\n    payload: Barn;\n}\n\nconst setOmBarnet = (payload: Barn): SetOmBarnet => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_OMBARNET,\n    payload,\n});\n\ninterface AvbrytSøknad {\n    type: ForeldrepengesøknadContextActionKeys.AVBRYT_SØKNAD;\n}\n\nconst avbrytSøknad = (): AvbrytSøknad => ({\n    type: ForeldrepengesøknadContextActionKeys.AVBRYT_SØKNAD,\n});\n\ninterface UpdateCurrentRoute {\n    type: ForeldrepengesøknadContextActionKeys.UPDATE_CURRENT_ROUTE;\n    payload: SøknadRoutes;\n}\n\nconst updateCurrentRoute = (payload: SøknadRoutes): UpdateCurrentRoute => ({\n    type: ForeldrepengesøknadContextActionKeys.UPDATE_CURRENT_ROUTE,\n    payload,\n});\n\ninterface ApplyStoredState {\n    type: ForeldrepengesøknadContextActionKeys.APPLY_STORED_STATE;\n    payload: ForeldrepengesøknadContextState;\n}\n\nconst applyStoredState = (payload: ForeldrepengesøknadContextState): ApplyStoredState => ({\n    type: ForeldrepengesøknadContextActionKeys.APPLY_STORED_STATE,\n    payload,\n});\n\ninterface SetAnnenForelder {\n    type: ForeldrepengesøknadContextActionKeys.SET_ANNENFORELDER;\n    payload: AnnenForelder;\n}\n\nconst setAnnenForelder = (payload: AnnenForelder): SetAnnenForelder => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_ANNENFORELDER,\n    payload,\n});\n\ninterface SetSøkerinfo {\n    type: ForeldrepengesøknadContextActionKeys.SET_SØKERINFO;\n    payload: Søkerinfo;\n}\n\nconst setSøkerinfo = (payload: Søkerinfo): SetSøkerinfo => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_SØKERINFO,\n    payload,\n});\n\ninterface SetSøker {\n    type: ForeldrepengesøknadContextActionKeys.SET_SØKER;\n    payload: Søker;\n}\n\nconst setSøker = (payload: Søker): SetSøker => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_SØKER,\n    payload,\n});\n\ninterface SetInformasjonOmUtenlandsopphold {\n    type: ForeldrepengesøknadContextActionKeys.SET_INFORMASJON_OM_UTENLANDSOPPHOLD;\n    payload: InformasjonOmUtenlandsopphold;\n}\n\nconst setInformasjonOmUtenlandsopphold = (\n    payload: InformasjonOmUtenlandsopphold\n): SetInformasjonOmUtenlandsopphold => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_INFORMASJON_OM_UTENLANDSOPPHOLD,\n    payload,\n});\n\ninterface SetSaker {\n    type: ForeldrepengesøknadContextActionKeys.SET_SAKER;\n    payload: Sak[];\n}\n\nconst setSaker = (payload: Sak[]): SetSaker => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_SAKER,\n    payload,\n});\n\ninterface SetUttaksplanInfo {\n    type: ForeldrepengesøknadContextActionKeys.SET_UTTAKSPLAN_INFO;\n    payload: UttaksplanInfo;\n}\n\nconst setUttaksplanInfo = (payload: UttaksplanInfo): SetUttaksplanInfo => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_UTTAKSPLAN_INFO,\n    payload,\n});\n\ninterface SetTilleggsopplysninger {\n    type: ForeldrepengesøknadContextActionKeys.SET_TILLEGGSOPPLYSNINGER;\n    payload: Tilleggsopplysninger;\n}\n\nconst setTilleggsopplysninger = (payload: Tilleggsopplysninger): SetTilleggsopplysninger => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_TILLEGGSOPPLYSNINGER,\n    payload,\n});\n\ninterface SetDekningsgrad {\n    type: ForeldrepengesøknadContextActionKeys.SET_DEKNINGSGRAD;\n    dekningsgrad: Dekningsgrad;\n}\n\nconst setDekningsgrad = (dekningsgrad: Dekningsgrad): SetDekningsgrad => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_DEKNINGSGRAD,\n    dekningsgrad,\n});\n\ninterface SetVedlegg {\n    type: ForeldrepengesøknadContextActionKeys.SET_VEDLEGG;\n    vedlegg: Attachment[];\n}\n\nconst setVedlegg = (vedlegg: Attachment[]): SetVedlegg => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_VEDLEGG,\n    vedlegg,\n});\n\ninterface LagUttaksplanforslag {\n    type: ForeldrepengesøknadContextActionKeys.LAG_UTTAKSPLANFORSLAG;\n    payload: Periode[];\n}\n\nconst lagUttaksplanforslag = (payload: Periode[]): LagUttaksplanforslag => ({\n    type: ForeldrepengesøknadContextActionKeys.LAG_UTTAKSPLANFORSLAG,\n    payload,\n});\n\ninterface SetUttaksplan {\n    type: ForeldrepengesøknadContextActionKeys.SET_UTTAKSPLAN;\n    payload: Periode[];\n}\n\nconst setUttaksplan = (payload: Periode[]): SetUttaksplan => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_UTTAKSPLAN,\n    payload,\n});\n\ninterface SetPerioderSomSkalSendesInn {\n    type: ForeldrepengesøknadContextActionKeys.SET_PERIODER_SOM_SKAL_SENDES_INN;\n    payload: Periode[];\n}\n\nconst setPerioderSomSkalSendesInn = (payload: Periode[]): SetPerioderSomSkalSendesInn => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_PERIODER_SOM_SKAL_SENDES_INN,\n    payload,\n});\n\ninterface SetSøknadGjelderEtNyttBarn {\n    type: ForeldrepengesøknadContextActionKeys.SET_SØKNAD_GJELDER_ET_NYTT_BARN;\n    payload: boolean;\n}\n\nconst setSøknadGjelderEtNyttBarn = (payload: boolean): SetSøknadGjelderEtNyttBarn => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_SØKNAD_GJELDER_ET_NYTT_BARN,\n    payload,\n});\n\ninterface SetSøknad {\n    type: ForeldrepengesøknadContextActionKeys.SET_SØKNAD;\n    payload: Søknad;\n}\n\nconst setSøknad = (payload: Søknad): SetSøknad => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_SØKNAD,\n    payload,\n});\n\ninterface SetEksisterendeSak {\n    type: ForeldrepengesøknadContextActionKeys.SET_EKSISTERENDE_SAK;\n    payload: EksisterendeSak | undefined;\n}\n\nconst setEksisterendeSak = (payload: EksisterendeSak | undefined): SetEksisterendeSak => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_EKSISTERENDE_SAK,\n    payload,\n});\n\ninterface SetGodkjentOppsummering {\n    type: ForeldrepengesøknadContextActionKeys.SET_GODKJENT_OPPSUMMERING;\n    payload: boolean;\n}\n\nconst setGodkjentOppsummering = (payload: boolean): SetGodkjentOppsummering => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_GODKJENT_OPPSUMMERING,\n    payload,\n});\n\ninterface SetAntallUkerIUttaksplan {\n    type: ForeldrepengesøknadContextActionKeys.SET_ANTALL_UKER_I_UTTAKSPLAN;\n    payload: number;\n}\n\nconst setAntallUkerIUttaksplan = (payload: number): SetAntallUkerIUttaksplan => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_ANTALL_UKER_I_UTTAKSPLAN,\n    payload,\n});\n\ninterface SetEndringstidspunkt {\n    type: ForeldrepengesøknadContextActionKeys.SET_ENDRINGSTIDSPUNKT;\n    payload: Date | undefined;\n}\n\nconst setEndringstidspunkt = (payload: Date | undefined): SetEndringstidspunkt => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_ENDRINGSTIDSPUNKT,\n    payload,\n});\n\ninterface SetKvittering {\n    type: ForeldrepengesøknadContextActionKeys.SET_KVITTERING;\n    payload: Kvittering;\n}\n\nconst setKvittering = (payload: Kvittering): SetKvittering => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_KVITTERING,\n    payload,\n});\n\ninterface SetSpråkkode {\n    type: ForeldrepengesøknadContextActionKeys.SET_SPRÅKKODE;\n    payload: Locale;\n}\n\nconst setSpråkkode = (payload: Locale): SetSpråkkode => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_SPRÅKKODE,\n    payload,\n});\n\ninterface SlettUttaksplan {\n    type: ForeldrepengesøknadContextActionKeys.SLETT_UTTAKSPLAN;\n    payload: Periode[];\n}\n\nconst slettUttaksplan = (payload: Periode[]): SlettUttaksplan => ({\n    type: ForeldrepengesøknadContextActionKeys.SLETT_UTTAKSPLAN,\n    payload,\n});\n\ninterface SetUttaksplanSlettet {\n    type: ForeldrepengesøknadContextActionKeys.SET_UTTAKSPLAN_SLETTET;\n    uttaksplanHarBlittSlettet: boolean;\n}\n\nconst setUttaksplanSlettet = (uttaksplanHarBlittSlettet: boolean): SetUttaksplanSlettet => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_UTTAKSPLAN_SLETTET,\n    uttaksplanHarBlittSlettet,\n});\n\ninterface SetØnskerJustertUttakVedFødsel {\n    type: ForeldrepengesøknadContextActionKeys.SET_ØNSKER_JUSTERT_UTTAK_VED_FØDSEL;\n    payload: boolean | undefined;\n}\n\nconst setØnskerJustertUttakVedFødsel = (payload: boolean | undefined): SetØnskerJustertUttakVedFødsel => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_ØNSKER_JUSTERT_UTTAK_VED_FØDSEL,\n    payload,\n});\n\ninterface SetBrukerSvarteJaPåAutoJustering {\n    type: ForeldrepengesøknadContextActionKeys.SET_BRUKER_SVARTE_JA_PÅ_AUTO_JUSTERING;\n    payload: boolean | undefined;\n}\n\nconst setBrukerSvarteJaPåAutoJustering = (payload: boolean | undefined): SetBrukerSvarteJaPåAutoJustering => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_BRUKER_SVARTE_JA_PÅ_AUTO_JUSTERING,\n    payload,\n});\n\ninterface SetBarnFraNesteSak {\n    type: ForeldrepengesøknadContextActionKeys.SET_BARN_FRA_NESTE_SAK;\n    payload: BarnFraNesteSak | undefined;\n}\n\nconst setBarnFraNesteSak = (payload: BarnFraNesteSak | undefined): SetBarnFraNesteSak => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_BARN_FRA_NESTE_SAK,\n    payload,\n});\n\ninterface SetAnnenPartsUttakErLagtTilIPlan {\n    type: ForeldrepengesøknadContextActionKeys.SET_ANNEN_PARTS_UTTAK_ER_LAGT_TIL_I_PLAN;\n    payload: boolean;\n}\n\nconst setAnnenPartsUttakErLagtTilIPlan = (payload: boolean): SetAnnenPartsUttakErLagtTilIPlan => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_ANNEN_PARTS_UTTAK_ER_LAGT_TIL_I_PLAN,\n    payload,\n});\nexport type ForeldrepengesøknadContextAction =\n    | SetVelkommen\n    | SetErEndringssøknad\n    | SetSøkersituasjon\n    | SetOmBarnet\n    | AvbrytSøknad\n    | UpdateCurrentRoute\n    | SetAnnenForelder\n    | SetSøkerinfo\n    | SetSøker\n    | SetSøknadGjelderEtNyttBarn\n    | SetInformasjonOmUtenlandsopphold\n    | SetSaker\n    | SetUttaksplanInfo\n    | SetTilleggsopplysninger\n    | SetDekningsgrad\n    | ApplyStoredState\n    | SetVedlegg\n    | SetSøknad\n    | SetEksisterendeSak\n    | LagUttaksplanforslag\n    | SetGodkjentOppsummering\n    | SetAntallUkerIUttaksplan\n    | SetEndringstidspunkt\n    | SetKvittering\n    | SetSpråkkode\n    | SetUttaksplan\n    | SetPerioderSomSkalSendesInn\n    | SlettUttaksplan\n    | SetUttaksplanSlettet\n    | SetØnskerJustertUttakVedFødsel\n    | SetBrukerSvarteJaPåAutoJustering\n    | SetBarnFraNesteSak\n    | SetAnnenPartsUttakErLagtTilIPlan;\n\nexport default {\n    setVelkommen,\n    setErEndringssøknad,\n    setSøkersituasjon,\n    setOmBarnet,\n    avbrytSøknad,\n    updateCurrentRoute,\n    applyStoredState,\n    setAnnenForelder,\n    setSøkerinfo,\n    setSøker,\n    setInformasjonOmUtenlandsopphold,\n    setSaker,\n    setUttaksplanInfo,\n    setTilleggsopplysninger,\n    setDekningsgrad,\n    setVedlegg,\n    lagUttaksplanforslag,\n    setUttaksplan,\n    setSøknad,\n    setSøknadGjelderEtNyttBarn,\n    setEksisterendeSak,\n    setGodkjentOppsummering,\n    setKvittering,\n    setAntallUkerIUttaksplan,\n    setEndringstidspunkt,\n    setSpråkkode,\n    setPerioderSomSkalSendesInn,\n    slettUttaksplan,\n    setUttaksplanSlettet,\n    setØnskerJustertUttakVedFødsel,\n    setBrukerSvarteJaPåAutoJustering,\n    setBarnFraNesteSak,\n    setAnnenPartsUttakErLagtTilIPlan,\n};\n","import { Attachment } from 'app/types/Attachment';\nimport { AttachmentType } from 'app/types/AttachmentType';\nimport { ForeldrepengesøknadContextAction, ForeldrepengesøknadContextActionKeys } from '../action/actionCreator';\nimport { ForeldrepengesøknadContextState, foreldrepengesøknadInitialState } from '../ForeldrepengesøknadContextConfig';\n\nconst finnVedleggAvType = (type: AttachmentType, alleVedlegg: Attachment[]): Attachment[] | undefined => {\n    const vedleggAvType = alleVedlegg.filter((v) => v.type === type);\n    return vedleggAvType.length > 0 ? vedleggAvType : undefined;\n};\n\nconst foreldrepengesøknadReducer = (\n    state: ForeldrepengesøknadContextState,\n    action: ForeldrepengesøknadContextAction\n): ForeldrepengesøknadContextState => {\n    switch (action.type) {\n        case ForeldrepengesøknadContextActionKeys.SET_HARGODKJENTVILKÅR:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    harGodkjentVilkår: action.payload,\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_ER_ENDRINGSSØKNAD:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    erEndringssøknad: action.payload,\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_SØKERSITUASJON:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    søkersituasjon: action.payload,\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_OMBARNET:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    barn: {\n                        ...action.payload,\n                    },\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_ANNENFORELDER:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    annenForelder: action.payload,\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_INFORMASJON_OM_UTENLANDSOPPHOLD:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    informasjonOmUtenlandsopphold: {\n                        ...state.søknad.informasjonOmUtenlandsopphold,\n                        ...action.payload,\n                    },\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.AVBRYT_SØKNAD:\n            return {\n                ...foreldrepengesøknadInitialState,\n                søkerinfo: state.søkerinfo,\n                saker: state.saker,\n            };\n        case ForeldrepengesøknadContextActionKeys.UPDATE_CURRENT_ROUTE:\n            return {\n                ...state,\n                currentRoute: action.payload,\n            };\n        case ForeldrepengesøknadContextActionKeys.APPLY_STORED_STATE:\n            return {\n                ...state,\n                ...action.payload,\n            };\n\n        case ForeldrepengesøknadContextActionKeys.SET_SAKER:\n            return {\n                ...state,\n                saker: [...action.payload],\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_SØKERINFO:\n            return {\n                ...state,\n                søkerinfo: { ...action.payload },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_SØKER:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    søker: {\n                        ...action.payload,\n                    },\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_UTTAKSPLAN_INFO:\n            return {\n                ...state,\n                uttaksplanInfo: { ...action.payload },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_DEKNINGSGRAD:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    dekningsgrad: action.dekningsgrad,\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_EKSISTERENDE_SAK:\n            return {\n                ...state,\n                eksisterendeSak: action.payload,\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_BARN_FRA_NESTE_SAK:\n            return {\n                ...state,\n                barnFraNesteSak: action.payload,\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_VEDLEGG:\n            //TODO Legg til håndtering av fleire vedlegg\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    barn: {\n                        ...state.søknad.barn,\n                        dokumentasjonAvAleneomsorg:\n                            finnVedleggAvType(AttachmentType.ALENEOMSORG, action.vedlegg) ||\n                            state.søknad.barn.dokumentasjonAvAleneomsorg,\n                    },\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.LAG_UTTAKSPLANFORSLAG:\n        case ForeldrepengesøknadContextActionKeys.SLETT_UTTAKSPLAN:\n        case ForeldrepengesøknadContextActionKeys.SET_UTTAKSPLAN:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    uttaksplan: action.payload,\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_PERIODER_SOM_SKAL_SENDES_INN:\n            return {\n                ...state,\n                perioderSomSkalSendesInn: action.payload,\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_SØKNAD:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    ...action.payload,\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_SØKNAD_GJELDER_ET_NYTT_BARN:\n            return {\n                ...state,\n                søknadGjelderEtNyttBarn: action.payload,\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_GODKJENT_OPPSUMMERING:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    harGodkjentOppsummering: action.payload,\n                },\n            };\n\n        case ForeldrepengesøknadContextActionKeys.SET_TILLEGGSOPPLYSNINGER:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    tilleggsopplysninger: action.payload,\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_KVITTERING:\n            return {\n                ...state,\n                kvittering: action.payload,\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_ANTALL_UKER_I_UTTAKSPLAN:\n            return {\n                ...state,\n                antallUkerIUttaksplan: action.payload,\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_ENDRINGSTIDSPUNKT:\n            return {\n                ...state,\n                endringstidspunkt: action.payload,\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_SPRÅKKODE:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    søker: {\n                        ...state.søknad.søker,\n                        språkkode: action.payload,\n                    },\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_UTTAKSPLAN_SLETTET:\n            return {\n                ...state,\n                harUttaksplanBlittSlettet: action.uttaksplanHarBlittSlettet,\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_ØNSKER_JUSTERT_UTTAK_VED_FØDSEL:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    ønskerJustertUttakVedFødsel: action.payload,\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_BRUKER_SVARTE_JA_PÅ_AUTO_JUSTERING:\n            return {\n                ...state,\n                brukerSvarteJaPåAutoJustering: action.payload,\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_ANNEN_PARTS_UTTAK_ER_LAGT_TIL_I_PLAN:\n            return {\n                ...state,\n                annenPartsUttakErLagtTilIPlan: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default foreldrepengesøknadReducer;\n","import React, { createContext, Dispatch, FunctionComponent, ReactNode, useMemo, useReducer } from 'react';\nimport { ForeldrepengesøknadContextAction } from './action/actionCreator';\nimport { ForeldrepengesøknadContextState, foreldrepengesøknadInitialState } from './ForeldrepengesøknadContextConfig';\nimport foreldrepengesøknadReducer from './reducer/foreldrepengesøknadReducer';\n\ninterface ForeldrepengesøknadContextData {\n    state: ForeldrepengesøknadContextState;\n    dispatch: Dispatch<ForeldrepengesøknadContextAction>;\n}\n\nexport const ForeldrepengesøknadContext = createContext<ForeldrepengesøknadContextData>(null!);\n\ninterface Props {\n    children: ReactNode;\n}\n\nconst ForeldrepengesøknadContextProvider: FunctionComponent<Props> = ({ children }) => {\n    const [state, dispatch] = useReducer(foreldrepengesøknadReducer, foreldrepengesøknadInitialState);\n\n    const contextValue = useMemo(() => {\n        return { state, dispatch };\n    }, [state, dispatch]);\n\n    return <ForeldrepengesøknadContext.Provider value={contextValue}>{children}</ForeldrepengesøknadContext.Provider>;\n};\n\nexport default ForeldrepengesøknadContextProvider;\n","export enum SenEndringÅrsak {\n    'Sykdom' = 'SYKDOM',\n    'Uttak' = 'UTTAK',\n    'SykdomOgUttak' = 'SYKDOM_OG_UTTAK',\n    'InstitusjonSøker' = 'INSTITUSJONSOPPHOLD_SØKER',\n    'InstitusjonBarnet' = 'INSTITUSJONSOPPHOLD_BARNET',\n    'Arbeid' = 'ARBEID',\n    'ArbeidOgUttak' = 'ARBEID_OG_UTTAK',\n    'Ingen' = 'INGEN',\n}\n","import { Forelder } from 'app/types/Forelder';\nimport dayjs from 'dayjs';\nimport {\n    ForeldrepengerFørFødselUttaksperiode,\n    InfoPeriode,\n    isForeldrepengerFørFødselUttaksperiode,\n    isHull,\n    isInfoPeriode,\n    isOppholdsperiode,\n    isOverføringsperiode,\n    isPeriodeUtenUttak,\n    isPeriodeUtenUttakUtsettelse,\n    isUtsettelsePgaFerie,\n    isUtsettelsesperiode,\n    isUttaksperiode,\n    Oppholdsperiode,\n    Overføringsperiode,\n    Periode,\n    PeriodeHull,\n    Periodetype,\n    PeriodeUtenUttak,\n    Utsettelsesperiode,\n    Uttaksperiode,\n} from 'uttaksplan/types/Periode';\nimport { StønadskontoType } from 'uttaksplan/types/StønadskontoType';\nimport {\n    erUtsettelse,\n    erUtsettelseGrunnetPgaArbeid,\n    erUtsettelsePgaSykdom,\n    erUtsettelseTilbakeITid,\n    erUttakEllerOppholdMerEnnTreMånederSiden,\n    erUttakGrunnetSykdom,\n    erUttakTilbakeITid,\n} from 'uttaksplan/utils/periodeUtils';\nimport { Perioden } from './Perioden';\nimport { datoErInnenforTidsperiode, isValidTidsperiode, Tidsperioden } from './Tidsperioden';\nimport { Uttaksdagen } from './Uttaksdagen';\nimport { SenEndringÅrsak } from 'uttaksplan/types/SenEndringÅrsak';\nimport { finnAntallDagerÅTrekke } from './uttaksPlanStatus';\n\nexport const Periodene = (perioder: Periode[]) => ({\n    getPeriode: (id: string) => getPeriode(perioder, id),\n    getOpphold: () => getOpphold(perioder),\n    getUttak: () => getUttaksperioder(perioder),\n    getOverføringer: () => getOverføringer(perioder),\n    getHull: () => getHull(perioder),\n    getHullOgInfoOgPerioderUtenUttak: () => getHullOgInfoOgPerioderUtenUttak(perioder),\n    getInfoperioder: () => getInfoperioder(perioder),\n    getUtsettelser: () => getUtsettelser(perioder),\n    getPerioderEtterFamiliehendelsesdato: (dato: Date) => getPerioderEtterFamiliehendelsesdato(perioder, dato),\n    getPerioderFørFamiliehendelsesdato: (dato: Date) => getPerioderFørFamiliehendelsesdato(perioder, dato),\n    getPerioderMedUgyldigTidsperiode: () => getPeriodeMedUgyldigTidsperiode(perioder),\n    getPerioderMedFerieForForelder: (forelder: Forelder) => getPerioderMedFerieForForelder(perioder, forelder),\n    getFørstePerioderEtterFamiliehendelsesdato: (dato: Date) =>\n        getFørstePeriodeEtterFamiliehendelsesdato(perioder, dato),\n    getForeldrepengerFørTermin: () => getForeldrepengerFørTermin(perioder),\n    getFørsteUttaksdag: () => getFørsteUttaksdag(perioder),\n    getFørsteUttaksdagEtterSistePeriode: () => getFørsteUttaksdagEtterSistePeriode(perioder),\n    getFørsteUttaksdagEksluderInfoperioderOgFrittUttak: () =>\n        getFørsteUttaksdagEksluderInfoperioderOgFrittUttak(perioder),\n    getAntallUttaksdager: () => getAntallUttaksdager(perioder),\n    getAntallFeriedager: (forelder?: Forelder) => getAntallFeriedager(perioder, forelder),\n    finnOverlappendePerioder: (periode: Periode) => finnOverlappendePerioder(perioder, periode),\n    finnPeriodeMedDato: (dato: Date) => finnPeriodeMedDato(perioder, dato),\n    finnFørstePeriodeEtterDato: (dato: Date) => finnFørstePeriodeEtterDato(perioder, dato),\n    finnAlleForegåendePerioder: (periode: Periode) => finnPerioderFørPeriode(perioder, periode),\n    finnAllePåfølgendePerioder: (periode: Periode) => finnPerioderEtterPeriode(perioder, periode),\n    finnDenForegåendePerioden: (periode: Periode) => finnForrigePeriode(perioder, periode),\n    finnPåfølgendePeriode: (periode: Periode) => finnPåfølgendePeriode(perioder, periode),\n    forskyvPerioder: (uttaksdager: number) => forskyvPerioder(perioder, uttaksdager),\n    sort: () => [...perioder].sort(sorterPerioder),\n    finnSisteInfoperiode: () => finnSisteInfoperiode(perioder),\n});\n\nexport function sorterPerioder(p1: Periode, p2: Periode) {\n    if (isValidTidsperiode(p1.tidsperiode) === false || isValidTidsperiode(p2.tidsperiode) === false) {\n        if (isForeldrepengerFørFødselUttaksperiode(p1) && p1.skalIkkeHaUttakFørTermin) {\n            return -1;\n        }\n        return isValidTidsperiode(p1.tidsperiode) ? 1 : -1;\n    }\n    if (dayjs(p1.tidsperiode.fom).isSame(p2.tidsperiode.fom, 'day')) {\n        return isInfoPeriode(p1) ? -1 : 1;\n    }\n\n    if (Tidsperioden(p2.tidsperiode).erOmsluttetAv(p1.tidsperiode)) {\n        return 1;\n    }\n\n    return dayjs(p1.tidsperiode.fom).isBefore(p2.tidsperiode.fom, 'day') ? -1 : 1;\n}\n\nfunction getPeriode(perioder: Periode[], id: string): Periode | undefined {\n    return perioder.find((p) => p.id === id);\n}\n\nfunction getUttaksperioder(perioder: Periode[]): Uttaksperiode[] {\n    return perioder.filter((periode) => isUttaksperiode(periode)) as Uttaksperiode[];\n}\n\nfunction getUtsettelser(perioder: Periode[]): Utsettelsesperiode[] {\n    return perioder.filter((periode) => isUtsettelsesperiode(periode)) as Utsettelsesperiode[];\n}\n\nfunction getFerieUtsettelser(perioder: Periode[]): Utsettelsesperiode[] {\n    return perioder.filter((periode) => isUtsettelsePgaFerie(periode)) as Utsettelsesperiode[];\n}\n\nfunction getOverføringer(perioder: Periode[]): Overføringsperiode[] {\n    return perioder.filter((periode) => isOverføringsperiode(periode)) as Overføringsperiode[];\n}\n\nfunction getHull(perioder: Periode[]): PeriodeHull[] {\n    return perioder.filter((periode) => isHull(periode)) as PeriodeHull[];\n}\n\nfunction getHullOgInfoOgPerioderUtenUttak(perioder: Periode[]): Array<PeriodeHull | InfoPeriode | PeriodeUtenUttak> {\n    return perioder.filter(\n        (periode) => isHull(periode) || isInfoPeriode(periode) || isPeriodeUtenUttak(periode)\n    ) as Array<PeriodeHull | InfoPeriode | PeriodeUtenUttak>;\n}\n\nfunction getInfoperioder(perioder: Periode[]): InfoPeriode[] {\n    return perioder.filter((periode) => isInfoPeriode(periode)) as InfoPeriode[];\n}\n\nfunction getOpphold(perioder: Periode[]): Oppholdsperiode[] {\n    return perioder.filter((periode) => isOppholdsperiode(periode)) as Oppholdsperiode[];\n}\n\nfunction finnOverlappendePerioder(perioder: Periode[], periode: Periode): Periode[] {\n    return perioder.filter((p) => {\n        if (p.id === periode.id || !isValidTidsperiode(periode.tidsperiode)) {\n            return false;\n        }\n        const { fom, tom } = p.tidsperiode;\n        if (!fom || !tom) {\n            return false;\n        }\n        const fomEllerTomErInnenforTidsperiode =\n            datoErInnenforTidsperiode(fom, periode.tidsperiode) || datoErInnenforTidsperiode(tom, periode.tidsperiode);\n\n        const fomTomOmkranserTidsperiode =\n            dayjs(periode.tidsperiode.fom).isSameOrAfter(fom, 'day') &&\n            dayjs(periode.tidsperiode.tom).isSameOrBefore(tom, 'day');\n\n        return fomEllerTomErInnenforTidsperiode || fomTomOmkranserTidsperiode;\n    });\n}\n\nfunction finnPeriodeMedDato(perioder: Periode[], dato: Date): Periode | undefined {\n    return perioder.find((periode) => {\n        return dayjs(dato).isBetween(periode.tidsperiode.fom, periode.tidsperiode.tom, 'day', '[]');\n    });\n}\n\nfunction finnFørstePeriodeEtterDato(perioder: Periode[], dato: Date): Periode | undefined {\n    return perioder.find((periode) => {\n        return dayjs(periode.tidsperiode.fom).isAfter(dato, 'day');\n    });\n}\n\nfunction finnPerioderFørPeriode(perioder: Periode[], periode: Periode): Periode[] {\n    return perioder.filter((p) => dayjs(p.tidsperiode.tom).isBefore(periode.tidsperiode.fom, 'day'));\n}\n\nfunction finnPerioderEtterPeriode(perioder: Periode[], periode: Periode): Periode[] {\n    return perioder.filter((p) => dayjs(p.tidsperiode.fom).isAfter(periode.tidsperiode.tom, 'day'));\n}\n\nfunction finnForrigePeriode(perioder: Periode[], periode: Periode): Periode | undefined {\n    const foregåendePerioder = finnPerioderFørPeriode(perioder, periode);\n    if (foregåendePerioder.length > 0) {\n        return foregåendePerioder.pop();\n    }\n    return undefined;\n}\nfunction finnPåfølgendePeriode(perioder: Periode[], periode: Periode): Periode | undefined {\n    const påfølgendePerioder = finnPerioderEtterPeriode(perioder, periode);\n    if (påfølgendePerioder.length > 0) {\n        return påfølgendePerioder[0];\n    }\n    return undefined;\n}\nfunction forskyvPerioder(perioder: Periode[], uttaksdager: number): Periode[] {\n    let uttaksdagerCurrent = uttaksdager;\n\n    return perioder.reduce((result: Periode[], periode: Periode) => {\n        if (isUtsettelsesperiode(periode)) {\n            result.push(periode);\n\n            const dagerIPerioden = Perioden(periode).getAntallUttaksdager();\n\n            if (dagerIPerioden >= uttaksdagerCurrent) {\n                uttaksdagerCurrent = 0;\n            } else {\n                uttaksdagerCurrent -= dagerIPerioden;\n            }\n\n            return result;\n        }\n\n        if (\n            isInfoPeriode(periode) ||\n            isHull(periode) ||\n            isPeriodeUtenUttak(periode) ||\n            isPeriodeUtenUttakUtsettelse(periode)\n        ) {\n            const dagerIPerioden = Perioden(periode).getAntallUttaksdager();\n\n            if (dagerIPerioden > uttaksdagerCurrent) {\n                const forskyvetStartdato = Uttaksdagen(Uttaksdagen(periode.tidsperiode.fom).denneEllerNeste()).leggTil(\n                    uttaksdagerCurrent\n                );\n                const justertPeriode: Periode = {\n                    ...periode,\n                    tidsperiode: {\n                        fom: forskyvetStartdato,\n                        tom: periode.tidsperiode.tom,\n                    },\n                };\n\n                uttaksdagerCurrent = 0;\n\n                result.push(justertPeriode);\n                return result;\n            } else if (dagerIPerioden === uttaksdagerCurrent) {\n                uttaksdagerCurrent = 0;\n                return result;\n            } else {\n                uttaksdagerCurrent -= dagerIPerioden;\n                return result;\n            }\n        }\n\n        result.push(forskyvPeriode(periode, uttaksdagerCurrent));\n        return result;\n    }, []);\n}\n\nfunction forskyvPeriode(periode: Periode, uttaksdager: number): Periode {\n    if (uttaksdager === 0) {\n        return periode;\n    }\n\n    const forskyvetStartdato = Uttaksdagen(Uttaksdagen(periode.tidsperiode.fom).denneEllerNeste()).leggTil(uttaksdager);\n    return Perioden(periode).setStartdato(forskyvetStartdato);\n}\n\nfunction getPerioderFørFamiliehendelsesdato(perioder: Periode[], familiehendelsesdato: Date) {\n    return perioder.filter(\n        (periode) =>\n            isForeldrepengerFørFødselUttaksperiode(periode) ||\n            (isValidTidsperiode(periode.tidsperiode) &&\n                dayjs(periode.tidsperiode.fom).isBefore(familiehendelsesdato, 'day'))\n    );\n}\n\nfunction getPerioderEtterFamiliehendelsesdato(perioder: Periode[], familiehendelsesdato: Date) {\n    return perioder.filter(\n        (periode) =>\n            isValidTidsperiode(periode.tidsperiode) &&\n            dayjs(periode.tidsperiode.fom).isSameOrAfter(familiehendelsesdato, 'day') &&\n            isForeldrepengerFørFødselUttaksperiode(periode) === false\n    );\n}\n\nfunction getFørstePeriodeEtterFamiliehendelsesdato(\n    perioder: Periode[],\n    familiehendelsesdato: Date\n): Periode | undefined {\n    const aktuellePerioder = getPerioderEtterFamiliehendelsesdato(perioder, familiehendelsesdato).sort(sorterPerioder);\n    return aktuellePerioder.length > 0 ? aktuellePerioder[0] : undefined;\n}\n\nfunction getPeriodeMedUgyldigTidsperiode(perioder: Periode[]) {\n    return perioder.filter(\n        (periode) =>\n            isValidTidsperiode(periode.tidsperiode) === false &&\n            isForeldrepengerFørFødselUttaksperiode(periode) === false\n    );\n}\n\nfunction getFørsteUttaksdag(perioder: Periode[]): Date | undefined {\n    const førstePeriode = perioder\n        .filter((p) => p.tidsperiode.fom !== undefined)\n        .sort(sorterPerioder)\n        .shift();\n    if (førstePeriode) {\n        return førstePeriode.tidsperiode.fom;\n    }\n    return undefined;\n}\n\nfunction getFørsteUttaksdagEksluderInfoperioderOgFrittUttak(perioder: Periode[]): Date | undefined {\n    const førstePeriode = perioder\n        .filter(\n            (p) =>\n                p.tidsperiode.fom !== undefined &&\n                !isInfoPeriode(p) &&\n                !isPeriodeUtenUttak(p) &&\n                !isPeriodeUtenUttakUtsettelse(p)\n        )\n        .sort(sorterPerioder)\n        .shift();\n    if (førstePeriode) {\n        return førstePeriode.tidsperiode.fom;\n    }\n    return undefined;\n}\n\nfunction getAntallUttaksdager(perioder: Periode[]): number {\n    return perioder.reduce((dager, periode) => {\n        return dager + Perioden(periode).getAntallUttaksdager();\n    }, 0);\n}\n\nfunction getAntallFeriedager(perioder: Periode[], forelder?: Forelder): number {\n    return getFerieUtsettelser(perioder)\n        .filter((p) => (isValidTidsperiode(p.tidsperiode) && forelder ? p.forelder === forelder : true))\n        .map((p) => Tidsperioden(p.tidsperiode).getAntallUttaksdager())\n        .reduce((tot, curr) => tot + curr, 0);\n}\n\nfunction getPerioderMedFerieForForelder(perioder: Periode[], forelder: Forelder): Periode[] {\n    return perioder.filter((periode) => erPeriodeMedFerieForForelder(periode, forelder));\n}\n\nfunction getForeldrepengerFørTermin(perioder: Periode[]): ForeldrepengerFørFødselUttaksperiode | undefined {\n    const periode: Periode | undefined = perioder.find(\n        (p) => isUttaksperiode(p) && p.konto === StønadskontoType.ForeldrepengerFørFødsel\n    );\n    return periode ? (periode as ForeldrepengerFørFødselUttaksperiode) : undefined;\n}\n\nfunction getFørsteUttaksdagEtterSistePeriode(perioder: Periode[]): Date | undefined {\n    if (perioder.length === 0) {\n        return undefined;\n    }\n    return Uttaksdagen(perioder[perioder.length - 1].tidsperiode.tom).neste();\n}\n\nexport const erPeriodeMedFerieForForelder = (periode: Periode, forelder: Forelder): boolean => {\n    return isUtsettelsePgaFerie(periode) && periode.forelder === forelder;\n};\n\nfunction finnSisteInfoperiode(perioder: Periode[]) {\n    return perioder\n        .filter((p) => isInfoPeriode(p))\n        .sort(sorterPerioder)\n        .reverse()[0];\n}\n\nexport const getSeneEndringerSomKreverBegrunnelse = (uttaksplan: Periode[]): SenEndringÅrsak => {\n    const utsettelsesPerioder = uttaksplan.filter(erUtsettelse) as Utsettelsesperiode[];\n    const utsettelseSykdomKreverBegrunnelse = utsettelsesPerioder.some(erUtsettelsePgaSykdom);\n    const uttakSykdomKreverBegrunnelse = uttaksplan.some(erUttakGrunnetSykdom);\n    const utsettelseSykdomKreverBegrunnelsePgaSøktSent = utsettelsesPerioder\n        .filter(erUtsettelseTilbakeITid)\n        .some(erUtsettelsePgaSykdom);\n    const uttakSykdomKreverBegrunnelsePgaSøktSent = uttaksplan.filter(erUttakTilbakeITid).some(erUttakGrunnetSykdom);\n    const utsettelseArbeidKreverBegrunnelsePgaSøktSent = utsettelsesPerioder\n        .filter(erUtsettelseTilbakeITid)\n        .some(erUtsettelseGrunnetPgaArbeid);\n    const uttakKreverBegrunnelsePgaSøktSent = uttaksplan.some(erUttakEllerOppholdMerEnnTreMånederSiden);\n\n    if (utsettelseArbeidKreverBegrunnelsePgaSøktSent) {\n        return uttakKreverBegrunnelsePgaSøktSent ? SenEndringÅrsak.ArbeidOgUttak : SenEndringÅrsak.Arbeid;\n    }\n\n    if (\n        utsettelseSykdomKreverBegrunnelse ||\n        utsettelseSykdomKreverBegrunnelsePgaSøktSent ||\n        uttakSykdomKreverBegrunnelsePgaSøktSent ||\n        uttakSykdomKreverBegrunnelse\n    ) {\n        return uttakKreverBegrunnelsePgaSøktSent ? SenEndringÅrsak.SykdomOgUttak : SenEndringÅrsak.Sykdom;\n    }\n\n    return uttakKreverBegrunnelsePgaSøktSent ? SenEndringÅrsak.Uttak : SenEndringÅrsak.Ingen;\n};\n\nexport const uttaksplanErBareOpphold = (perioder: Periode[]): boolean => {\n    const perioderUtenInfoPerioder = perioder.filter((p) => !isInfoPeriode(p));\n\n    if (perioderUtenInfoPerioder.length === 0) {\n        return false;\n    }\n\n    return perioderUtenInfoPerioder.every((periode) => periode.type === Periodetype.Opphold);\n};\n\nexport const uttaksplanSlutterMedOpphold = (perioder: Periode[]): boolean => {\n    return (\n        perioder\n            .filter((p) => !isInfoPeriode(p))\n            .slice()\n            .reverse()\n            .findIndex((periode) => periode.type === Periodetype.Opphold) === 0\n    );\n};\n\nexport const uttaksplanStarterMedOpphold = (perioder: Periode[]): boolean => {\n    return perioder.filter((p) => !isInfoPeriode(p)).findIndex((periode) => periode.type === Periodetype.Opphold) === 0;\n};\n\nexport const getSumUttaksdagerÅTrekkeIPeriodene = (perioder: Periode[]) => {\n    return Math.floor(perioder.map((p) => finnAntallDagerÅTrekke(p)).reduce((prev, curr) => prev + curr, 0));\n};\n","import { useContext } from 'react';\nimport { ForeldrepengesøknadContext } from '../ForeldrepengesøknadContext';\n\nexport const useForeldrepengesøknadContext = () => useContext(ForeldrepengesøknadContext);\n","import { erMyndig } from '@navikt/fp-common';\nimport Arbeidsforhold from 'app/types/Arbeidsforhold';\nimport Person, { RegistrertAnnenForelder, RegistrertBarn } from 'app/types/Person';\nimport { Søkerinfo } from 'app/types/Søkerinfo';\nimport { SøkerinfoDTO, SøkerinfoDTOArbeidsforhold, SøkerinfoDTOBarn, SøkerinfoDTOSøker } from 'app/types/SøkerinfoDTO';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport timezone from 'dayjs/plugin/timezone';\nimport { ISOStringToDate } from './dateUtils';\n\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\nconst mapArbeidsforholdDTOToArbeidsforhold = (\n    arbeidsforhold: SøkerinfoDTOArbeidsforhold[] | undefined\n): Arbeidsforhold[] => {\n    if (!arbeidsforhold) {\n        return [];\n    }\n\n    return arbeidsforhold.map((arbforhold) => {\n        return {\n            arbeidsgiverId: arbforhold.arbeidsgiverId,\n            arbeidsgiverIdType: arbforhold.arbeidsgiverIdType,\n            arbeidsgiverNavn: arbforhold.arbeidsgiverNavn,\n            fom: dayjs.utc(arbforhold.fom).toDate(),\n            stillingsprosent: arbforhold.stillingsprosent,\n            tom: arbforhold.tom ? dayjs.utc(arbforhold.tom).toDate() : undefined,\n        };\n    });\n};\n\nconst mapSøkerinfoDTOSøkerToPerson = (personDTO: SøkerinfoDTOSøker): Person => {\n    return {\n        erMyndig: erMyndig(personDTO.fødselsdato),\n        etternavn: personDTO.etternavn,\n        fornavn: personDTO.fornavn,\n        fnr: personDTO.fnr,\n        fødselsdato: dayjs.utc(personDTO.fødselsdato).toDate(),\n        ikkeNordiskEøsLand: personDTO.ikkeNordiskEøsLand,\n        kjønn: personDTO.kjønn,\n        bankkonto: personDTO.bankkonto,\n    };\n};\n\nconst mapSøkerinfoDTOBarnToRegistrertBarn = (registrerteBarn: SøkerinfoDTOBarn[] | undefined): RegistrertBarn[] => {\n    if (!registrerteBarn) {\n        return [];\n    }\n\n    return registrerteBarn.map((barn) => {\n        const { annenForelder } = barn;\n        const oppgittAnnenForelder: RegistrertAnnenForelder | undefined = annenForelder\n            ? {\n                  etternavn: annenForelder.etternavn,\n                  fnr: annenForelder.fnr,\n                  fornavn: annenForelder.fornavn,\n              }\n            : undefined;\n\n        return {\n            etternavn: barn.etternavn,\n            fnr: barn.fnr,\n            fornavn: barn.fornavn,\n            mellomnavn: barn.mellomnavn,\n            fødselsdato: dayjs.utc(barn.fødselsdato).toDate(),\n            kjønn: barn.kjønn,\n            annenForelder: oppgittAnnenForelder,\n            dødsdato: ISOStringToDate(barn.dødsdato),\n        };\n    });\n};\n\nconst mapSøkerinfoDTOToSøkerinfo = (søkerinfoDTO: SøkerinfoDTO): Søkerinfo => {\n    const arbeidsforhold = mapArbeidsforholdDTOToArbeidsforhold(søkerinfoDTO.arbeidsforhold);\n    const person = mapSøkerinfoDTOSøkerToPerson(søkerinfoDTO.søker);\n    const registrerteBarn = mapSøkerinfoDTOBarnToRegistrertBarn(søkerinfoDTO.søker.barn);\n\n    return {\n        arbeidsforhold,\n        person,\n        registrerteBarn,\n    };\n};\n\nexport default mapSøkerinfoDTOToSøkerinfo;\n"],"names":["SøknadRoutes","foreldrepengesøknadInitialState","ForeldrepengesøknadContextActionKeys","setVelkommen","payload","setErEndringssøknad","setSøkersituasjon","setOmBarnet","avbrytSøknad","updateCurrentRoute","applyStoredState","setAnnenForelder","setSøkerinfo","setSøker","setInformasjonOmUtenlandsopphold","setSaker","setUttaksplanInfo","setTilleggsopplysninger","setDekningsgrad","dekningsgrad","setVedlegg","vedlegg","lagUttaksplanforslag","setUttaksplan","setPerioderSomSkalSendesInn","setSøknadGjelderEtNyttBarn","setSøknad","setEksisterendeSak","setGodkjentOppsummering","setAntallUkerIUttaksplan","setEndringstidspunkt","setKvittering","setSpråkkode","slettUttaksplan","setUttaksplanSlettet","uttaksplanHarBlittSlettet","setØnskerJustertUttakVedFødsel","setBrukerSvarteJaPåAutoJustering","setBarnFraNesteSak","setAnnenPartsUttakErLagtTilIPlan","actionCreator","finnVedleggAvType","type","alleVedlegg","vedleggAvType","v","foreldrepengesøknadReducer","state","action","AttachmentType","ForeldrepengesøknadContext","createContext","ForeldrepengesøknadContextProvider","children","dispatch","useReducer","contextValue","useMemo","jsx","SenEndringÅrsak","Periodene","perioder","id","getPeriode","getOpphold","getUttaksperioder","getOverføringer","getHull","getHullOgInfoOgPerioderUtenUttak","getInfoperioder","getUtsettelser","dato","getPerioderEtterFamiliehendelsesdato","getPerioderFørFamiliehendelsesdato","getPeriodeMedUgyldigTidsperiode","forelder","getPerioderMedFerieForForelder","getFørstePeriodeEtterFamiliehendelsesdato","getForeldrepengerFørTermin","getFørsteUttaksdag","getFørsteUttaksdagEtterSistePeriode","getFørsteUttaksdagEksluderInfoperioderOgFrittUttak","getAntallUttaksdager","getAntallFeriedager","periode","finnOverlappendePerioder","finnPeriodeMedDato","finnFørstePeriodeEtterDato","finnPerioderFørPeriode","finnPerioderEtterPeriode","finnForrigePeriode","finnPåfølgendePeriode","uttaksdager","forskyvPerioder","sorterPerioder","finnSisteInfoperiode","p1","p2","isValidTidsperiode","isForeldrepengerFørFødselUttaksperiode","dayjs","isInfoPeriode","Tidsperioden","p","isUttaksperiode","isUtsettelsesperiode","getFerieUtsettelser","isUtsettelsePgaFerie","isOverføringsperiode","isHull","isPeriodeUtenUttak","isOppholdsperiode","fom","tom","fomEllerTomErInnenforTidsperiode","datoErInnenforTidsperiode","fomTomOmkranserTidsperiode","foregåendePerioder","påfølgendePerioder","uttaksdagerCurrent","result","dagerIPerioden","Perioden","isPeriodeUtenUttakUtsettelse","forskyvetStartdato","Uttaksdagen","justertPeriode","forskyvPeriode","familiehendelsesdato","aktuellePerioder","førstePeriode","dager","tot","curr","erPeriodeMedFerieForForelder","StønadskontoType","getSeneEndringerSomKreverBegrunnelse","uttaksplan","utsettelsesPerioder","erUtsettelse","utsettelseSykdomKreverBegrunnelse","erUtsettelsePgaSykdom","uttakSykdomKreverBegrunnelse","erUttakGrunnetSykdom","utsettelseSykdomKreverBegrunnelsePgaSøktSent","erUtsettelseTilbakeITid","uttakSykdomKreverBegrunnelsePgaSøktSent","erUttakTilbakeITid","utsettelseArbeidKreverBegrunnelsePgaSøktSent","erUtsettelseGrunnetPgaArbeid","uttakKreverBegrunnelsePgaSøktSent","erUttakEllerOppholdMerEnnTreMånederSiden","uttaksplanErBareOpphold","perioderUtenInfoPerioder","Periodetype","uttaksplanSlutterMedOpphold","uttaksplanStarterMedOpphold","getSumUttaksdagerÅTrekkeIPeriodene","finnAntallDagerÅTrekke","prev","useForeldrepengesøknadContext","useContext","utc","timezone","mapArbeidsforholdDTOToArbeidsforhold","arbeidsforhold","arbforhold","mapSøkerinfoDTOSøkerToPerson","personDTO","erMyndig","mapSøkerinfoDTOBarnToRegistrertBarn","registrerteBarn","barn","annenForelder","oppgittAnnenForelder","ISOStringToDate","mapSøkerinfoDTOToSøkerinfo","søkerinfoDTO","person"],"mappings":"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"}