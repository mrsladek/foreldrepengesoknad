import{j as s}from"./jsx-runtime-670450c2.js";import{w as S}from"./withIntl-18345af6.js";import{w as F}from"./withRouter-7e1ac14f.js";import{w as O,F as A}from"./ForeldrepengerStateMock-8b539c5f.js";import{A as N}from"./AxiosMock-890ca912.js";import{R as U}from"./api-6bea2c1f.js";import{s as l,a as f}from"./stønadskontoDeltUttak100-ce558aaf.js";import{U as g}from"./UttaksplanInfo-a7758f10.js";import"./index-f1f749bf.js";import"./_commonjsHelpers-042e6b4d.js";import"./IntlProvider-0408c644.js";import"./validationUtils-04f510d3.js";import"./index-4d501b15.js";import"./Link-40b5f3c6.js";import"./clsx.m-266f4de0.js";import"./index-7e4e529b.js";import"./Label-bbf0f831.js";import"./index-96c5f47c.js";import"./extends-98964cd2.js";import"./useSøknad-c1188673.js";import"./dateUtils-16d28838.js";import"./getTypedFormComponents-660f6676.js";import"./mapSøkerinfoDTO-c67aaa18.js";import"./useFortsettSøknadSenere-4f1097ce.js";import"./amplitude-982d123d.js";import"./globalUtil-9d9e0ee4.js";import"./apiInterceptor-3e81dc62.js";import"./AnnenForelder-5c5d4f7f.js";import"./personUtils-f5e51df9.js";import"./Personkort-52d08fc8.js";import"./periodeUtils-569ef513.js";import"./Dekningsgrad-fced8842.js";import"./useSøkerinfo-ca8e2dd1.js";import"./index-47edccfa.js";import"./annenForelderUtils-d8d91920.js";import"./constants-c4bc2eb8.js";import"./LenkeKnapp-ee13c829.js";import"./InfoOmSøknaden-54c95c41.js";import"./Sirkelmaske-0fa9b673.js";import"./Foreldrepar-1b5c9e93.js";import"./InnholdMedIllustrasjon-ae156b7b.js";import"./links-b36d21ab.js";import"./Periodene-881c09d1.js";import"./useOnValidSubmit-61e0a308.js";import"./useSaveLoadedRoute-35555b7b.js";import"./vedleggUtils-1aeee34e.js";import"./Attachment-a8e5b8d1.js";import"./eksisterendeSakUtils-964a45fb.js";import"./velkommenUtils-224d62a1.js";import"./Fieldset-b0352ef9.js";import"./formUtils-2b618ea1.js";const T={søker:{fnr:"19047815714",fornavn:"TALENTFULL",etternavn:"MYGG",kjønn:"M",fødselsdato:"1978-04-19",barn:[{fnr:"21091981146",fødselsdato:"2021-03-15",annenForelder:{fnr:"12038517080",fødselsdato:"1985-03-12",fornavn:"LEALAUS",etternavn:"BÆREPOSE"},fornavn:"KLØKTIG",etternavn:"MIDTPUNKT",kjønn:"M"}]}},R=4,I="/soknad/uttaksplan-info",L={søknad:{type:"foreldrepenger",harGodkjentVilkår:!0,søkersituasjon:{situasjon:"fødsel",rolle:"far"},barn:{type:"født",fødselsdatoer:["2021-06-14"],antallBarn:"1",datoForAleneomsorg:"",dokumentasjonAvAleneomsorg:[]},annenForelder:{etternavn:"dfg",fornavn:"dfg",fnr:"02068629902",utenlandskFnr:!1,kanIkkeOppgis:!1,harRettPåForeldrepengerINorge:!0,erInformertOmSøknaden:!0},søker:{erAleneOmOmsorg:!1,språkkode:"nb"},informasjonOmUtenlandsopphold:{tidligereOpphold:[],senereOpphold:[]},erEndringssøknad:!1},version:R,currentRoute:I,søknadGjelderEtNyttBarn:!0},x="/innsyn/v2/annenPartVedtak",a="/uttak-url/konto",u=T,r=L,Lt={title:"steps/uttaksplan-info/FarMedmorFødselBeggeHarRett",component:g,decorators:[F,S,O]},M=o=>s(N,{mock:n=>{n.onPost(x).replyOnce(200,void 0,U.FINISHED),n.onGet(a).replyOnce(200,o.stønadskonto100),n.onGet(a).replyOnce(200,o.stønadskonto80)},children:s(A,{søknad:o.context,søkerinfo:o.søkerinfo,children:s(g,{})})}),t=M.bind({});t.args={stønadskonto100:l,stønadskonto80:f,context:r,søkerinfo:u};const e=M.bind({});e.args={stønadskonto100:l,stønadskonto80:f,context:{...r,søknad:{...r.søknad,barn:{...r.søknad.barn,fødselsdatoer:["2022-08-02"]}}},søkerinfo:u};var p,i,d;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`args => {
  const restMock = (apiMock: MockAdapter) => {
    apiMock.onPost(UTTAKSPLAN_ANNEN_URL).replyOnce(200, undefined, RequestStatus.FINISHED);
    apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);
    apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);
  };
  return <AxiosMock mock={restMock}>
            <ForeldrepengerStateMock søknad={(args.context as ForeldrepengesøknadContextState)} søkerinfo={(args.søkerinfo as SøkerinfoDTO)}>
                <UttaksplanInfo />
            </ForeldrepengerStateMock>
        </AxiosMock>;
}`,...(d=(i=t.parameters)==null?void 0:i.docs)==null?void 0:d.source}}};var k,m,c;e.parameters={...e.parameters,docs:{...(k=e.parameters)==null?void 0:k.docs,source:{originalSource:`args => {
  const restMock = (apiMock: MockAdapter) => {
    apiMock.onPost(UTTAKSPLAN_ANNEN_URL).replyOnce(200, undefined, RequestStatus.FINISHED);
    apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);
    apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);
  };
  return <AxiosMock mock={restMock}>
            <ForeldrepengerStateMock søknad={(args.context as ForeldrepengesøknadContextState)} søkerinfo={(args.søkerinfo as SøkerinfoDTO)}>
                <UttaksplanInfo />
            </ForeldrepengerStateMock>
        </AxiosMock>;
}`,...(c=(m=e.parameters)==null?void 0:m.docs)==null?void 0:c.source}}};const xt=["UttaksplanInfoFarMedmorFødselBeggeHarRett","UttaksplanInfoFarMedmorFødselBeggeHarRettFødselEtterWLB"];export{t as UttaksplanInfoFarMedmorFødselBeggeHarRett,e as UttaksplanInfoFarMedmorFødselBeggeHarRettFødselEtterWLB,xt as __namedExportsOrder,Lt as default};
//# sourceMappingURL=FarMedmorFodselBeggeHarRett.stories-ac32f5b9.js.map
