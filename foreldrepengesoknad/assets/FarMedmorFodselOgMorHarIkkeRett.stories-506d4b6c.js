import{j as s}from"./jsx-runtime-670450c2.js";import{w as F}from"./withIntl-2cd0961f.js";import{w as u}from"./withRouter-39938b0b.js";import{w as O,F as S}from"./ForeldrepengerStateMock-de0489e8.js";import{A as R}from"./AxiosMock-c0c886b0.js";import{F as N,U}from"./UttaksplanInfo-823e6b54.js";import{R as T}from"./api-7c8a1682.js";import"./index-f1f749bf.js";import"./_commonjsHelpers-042e6b4d.js";import"./IntlProvider-06e2693f.js";import"./validationUtils-9d5f1d7f.js";import"./index-4d501b15.js";import"./Link-40b5f3c6.js";import"./clsx.m-266f4de0.js";import"./index-7e4e529b.js";import"./Label-bbf0f831.js";import"./index-96c5f47c.js";import"./extends-98964cd2.js";import"./useSøknad-bef338a8.js";import"./dateUtils-1f16f8ca.js";import"./getTypedFormComponents-eb1a726d.js";import"./mapSøkerinfoDTO-766e3371.js";import"./useFortsettSøknadSenere-45d26093.js";import"./amplitude-982d123d.js";import"./globalUtil-9d9e0ee4.js";import"./apiInterceptor-d84503f0.js";import"./AnnenForelder-5c5d4f7f.js";import"./personUtils-b75091bb.js";import"./Personkort-4bcc42ec.js";import"./periodeUtils-3b0dcc11.js";import"./Dekningsgrad-fced8842.js";import"./useSøkerinfo-f6efa4eb.js";import"./index-47edccfa.js";import"./annenForelderUtils-a6459ac9.js";import"./constants-c4bc2eb8.js";import"./LenkeKnapp-ee13c829.js";import"./InfoOmSøknaden-40c47138.js";import"./Sirkelmaske-6beff0aa.js";import"./Foreldrepar-fbfe3d97.js";import"./InnholdMedIllustrasjon-890b4a14.js";import"./links-b36d21ab.js";import"./Periodene-e4ab6e5b.js";import"./useOnValidSubmit-ac4aac13.js";import"./useSaveLoadedRoute-f067a427.js";import"./vedleggUtils-5e07fd2f.js";import"./Attachment-a8e5b8d1.js";import"./eksisterendeSakUtils-daa12c46.js";import"./velkommenUtils-e9cd8c59.js";import"./Fieldset-b0352ef9.js";import"./formUtils-d2603244.js";const A={søker:{fnr:"1212121313",fornavn:"Espen",etternavn:"Utvikler",kjønn:"M",fødselsdato:"1978-04-12",barn:[{fnr:"19047815714",fødselsdato:"2021-03-15",annenForelder:{fnr:"12038517080",fødselsdato:"1985-03-12",fornavn:"TALENTFULL",etternavn:"MYGG"},fornavn:"KLØKTIG",etternavn:"MIDTPUNKT",kjønn:"M"}]}},I=4,E="/soknad/uttaksplan-info",x={søknad:{type:"foreldrepenger",harGodkjentVilkår:!0,søkersituasjon:{situasjon:"fødsel",rolle:"far"},barn:{type:"født",fødselsdatoer:["2021-07-01"],antallBarn:"1",termindato:"2021-07-01"},annenForelder:{etternavn:"dfg",fornavn:"dsgdfg",fnr:"123123123",utenlandskFnr:!1,erUfør:!1,kanIkkeOppgis:!1,harRettPåForeldrepengerINorge:!1,harRettPåForeldrepengerIEØS:!1},søker:{erAleneOmOmsorg:!1,språkkode:"nb"},informasjonOmUtenlandsopphold:{tidligereOpphold:[],senereOpphold:[]},erEndringssøknad:!1,uttaksplan:[]},version:I,currentRoute:E,søknadGjelderEtNyttBarn:!0},D={FORELDREPENGER:250},L={farRundtFødsel:0,generellMinsterett:0,toTette:0},l={kontoer:D,minsteretter:L},P={FORELDREPENGER:200},_={farRundtFødsel:0,generellMinsterett:0,toTette:0},f={kontoer:P,minsteretter:_},v="/innsyn/v2/annenPartVedtak",a="/uttak-url/konto",o=x,M=A,Pe={title:"steps/uttaksplan-info/FarMedmorFødselOgMorHarIkkeRett",component:N,decorators:[u,F,O]},g=t=>s(R,{mock:n=>{n.onPost(v).replyOnce(200,void 0,T.FINISHED),n.onGet(a).replyOnce(200,t.stønadskonto100),n.onGet(a).replyOnce(200,t.stønadskonto80)},children:s(S,{søknad:t.context,søkerinfo:t.søkerinfo,children:s(U,{})})}),e=g.bind({});e.args={stønadskonto100:f,stønadskonto80:l,context:o,søkerinfo:M};const r=g.bind({});r.args={stønadskonto100:f,stønadskonto80:l,context:{...o,søknad:{...o.søknad,annenForelder:{...o.søknad.annenForelder,erUfør:!0}}},søkerinfo:M};var k,p,i;e.parameters={...e.parameters,docs:{...(k=e.parameters)==null?void 0:k.docs,source:{originalSource:`args => {
  const restMock = (apiMock: MockAdapter) => {
    apiMock.onPost(UTTAKSPLAN_ANNEN_URL).replyOnce(200, undefined, RequestStatus.FINISHED);
    apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);
    apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);
  };
  return <AxiosMock mock={restMock}>
            <ForeldrepengerStateMock søknad={(args.context as ForeldrepengesøknadContextState)} søkerinfo={(args.søkerinfo as SøkerinfoDTO)}>
                <UttaksplanInfo />
            </ForeldrepengerStateMock>
        </AxiosMock>;
}`,...(i=(p=e.parameters)==null?void 0:p.docs)==null?void 0:i.source}}};var d,c,m;r.parameters={...r.parameters,docs:{...(d=r.parameters)==null?void 0:d.docs,source:{originalSource:`args => {
  const restMock = (apiMock: MockAdapter) => {
    apiMock.onPost(UTTAKSPLAN_ANNEN_URL).replyOnce(200, undefined, RequestStatus.FINISHED);
    apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);
    apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);
  };
  return <AxiosMock mock={restMock}>
            <ForeldrepengerStateMock søknad={(args.context as ForeldrepengesøknadContextState)} søkerinfo={(args.søkerinfo as SøkerinfoDTO)}>
                <UttaksplanInfo />
            </ForeldrepengerStateMock>
        </AxiosMock>;
}`,...(m=(c=r.parameters)==null?void 0:c.docs)==null?void 0:m.source}}};const _e=["UttaksplanDerMorIkkeHarRettPåForeldrepenger","UttaksplanDerMorIkkeHarRettPåForeldrepengerOgMorErUfør"];export{e as UttaksplanDerMorIkkeHarRettPåForeldrepenger,r as UttaksplanDerMorIkkeHarRettPåForeldrepengerOgMorErUfør,_e as __namedExportsOrder,Pe as default};
//# sourceMappingURL=FarMedmorFodselOgMorHarIkkeRett.stories-506d4b6c.js.map
