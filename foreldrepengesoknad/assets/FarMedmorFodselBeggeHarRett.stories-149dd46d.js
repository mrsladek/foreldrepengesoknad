import{j as s}from"./jsx-runtime-670450c2.js";import{w as S}from"./withIntl-b4aa299e.js";import{w as F}from"./withRouter-71d505f2.js";import{w as O,F as A}from"./ForeldrepengerStateMock-1afbcff7.js";import{A as N}from"./AxiosMock-3a64d69b.js";import{R as U}from"./api-02d91960.js";import{s as l,a as f}from"./stønadskontoDeltUttak100-ce558aaf.js";import{U as g}from"./UttaksplanInfo-a5e4d26b.js";import"./index-f1f749bf.js";import"./_commonjsHelpers-042e6b4d.js";import"./IntlProvider-a02d6ab7.js";import"./validationUtils-aa1d1f93.js";import"./index-4d501b15.js";import"./Link-40b5f3c6.js";import"./clsx.m-266f4de0.js";import"./index-7e4e529b.js";import"./Label-bbf0f831.js";import"./index-96c5f47c.js";import"./extends-98964cd2.js";import"./useSøknad-c113ad03.js";import"./dateUtils-06999df8.js";import"./getTypedFormComponents-373c5aee.js";import"./mapSøkerinfoDTO-cc88f2a7.js";import"./useFortsettSøknadSenere-e922abdf.js";import"./apiInterceptor-b5d8b8e4.js";import"./amplitude-982d123d.js";import"./globalUtil-9d9e0ee4.js";import"./AnnenForelder-5c5d4f7f.js";import"./personUtils-3224fb9b.js";import"./Personkort-33b551aa.js";import"./periodeUtils-dfdcada7.js";import"./Dekningsgrad-fced8842.js";import"./useSøkerinfo-3096846c.js";import"./index-47edccfa.js";import"./annenForelderUtils-0aa532b4.js";import"./constants-c4bc2eb8.js";import"./LenkeKnapp-ee13c829.js";import"./InfoOmSøknaden-26941c35.js";import"./Sirkelmaske-d78a61bd.js";import"./Foreldrepar-2fb0bcd4.js";import"./InnholdMedIllustrasjon-e302fedc.js";import"./links-b36d21ab.js";import"./Periodene-7a4ae12e.js";import"./useOnValidSubmit-34cf285a.js";import"./useSaveLoadedRoute-bcb66eb1.js";import"./vedleggUtils-681932f9.js";import"./Attachment-a8e5b8d1.js";import"./eksisterendeSakUtils-1da04758.js";import"./velkommenUtils-8d8f7024.js";import"./Fieldset-b0352ef9.js";import"./formUtils-07817100.js";const T={søker:{fnr:"19047815714",fornavn:"TALENTFULL",etternavn:"MYGG",kjønn:"M",fødselsdato:"1978-04-19",barn:[{fnr:"21091981146",fødselsdato:"2021-03-15",annenForelder:{fnr:"12038517080",fødselsdato:"1985-03-12",fornavn:"LEALAUS",etternavn:"BÆREPOSE"},fornavn:"KLØKTIG",etternavn:"MIDTPUNKT",kjønn:"M"}]}},R=4,I="/soknad/uttaksplan-info",L={søknad:{type:"foreldrepenger",harGodkjentVilkår:!0,søkersituasjon:{situasjon:"fødsel",rolle:"far"},barn:{type:"født",fødselsdatoer:["2021-06-14"],antallBarn:"1",datoForAleneomsorg:"",dokumentasjonAvAleneomsorg:[]},annenForelder:{etternavn:"dfg",fornavn:"dfg",fnr:"02068629902",utenlandskFnr:!1,kanIkkeOppgis:!1,harRettPåForeldrepengerINorge:!0,erInformertOmSøknaden:!0},søker:{erAleneOmOmsorg:!1,språkkode:"nb"},informasjonOmUtenlandsopphold:{tidligereOpphold:[],senereOpphold:[]},erEndringssøknad:!1},version:R,currentRoute:I,søknadGjelderEtNyttBarn:!0},x="/innsyn/v2/annenPartVedtak",a="/uttak-url/konto",u=T,o=L,Lt={title:"steps/uttaksplan-info/FarMedmorFødselBeggeHarRett",component:g,decorators:[F,S,O]},M=r=>s(N,{mock:n=>{n.onPost(x).replyOnce(200,void 0,U.FINISHED),n.onGet(a).replyOnce(200,r.stønadskonto100),n.onGet(a).replyOnce(200,r.stønadskonto80)},children:s(A,{søknad:r.context,søkerinfo:r.søkerinfo,children:s(g,{})})}),t=M.bind({});t.args={stønadskonto100:l,stønadskonto80:f,context:o,søkerinfo:u};const e=M.bind({});e.args={stønadskonto100:l,stønadskonto80:f,context:{...o,søknad:{...o.søknad,barn:{...o.søknad.barn,fødselsdatoer:["2022-08-02"]}}},søkerinfo:u};var p,i,d;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`args => {
  const restMock = (apiMock: MockAdapter) => {
    apiMock.onPost(UTTAKSPLAN_ANNEN_URL).replyOnce(200, undefined, RequestStatus.FINISHED);
    apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);
    apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);
  };
  return <AxiosMock mock={restMock}>\r
            <ForeldrepengerStateMock søknad={(args.context as ForeldrepengesøknadContextState)} søkerinfo={(args.søkerinfo as SøkerinfoDTO)}>\r
                <UttaksplanInfo />\r
            </ForeldrepengerStateMock>\r
        </AxiosMock>;
}`,...(d=(i=t.parameters)==null?void 0:i.docs)==null?void 0:d.source}}};var k,m,c;e.parameters={...e.parameters,docs:{...(k=e.parameters)==null?void 0:k.docs,source:{originalSource:`args => {
  const restMock = (apiMock: MockAdapter) => {
    apiMock.onPost(UTTAKSPLAN_ANNEN_URL).replyOnce(200, undefined, RequestStatus.FINISHED);
    apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto100);
    apiMock.onGet(STØNADSKONTO_URL).replyOnce(200, args.stønadskonto80);
  };
  return <AxiosMock mock={restMock}>\r
            <ForeldrepengerStateMock søknad={(args.context as ForeldrepengesøknadContextState)} søkerinfo={(args.søkerinfo as SøkerinfoDTO)}>\r
                <UttaksplanInfo />\r
            </ForeldrepengerStateMock>\r
        </AxiosMock>;
}`,...(c=(m=e.parameters)==null?void 0:m.docs)==null?void 0:c.source}}};const xt=["UttaksplanInfoFarMedmorFødselBeggeHarRett","UttaksplanInfoFarMedmorFødselBeggeHarRettFødselEtterWLB"];export{t as UttaksplanInfoFarMedmorFødselBeggeHarRett,e as UttaksplanInfoFarMedmorFødselBeggeHarRettFødselEtterWLB,xt as __namedExportsOrder,Lt as default};
//# sourceMappingURL=FarMedmorFodselBeggeHarRett.stories-149dd46d.js.map
