{"version":3,"file":"5989.6994c47e.iframe.bundle.js","mappings":"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","sources":["webpack://foreldrepengesoknad/./src/app/components/registrerte-personalia/RegistrertePersonalia.tsx","webpack://foreldrepengesoknad/./src/app/steps/om-barnet/omBarnetFormConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/om-barnet/validation/omBarnetValidering.ts","webpack://foreldrepengesoknad/./src/app/steps/om-barnet/components/AdopsjonAnnetBarn.tsx","webpack://foreldrepengesoknad/./src/app/steps/om-barnet/components/AdopsjonEktefellesBarn.tsx","webpack://foreldrepengesoknad/./src/app/steps/om-barnet/components/BarnFødtEllerAdoptert.tsx","webpack://foreldrepengesoknad/./src/app/steps/om-barnet/components/Fødsel.tsx","webpack://foreldrepengesoknad/./src/app/steps/om-barnet/omBarnetQuestionsConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/om-barnet/components/Termin.tsx","webpack://foreldrepengesoknad/./src/app/steps/om-barnet/omBarnetUtils.ts","webpack://foreldrepengesoknad/./src/app/steps/om-barnet/components/ValgteRegistrerteBarn.tsx","webpack://foreldrepengesoknad/./src/app/steps/om-barnet/OmBarnet.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Element, Normaltekst } from 'nav-frontend-typografi';\n\nimport { RegistrertAnnenForelder, RegistrertBarn } from 'app/types/Person';\nimport { FormattedMessage } from 'react-intl';\nimport { formaterNavn } from 'app/utils/personUtils';\nimport './registrertePersonalia.less';\nimport { bemUtils } from '@navikt/fp-common';\n\ninterface Props {\n    person: RegistrertAnnenForelder | RegistrertBarn;\n    visEtternavn: boolean;\n    fødselsnummerForVisning?: string;\n    fødselsdatoForVisning?: string;\n    altTekstHvisUkjentNavn?: string;\n}\n\nconst RegistrertePersonalia: React.FunctionComponent<Props> = ({\n    person,\n    fødselsnummerForVisning,\n    fødselsdatoForVisning,\n    altTekstHvisUkjentNavn,\n    visEtternavn,\n}: Props) => {\n    const bem = bemUtils('registrertePersonalia');\n    return (\n        <div className={bem.block}>\n            <Element className={bem.element('navn')}>\n                {altTekstHvisUkjentNavn !== undefined\n                    ? altTekstHvisUkjentNavn\n                    : formaterNavn(person.fornavn, person.etternavn, visEtternavn, person.mellomnavn)}\n            </Element>\n            {fødselsnummerForVisning !== undefined && (\n                <Normaltekst>\n                    <FormattedMessage\n                        id=\"registrertePersonalia.fødselsnummer\"\n                        values={{ fnr: fødselsnummerForVisning }}\n                    />\n                </Normaltekst>\n            )}\n            {!altTekstHvisUkjentNavn && fødselsdatoForVisning !== undefined && (\n                <Normaltekst>\n                    <FormattedMessage\n                        id=\"registrertePersonalia.fødselsdato\"\n                        values={{ fødselsdato: fødselsdatoForVisning }}\n                    />\n                </Normaltekst>\n            )}\n        </div>\n    );\n};\n\nexport default RegistrertePersonalia;\n","import { getTypedFormComponents, YesOrNo } from '@navikt/sif-common-formik/lib';\nimport { Attachment } from 'app/types/Attachment';\n\nexport enum OmBarnetFormField {\n    erBarnetFødt = 'erBarnetFødt',\n    adopsjonAvEktefellesBarn = 'adopsjonAvEktefellesBarn',\n    antallBarn = 'antallBarn',\n    antallBarnSelect = 'antallBarnSelect',\n    adopsjonsdato = 'adopsjonsdato',\n    søkerAdopsjonAlene = 'søkerAdopsjonAlene',\n    adoptertIUtlandet = 'adoptertIUtlandet',\n    fødselsdatoer = 'fødselsdatoer',\n    termindato = 'termindato',\n    omsorgsovertakelse = 'omsorgsovertakelse',\n    terminbekreftelse = 'terminbekreftelse',\n    terminbekreftelsedato = 'terminbekreftelsedato',\n    ankomstdato = 'ankomstdato',\n}\n\nexport interface OmBarnetFormData {\n    [OmBarnetFormField.erBarnetFødt]: YesOrNo;\n    [OmBarnetFormField.adopsjonAvEktefellesBarn]: YesOrNo;\n    [OmBarnetFormField.antallBarn]: string;\n    [OmBarnetFormField.antallBarnSelect]: string;\n    [OmBarnetFormField.adopsjonsdato]: string;\n    [OmBarnetFormField.fødselsdatoer]: string[];\n    [OmBarnetFormField.omsorgsovertakelse]: Attachment[];\n    [OmBarnetFormField.termindato]: string;\n    [OmBarnetFormField.terminbekreftelse]: Attachment[];\n    [OmBarnetFormField.terminbekreftelsedato]: string;\n    [OmBarnetFormField.adoptertIUtlandet]: YesOrNo;\n    [OmBarnetFormField.ankomstdato]: string;\n}\n\nexport const OmBarnetFormComponents = getTypedFormComponents<OmBarnetFormField, OmBarnetFormData, string>();\n","import {\n    barnetErUnder15årPåAdopsjonsdato,\n    erIUke22Pluss3,\n    erMindreEnn3UkerSiden,\n    etterDagensDato,\n    hasValue,\n    intlUtils,\n} from '@navikt/fp-common';\nimport dayjs from 'dayjs';\nimport { isISODateString } from 'nav-datovelger';\nimport { IntlShape } from 'react-intl';\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter';\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore';\nimport { isDateABeforeDateB } from 'app/utils/dateUtils';\n\ndayjs.extend(isSameOrAfter);\ndayjs.extend(isSameOrBefore);\n\nexport const validateFødselsdato = (intl: IntlShape) => (fødselsdato: string) => {\n    if (!hasValue(fødselsdato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fødselsdato.duMåOppgi');\n    }\n\n    if (!isISODateString(fødselsdato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fødselsdato.ugyldigDatoFormat');\n    }\n\n    if (etterDagensDato(fødselsdato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fødselsdato.måVæreIdagEllerTidligere');\n    }\n\n    if (dayjs(fødselsdato).isBefore(dayjs(new Date()).subtract(3, 'years').subtract(4, 'months'), 'day')) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fødselsdato.ikkeMerEnn3År3MndTilbake');\n    }\n\n    return undefined;\n};\n\nexport const validateFødselsdatoAdopsjon = (intl: IntlShape) => (fødselsdato: string, adopsjonsdato: string) => {\n    if (!hasValue(fødselsdato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fødselsdato.duMåOppgi');\n    }\n\n    if (!isISODateString(fødselsdato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fødselsdato.ugyldigDatoFormat');\n    }\n\n    if (etterDagensDato(fødselsdato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fødselsdato.måVæreIdagEllerTidligere');\n    }\n\n    if (isDateABeforeDateB(adopsjonsdato, fødselsdato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fødselsdato.måVæreFørAdopsjonsdato');\n    }\n\n    if (!barnetErUnder15årPåAdopsjonsdato(fødselsdato, adopsjonsdato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fødselsdato.ikkeMerEnn15År3MndTilbake');\n    }\n\n    return undefined;\n};\n\nexport const validateTermindato = (intl: IntlShape) => (termindato: string) => {\n    if (!hasValue(termindato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.duMåOppgi');\n    }\n\n    if (!isISODateString(termindato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.ugyldigDatoFormat');\n    }\n\n    if (!erMindreEnn3UkerSiden(termindato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.forTidlig');\n    }\n\n    if (!erIUke22Pluss3(termindato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.duMåVæreIUke22');\n    }\n};\n\nexport const validateTermindatoFødsel = (fødselsdato: string, intl: IntlShape) => (termindato: string) => {\n    if (!hasValue(termindato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.duMåOppgi');\n    }\n\n    if (!isISODateString(termindato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.ugyldigDatoFormat');\n    }\n\n    if (!dayjs(termindato).subtract(6, 'months').isSameOrBefore(dayjs(fødselsdato), 'day')) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.forLangtFremITid');\n    }\n    if (!dayjs(termindato).add(1, 'months').isSameOrAfter(dayjs(fødselsdato), 'day')) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.forLangtTilbakeITid');\n    }\n};\n\nexport const validateAdopsjonsdato = (intl: IntlShape) => (adopsjonsdato: string) => {\n    if (!hasValue(adopsjonsdato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.adopsjonsdato.duMåOppgi');\n    }\n\n    if (!isISODateString(adopsjonsdato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.adopsjonsdato.ugyldigDatoFormat');\n    }\n};\n\nexport const validateAnkomstdato = (intl: IntlShape) => (ankomstdato: string, fødselsdato: string) => {\n    if (!hasValue(ankomstdato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.ankomstDato.duMåOppgi');\n    }\n\n    if (!isISODateString(ankomstdato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.ankomstDato.ugyldigDatoFormat');\n    }\n\n    if (fødselsdato !== undefined && !dayjs(fødselsdato).isSameOrBefore(ankomstdato, 'day')) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.ankomstDato.førFødselsdato');\n    }\n};\n\nexport const validateTerminbekreftelse = (intl: IntlShape) => (terminbekreftelseDato: string) => {\n    if (!hasValue(terminbekreftelseDato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.terminbekreftelseDato.duMåOppgi');\n    }\n\n    if (!isISODateString(terminbekreftelseDato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.terminbekreftelseDato.ugyldigDatoFormat');\n    }\n\n    if (dayjs().isBefore(dayjs(terminbekreftelseDato))) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.terminbekreftelseDato.kanIkkeVæreFremITid');\n    }\n};\n","import { Block, intlUtils } from '@navikt/fp-common';\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport VeilederNormal from 'app/assets/VeilederNormal';\nimport FormikFileUploader from 'app/components/formik-file-uploader/FormikFileUploader';\nimport Søkersituasjon from 'app/context/types/Søkersituasjon';\nimport { AttachmentType } from 'app/types/AttachmentType';\nimport { Skjemanummer } from 'app/types/Skjemanummer';\nimport { ISOStringToDate } from 'app/utils/dateUtils';\nimport dayjs from 'dayjs';\nimport { FieldArray } from 'formik';\nimport Veilederpanel from 'nav-frontend-veilederpanel';\nimport React, { FunctionComponent } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { OmBarnetFormComponents, OmBarnetFormData, OmBarnetFormField } from '../omBarnetFormConfig';\nimport {\n    validateAdopsjonsdato,\n    validateAnkomstdato,\n    validateFødselsdatoAdopsjon,\n} from '../validation/omBarnetValidering';\n\ninterface Props {\n    søkersituasjon: Søkersituasjon;\n    formValues: OmBarnetFormData;\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>;\n    søknadGjelderEtNyttBarn: boolean;\n}\n\nconst AdopsjonAnnetBarn: FunctionComponent<Props> = ({\n    søkersituasjon,\n    formValues,\n    visibility,\n    søknadGjelderEtNyttBarn,\n}) => {\n    const intl = useIntl();\n\n    if (søkersituasjon.situasjon === 'fødsel' || formValues.adopsjonAvEktefellesBarn !== YesOrNo.NO) {\n        return null;\n    }\n\n    return (\n        <>\n            <Block padBottom=\"l\">\n                <OmBarnetFormComponents.DatePicker\n                    label={intlUtils(intl, 'omBarnet.adopsjonsdato.annetBarn')}\n                    name={OmBarnetFormField.adopsjonsdato}\n                    validate={validateAdopsjonsdato(intl)}\n                    placeholder={'dd.mm.åååå'}\n                />\n            </Block>\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.antallBarn)}>\n                <OmBarnetFormComponents.RadioPanelGroup\n                    name={OmBarnetFormField.antallBarn}\n                    radios={[\n                        {\n                            label: intlUtils(intl, 'omBarnet.radiobutton.ettBarn'),\n                            value: '1',\n                        },\n                        {\n                            label: intlUtils(intl, 'omBarnet.radiobutton.toBarn'),\n                            value: '2',\n                        },\n                        {\n                            label: intlUtils(intl, 'omBarnet.radiobutton.flere'),\n                            value: '3',\n                        },\n                    ]}\n                    useTwoColumns={true}\n                    legend={intlUtils(intl, 'omBarnet.antallBarn.adopsjon.født')}\n                />\n            </Block>\n            <Block\n                padBottom=\"l\"\n                visible={\n                    formValues.antallBarn !== undefined &&\n                    søknadGjelderEtNyttBarn &&\n                    parseInt(formValues.antallBarn, 10) >= 3\n                }\n            >\n                <OmBarnetFormComponents.Select name={OmBarnetFormField.antallBarnSelect}>\n                    <option value=\"\" />\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                    <option value=\"6\">6</option>\n                    <option value=\"7\">7</option>\n                    <option value=\"8\">8</option>\n                    <option value=\"9\">9</option>\n                </OmBarnetFormComponents.Select>\n            </Block>\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.fødselsdatoer)}>\n                <FieldArray\n                    name={OmBarnetFormField.fødselsdatoer}\n                    render={() =>\n                        [...Array(parseInt(formValues.antallBarn!, 10))].map((_, index) => {\n                            return (\n                                <Block key={index} padBottom=\"l\">\n                                    <OmBarnetFormComponents.DatePicker\n                                        key={`${OmBarnetFormField.fødselsdatoer}.${index}`}\n                                        name={\n                                            `${OmBarnetFormField.fødselsdatoer}.${index}` as unknown as OmBarnetFormField\n                                        }\n                                        label={\n                                            formValues.antallBarn === '1'\n                                                ? intlUtils(intl, 'omBarnet.fødselsdato')\n                                                : intlUtils(intl, `omBarnet.fødselsdato.adopsjon.${index + 1}`)\n                                        }\n                                        minDate={dayjs(formValues.adopsjonsdato).subtract(15, 'years').toDate()}\n                                        maxDate={ISOStringToDate(formValues.adopsjonsdato)}\n                                        validate={(value) =>\n                                            validateFødselsdatoAdopsjon(intl)(value, formValues.adopsjonsdato)\n                                        }\n                                        placeholder={'dd.mm.åååå'}\n                                        showYearSelector={true}\n                                    />\n                                </Block>\n                            );\n                        })\n                    }\n                />\n            </Block>\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.adoptertIUtlandet)}>\n                <OmBarnetFormComponents.YesOrNoQuestion\n                    name={OmBarnetFormField.adoptertIUtlandet}\n                    legend={intlUtils(intl, 'omBarnet.adopteresFraUtlandet')}\n                />\n            </Block>\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.ankomstdato)}>\n                <OmBarnetFormComponents.DatePicker\n                    name={OmBarnetFormField.ankomstdato}\n                    label={intlUtils(intl, 'omBarnet.ankomstDato')}\n                    minDate={dayjs(formValues.fødselsdatoer[0]).toDate()}\n                    maxDate={dayjs().add(6, 'months').toDate()}\n                    validate={(value) => validateAnkomstdato(intl)(value, formValues.fødselsdatoer[0])}\n                    placeholder={'dd.mm.åååå'}\n                />\n            </Block>\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.omsorgsovertakelse)}>\n                <Veilederpanel fargetema=\"normal\" svg={<VeilederNormal transparentBackground={true} />}>\n                    <FormattedMessage id=\"omBarnet.veileder.omsorgsovertakelse\" />\n                </Veilederpanel>\n            </Block>\n            <Block visible={visibility.isVisible(OmBarnetFormField.omsorgsovertakelse)}>\n                <FormikFileUploader\n                    label={intlUtils(intl, 'omBarnet.adopsjon.vedlegg')}\n                    name={OmBarnetFormField.omsorgsovertakelse}\n                    attachments={formValues.omsorgsovertakelse || []}\n                    attachmentType={AttachmentType.OMSORGSOVERTAKELSE}\n                    skjemanummer={Skjemanummer.OMSORGSOVERTAKELSESDATO}\n                />\n            </Block>\n        </>\n    );\n};\n\nexport default AdopsjonAnnetBarn;\n","import { Block, intlUtils } from '@navikt/fp-common';\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport VeilederNormal from 'app/assets/VeilederNormal';\nimport FormikFileUploader from 'app/components/formik-file-uploader/FormikFileUploader';\nimport Søkersituasjon from 'app/context/types/Søkersituasjon';\nimport { AttachmentType } from 'app/types/AttachmentType';\nimport { Skjemanummer } from 'app/types/Skjemanummer';\nimport { ISOStringToDate } from 'app/utils/dateUtils';\nimport dayjs from 'dayjs';\nimport { FieldArray } from 'formik';\nimport Veilederpanel from 'nav-frontend-veilederpanel';\nimport React, { FunctionComponent } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { OmBarnetFormComponents, OmBarnetFormData, OmBarnetFormField } from '../omBarnetFormConfig';\nimport { validateAdopsjonsdato, validateFødselsdatoAdopsjon } from '../validation/omBarnetValidering';\n\ninterface Props {\n    søkersituasjon: Søkersituasjon;\n    formValues: OmBarnetFormData;\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>;\n    søknadGjelderEtNyttBarn: boolean;\n}\n\nconst AdopsjonEktefellesBarn: FunctionComponent<Props> = ({\n    søkersituasjon,\n    formValues,\n    visibility,\n    søknadGjelderEtNyttBarn,\n}) => {\n    const intl = useIntl();\n\n    if (søkersituasjon.situasjon === 'fødsel' || formValues.adopsjonAvEktefellesBarn !== YesOrNo.YES) {\n        return null;\n    }\n\n    return (\n        <>\n            <Block padBottom=\"l\">\n                <OmBarnetFormComponents.DatePicker\n                    label={intlUtils(intl, 'omBarnet.adopsjonsdato.stebarn')}\n                    name={OmBarnetFormField.adopsjonsdato}\n                    validate={validateAdopsjonsdato(intl)}\n                    placeholder={'dd.mm.åååå'}\n                />\n            </Block>\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.antallBarn)}>\n                <OmBarnetFormComponents.RadioPanelGroup\n                    name={OmBarnetFormField.antallBarn}\n                    radios={[\n                        {\n                            label: intlUtils(intl, 'omBarnet.radiobutton.ettBarn'),\n                            value: '1',\n                        },\n                        {\n                            label: intlUtils(intl, 'omBarnet.radiobutton.toBarn'),\n                            value: '2',\n                        },\n                        {\n                            label: intlUtils(intl, 'omBarnet.radiobutton.flere'),\n                            value: '3',\n                        },\n                    ]}\n                    useTwoColumns={true}\n                    legend={intlUtils(intl, 'omBarnet.antallBarn.adopsjon.født')}\n                />\n            </Block>\n            <Block\n                padBottom=\"l\"\n                visible={\n                    formValues.antallBarn !== undefined &&\n                    søknadGjelderEtNyttBarn &&\n                    parseInt(formValues.antallBarn, 10) >= 3\n                }\n            >\n                <OmBarnetFormComponents.Select name={OmBarnetFormField.antallBarnSelect}>\n                    <option value=\"\" />\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                    <option value=\"6\">6</option>\n                    <option value=\"7\">7</option>\n                    <option value=\"8\">8</option>\n                    <option value=\"9\">9</option>\n                </OmBarnetFormComponents.Select>\n            </Block>\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.fødselsdatoer)}>\n                <FieldArray\n                    name={OmBarnetFormField.fødselsdatoer}\n                    render={() =>\n                        [...Array(parseInt(formValues.antallBarn!, 10))].map((_, index) => {\n                            return (\n                                <Block key={index} padBottom=\"l\">\n                                    <OmBarnetFormComponents.DatePicker\n                                        key={`${OmBarnetFormField.fødselsdatoer}.${index}`}\n                                        name={\n                                            `${OmBarnetFormField.fødselsdatoer}.${index}` as unknown as OmBarnetFormField\n                                        }\n                                        label={\n                                            formValues.antallBarn === '1'\n                                                ? intlUtils(intl, 'omBarnet.fødselsdato')\n                                                : intlUtils(intl, `omBarnet.fødselsdato.adopsjon.${index + 1}`)\n                                        }\n                                        minDate={dayjs().subtract(6, 'month').toDate()}\n                                        maxDate={ISOStringToDate(formValues.adopsjonsdato)}\n                                        validate={(value) =>\n                                            validateFødselsdatoAdopsjon(intl)(value, formValues.adopsjonsdato)\n                                        }\n                                        placeholder={'dd.mm.åååå'}\n                                    />{' '}\n                                </Block>\n                            );\n                        })\n                    }\n                />\n            </Block>\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.omsorgsovertakelse)}>\n                <Veilederpanel fargetema=\"normal\" svg={<VeilederNormal transparentBackground={true} />}>\n                    <FormattedMessage id=\"omBarnet.veileder.omsorgsovertakelse\" />\n                </Veilederpanel>\n            </Block>\n            <Block visible={visibility.isVisible(OmBarnetFormField.omsorgsovertakelse)}>\n                <FormikFileUploader\n                    label={intlUtils(intl, 'omBarnet.adopsjon.vedlegg')}\n                    name={OmBarnetFormField.omsorgsovertakelse}\n                    attachments={formValues.omsorgsovertakelse || []}\n                    attachmentType={AttachmentType.OMSORGSOVERTAKELSE}\n                    skjemanummer={Skjemanummer.OMSORGSOVERTAKELSESDATO}\n                />\n            </Block>\n        </>\n    );\n};\n\nexport default AdopsjonEktefellesBarn;\n","import { Block, intlUtils } from '@navikt/fp-common';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport React, { FunctionComponent } from 'react';\nimport { useIntl } from 'react-intl';\nimport { OmBarnetFormComponents, OmBarnetFormField } from '../omBarnetFormConfig';\n\ninterface Props {\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>;\n}\n\nconst BarnFødtEllerAdoptert: FunctionComponent<Props> = ({ visibility }) => {\n    const intl = useIntl();\n\n    return (\n        <>\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.adopsjonAvEktefellesBarn)}>\n                <OmBarnetFormComponents.YesOrNoQuestion\n                    name={OmBarnetFormField.adopsjonAvEktefellesBarn}\n                    legend={intlUtils(intl, 'omBarnet.adopsjonGjelder')}\n                />\n            </Block>\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.erBarnetFødt)}>\n                <OmBarnetFormComponents.YesOrNoQuestion\n                    name={OmBarnetFormField.erBarnetFødt}\n                    legend={intlUtils(intl, 'omBarnet.erBarnetFødt')}\n                />\n            </Block>\n        </>\n    );\n};\n\nexport default BarnFødtEllerAdoptert;\n","import { Block, intlUtils } from '@navikt/fp-common';\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport Søkersituasjon from 'app/context/types/Søkersituasjon';\nimport dayjs from 'dayjs';\nimport { FieldArray } from 'formik';\nimport React, { FunctionComponent } from 'react';\nimport { useIntl } from 'react-intl';\nimport { OmBarnetFormComponents, OmBarnetFormData, OmBarnetFormField } from '../omBarnetFormConfig';\nimport { validateFødselsdato, validateTermindatoFødsel } from '../validation/omBarnetValidering';\n\ninterface Props {\n    søkersituasjon: Søkersituasjon;\n    formValues: OmBarnetFormData;\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>;\n    søknadGjelderEtNyttBarn: boolean;\n}\n\nconst Fødsel: FunctionComponent<Props> = ({ søkersituasjon, formValues, visibility, søknadGjelderEtNyttBarn }) => {\n    const { erBarnetFødt, antallBarn, fødselsdatoer } = formValues;\n\n    const intl = useIntl();\n    const intlIdFødsel =\n        antallBarn !== undefined && parseInt(antallBarn, 10) > 1\n            ? 'omBarnet.fødselsdato.flereBarn'\n            : 'omBarnet.fødselsdato';\n\n    if (\n        søkersituasjon.situasjon === 'adopsjon' ||\n        (søknadGjelderEtNyttBarn && erBarnetFødt !== YesOrNo.YES) ||\n        !søknadGjelderEtNyttBarn\n    ) {\n        return null;\n    }\n\n    return (\n        <>\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.antallBarn)}>\n                <OmBarnetFormComponents.RadioPanelGroup\n                    name={OmBarnetFormField.antallBarn}\n                    radios={[\n                        {\n                            label: intlUtils(intl, 'omBarnet.radiobutton.ettBarn'),\n                            value: '1',\n                        },\n                        {\n                            label: intlUtils(intl, 'omBarnet.radiobutton.tvillinger'),\n                            value: '2',\n                        },\n                        {\n                            label: intlUtils(intl, 'omBarnet.radiobutton.flere'),\n                            value: '3',\n                        },\n                    ]}\n                    useTwoColumns={true}\n                    legend={intlUtils(intl, 'omBarnet.antallBarn.født')}\n                />\n            </Block>\n            <Block\n                padBottom=\"l\"\n                visible={antallBarn !== undefined && søknadGjelderEtNyttBarn && parseInt(antallBarn, 10) >= 3}\n            >\n                <OmBarnetFormComponents.Select name={OmBarnetFormField.antallBarnSelect}>\n                    <option value=\"\" />\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                    <option value=\"6\">6</option>\n                    <option value=\"7\">7</option>\n                    <option value=\"8\">8</option>\n                    <option value=\"9\">9</option>\n                </OmBarnetFormComponents.Select>\n            </Block>\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.fødselsdatoer)}>\n                <FieldArray\n                    name={OmBarnetFormField.fødselsdatoer}\n                    render={() => [\n                        <OmBarnetFormComponents.DatePicker\n                            key={`${OmBarnetFormField.fødselsdatoer}.0`}\n                            name={`${OmBarnetFormField.fødselsdatoer}.0` as OmBarnetFormField}\n                            label={intlUtils(intl, intlIdFødsel)}\n                            minDate={dayjs().subtract(3, 'years').toDate()}\n                            maxDate={dayjs().toDate()}\n                            validate={validateFødselsdato(intl)}\n                            placeholder={'dd.mm.åååå'}\n                        />,\n                    ]}\n                />\n            </Block>\n            <Block visible={visibility.isVisible(OmBarnetFormField.termindato)}>\n                <OmBarnetFormComponents.DatePicker\n                    name={OmBarnetFormField.termindato}\n                    label={intlUtils(intl, 'omBarnet.termindato.født')}\n                    minDate={dayjs(fødselsdatoer[0]).subtract(1, 'months').toDate()}\n                    maxDate={dayjs(fødselsdatoer[0]).add(6, 'months').toDate()}\n                    placeholder={'dd.mm.åååå'}\n                    validate={validateTermindatoFødsel(fødselsdatoer[0], intl)}\n                />\n            </Block>\n        </>\n    );\n};\n\nexport default Fødsel;\n","import { hasValue } from '@navikt/fp-common';\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\nimport { QuestionConfig, Questions } from '@navikt/sif-common-question-config/lib';\nimport Arbeidsforhold from 'app/types/Arbeidsforhold';\nimport { RegistrertBarn } from 'app/types/Person';\nimport { Situasjon } from 'app/types/Situasjon';\nimport { Søkerrolle } from 'app/types/Søkerrolle';\nimport {\n    andreAugust2022ReglerGjelder,\n    førsteOktober2021ReglerGjelder,\n    getEldsteRegistrerteBarn,\n    ISOStringToDate,\n} from 'app/utils/dateUtils';\nimport isFarEllerMedmor from 'app/utils/isFarEllerMedmor';\nimport dayjs from 'dayjs';\nimport { OmBarnetFormData, OmBarnetFormField } from './omBarnetFormConfig';\n\nexport interface OmBarnetQuestionPayload extends OmBarnetFormData {\n    situasjon: Situasjon;\n    rolle: Søkerrolle;\n    arbeidsforhold: Arbeidsforhold[];\n    valgteRegistrerteBarn: RegistrertBarn[] | undefined;\n    søknadGjelderEtNyttBarn: boolean;\n}\n\nconst erDatoInnenforDeSiste12Ukene = (dato: Date) => {\n    const twelveWeeksAfterBirthday = dayjs(dato).add(12, 'weeks');\n    return dayjs(twelveWeeksAfterBirthday).isAfter(new Date(), 'day');\n};\n\nconst includeTermindato = (\n    rolle: Søkerrolle,\n    fødselsdato: string | undefined,\n    valgteRegistrerteBarn: RegistrertBarn[] | undefined,\n    situasjon: Situasjon\n): boolean => {\n    if (situasjon === 'adopsjon') {\n        return false;\n    }\n\n    let eldsteBarnFødselsdato = undefined;\n\n    if (valgteRegistrerteBarn !== undefined && valgteRegistrerteBarn.length > 0) {\n        const eldsteBarn = getEldsteRegistrerteBarn(valgteRegistrerteBarn);\n\n        eldsteBarnFødselsdato = eldsteBarn.fødselsdato;\n    }\n\n    if (!fødselsdato && !eldsteBarnFødselsdato) {\n        return false;\n    }\n\n    const relevantFødselsdato = eldsteBarnFødselsdato || ISOStringToDate(fødselsdato);\n\n    if (isFarEllerMedmor(rolle)) {\n        if (\n            andreAugust2022ReglerGjelder(relevantFødselsdato!) &&\n            valgteRegistrerteBarn !== undefined &&\n            valgteRegistrerteBarn.length === 0\n        ) {\n            return true;\n        }\n        return erDatoInnenforDeSiste12Ukene(relevantFødselsdato!);\n    }\n    return true;\n};\n\nconst includeTerminbekreftelse = (\n    erBarnetFødt: YesOrNo,\n    arbeidsforhold: Arbeidsforhold[],\n    rolle: Søkerrolle,\n    termindato: string\n) => {\n    return erBarnetFødt === YesOrNo.NO && arbeidsforhold.length === 0 && kanSøkePåTermin(rolle, termindato);\n};\n\nconst includeAdoptertIUtlandet = (adopsjonAvEktefellesBarn: YesOrNo, omsorgsovertakelse: string) => {\n    return (\n        adopsjonAvEktefellesBarn === YesOrNo.NO &&\n        omsorgsovertakelse !== '' &&\n        !førsteOktober2021ReglerGjelder(ISOStringToDate(omsorgsovertakelse)!)\n    );\n};\n\nconst includeAnkomstDato = (adopsjonAvEktefellesBarn: YesOrNo, adopsjonsdato: string) => {\n    return adopsjonAvEktefellesBarn === YesOrNo.NO && includeAdoptertIUtlandet(adopsjonAvEktefellesBarn, adopsjonsdato);\n};\n\nexport const kanSøkePåTermin = (rolle: Søkerrolle, termindato: string): boolean => {\n    if (!isFarEllerMedmor(rolle)) {\n        return true;\n    }\n    return hasValue(termindato) ? andreAugust2022ReglerGjelder(new Date(termindato)) : false;\n};\n\nconst skalViseErBarnFødt = (situasjon: string, søknadGjelderEtNyttBarn: boolean): boolean => {\n    if (situasjon === 'fødsel') {\n        return søknadGjelderEtNyttBarn;\n    }\n\n    return false;\n};\n\nconst skalViseOmsorgsovertakelse = (\n    adopsjonsdato: string,\n    adopsjonAvEktefellesBarn: YesOrNo,\n    adoptertIUtlandet: YesOrNo,\n    ankomstdato: string,\n    søknadGjelderEtNyttBarn: boolean,\n    fødselsdatoer: string[] | undefined\n) => {\n    if (søknadGjelderEtNyttBarn) {\n        return (\n            (includeAdoptertIUtlandet(adopsjonAvEktefellesBarn, adopsjonsdato) &&\n                adoptertIUtlandet !== YesOrNo.UNANSWERED) ||\n            (!includeAdoptertIUtlandet(adopsjonAvEktefellesBarn, adopsjonsdato) &&\n                fødselsdatoer !== undefined &&\n                hasValue(fødselsdatoer[0])) ||\n            (adopsjonAvEktefellesBarn === YesOrNo.YES && fødselsdatoer !== undefined && hasValue(fødselsdatoer[0]))\n        );\n    } else {\n        return (\n            (adopsjonAvEktefellesBarn === YesOrNo.YES && hasValue(adopsjonsdato)) ||\n            (adopsjonAvEktefellesBarn === YesOrNo.NO &&\n                hasValue(adopsjonsdato) &&\n                !includeAdoptertIUtlandet(adopsjonAvEktefellesBarn, adopsjonsdato)) ||\n            (adopsjonAvEktefellesBarn === YesOrNo.NO &&\n                includeAdoptertIUtlandet(adopsjonAvEktefellesBarn, adopsjonsdato) &&\n                adoptertIUtlandet === YesOrNo.NO) ||\n            (adopsjonAvEktefellesBarn === YesOrNo.NO &&\n                includeAdoptertIUtlandet(adopsjonAvEktefellesBarn, adopsjonsdato) &&\n                adoptertIUtlandet === YesOrNo.YES &&\n                hasValue(ankomstdato))\n        );\n    }\n};\n\nconst OmBarnetFormConfig: QuestionConfig<OmBarnetQuestionPayload, OmBarnetFormField> = {\n    [OmBarnetFormField.adopsjonAvEktefellesBarn]: {\n        isIncluded: ({ situasjon }) => situasjon === 'adopsjon',\n        isAnswered: ({ adopsjonAvEktefellesBarn }) => adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED,\n        visibilityFilter: ({ situasjon }) => situasjon === 'adopsjon',\n    },\n    [OmBarnetFormField.erBarnetFødt]: {\n        isIncluded: ({ situasjon, søknadGjelderEtNyttBarn }) => søknadGjelderEtNyttBarn && situasjon === 'fødsel',\n        isAnswered: ({ erBarnetFødt }) => erBarnetFødt !== YesOrNo.UNANSWERED,\n        visibilityFilter: ({ situasjon, søknadGjelderEtNyttBarn }) =>\n            skalViseErBarnFødt(situasjon, søknadGjelderEtNyttBarn),\n    },\n    [OmBarnetFormField.antallBarn]: {\n        isIncluded: ({ søknadGjelderEtNyttBarn }) => søknadGjelderEtNyttBarn,\n        isAnswered: ({ antallBarn }) => hasValue(antallBarn),\n        visibilityFilter: ({ adopsjonAvEktefellesBarn, erBarnetFødt, adopsjonsdato }) =>\n            erBarnetFødt !== YesOrNo.UNANSWERED ||\n            (adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED && hasValue(adopsjonsdato)),\n    },\n    [OmBarnetFormField.antallBarnSelect]: {\n        isIncluded: ({ antallBarn, søknadGjelderEtNyttBarn }) =>\n            parseInt(antallBarn, 10) >= 3 && søknadGjelderEtNyttBarn,\n        isAnswered: ({ antallBarnSelect }) => hasValue(antallBarnSelect),\n        visibilityFilter: ({ adopsjonAvEktefellesBarn, erBarnetFødt, adopsjonsdato, antallBarn }) =>\n            parseInt(antallBarn, 10) >= 3 &&\n            (erBarnetFødt !== YesOrNo.UNANSWERED ||\n                (adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED && hasValue(adopsjonsdato))),\n    },\n    [OmBarnetFormField.adopsjonsdato]: {\n        isIncluded: ({ adopsjonAvEktefellesBarn }) => adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED,\n        isAnswered: ({ adopsjonsdato }) => hasValue(adopsjonsdato),\n        visibilityFilter: ({ adopsjonAvEktefellesBarn }) => adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED,\n    },\n    [OmBarnetFormField.fødselsdatoer]: {\n        isIncluded: ({ erBarnetFødt, adopsjonAvEktefellesBarn, søknadGjelderEtNyttBarn }) =>\n            søknadGjelderEtNyttBarn &&\n            (erBarnetFødt === YesOrNo.YES || adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED),\n        isAnswered: ({ fødselsdatoer }) => fødselsdatoer.length > 0 && hasValue(fødselsdatoer[0]),\n        visibilityFilter: ({ antallBarn }) => {\n            return hasValue(antallBarn);\n        },\n    },\n    [OmBarnetFormField.omsorgsovertakelse]: {\n        isIncluded: ({ adopsjonAvEktefellesBarn }) => adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED,\n        isAnswered: () => true,\n        visibilityFilter: ({\n            adopsjonsdato,\n            adopsjonAvEktefellesBarn,\n            ankomstdato,\n            adoptertIUtlandet,\n            søknadGjelderEtNyttBarn,\n            fødselsdatoer,\n        }) =>\n            skalViseOmsorgsovertakelse(\n                adopsjonsdato,\n                adopsjonAvEktefellesBarn,\n                adoptertIUtlandet,\n                ankomstdato,\n                søknadGjelderEtNyttBarn,\n                fødselsdatoer\n            ),\n    },\n    [OmBarnetFormField.termindato]: {\n        isIncluded: ({ rolle, fødselsdatoer, erBarnetFødt, situasjon, valgteRegistrerteBarn }) =>\n            includeTermindato(rolle, fødselsdatoer[0], valgteRegistrerteBarn, situasjon) || erBarnetFødt === YesOrNo.NO,\n        isAnswered: ({ termindato }) => hasValue(termindato),\n        visibilityFilter: ({ fødselsdatoer, erBarnetFødt, antallBarn, valgteRegistrerteBarn }) => {\n            return (\n                hasValue(fødselsdatoer[0]) ||\n                (erBarnetFødt === YesOrNo.NO && hasValue(antallBarn)) ||\n                (valgteRegistrerteBarn !== undefined && valgteRegistrerteBarn.length > 0)\n            );\n        },\n    },\n    [OmBarnetFormField.terminbekreftelse]: {\n        isIncluded: ({ erBarnetFødt, arbeidsforhold, rolle, termindato }) =>\n            includeTerminbekreftelse(erBarnetFødt, arbeidsforhold, rolle, termindato),\n        isAnswered: ({ terminbekreftelse }) => hasValue(terminbekreftelse),\n        visibilityFilter: ({ termindato }) => hasValue(termindato),\n    },\n    [OmBarnetFormField.terminbekreftelsedato]: {\n        isIncluded: ({ erBarnetFødt, arbeidsforhold, rolle, termindato }) =>\n            erBarnetFødt === YesOrNo.NO && arbeidsforhold.length === 0 && kanSøkePåTermin(rolle, termindato),\n        isAnswered: ({ terminbekreftelsedato }) => hasValue(terminbekreftelsedato),\n        visibilityFilter: ({ termindato }) => hasValue(termindato),\n    },\n    [OmBarnetFormField.adoptertIUtlandet]: {\n        isIncluded: ({ adopsjonAvEktefellesBarn, adopsjonsdato }) =>\n            includeAdoptertIUtlandet(adopsjonAvEktefellesBarn, adopsjonsdato),\n        isAnswered: ({ adoptertIUtlandet }) => adoptertIUtlandet !== YesOrNo.UNANSWERED,\n        visibilityFilter: ({ fødselsdatoer, søknadGjelderEtNyttBarn }) =>\n            (søknadGjelderEtNyttBarn && hasValue(fødselsdatoer[0])) || !søknadGjelderEtNyttBarn,\n    },\n    [OmBarnetFormField.ankomstdato]: {\n        isIncluded: ({ adopsjonAvEktefellesBarn, adopsjonsdato }) =>\n            includeAnkomstDato(adopsjonAvEktefellesBarn, adopsjonsdato),\n        isAnswered: ({ ankomstdato }) => hasValue(ankomstdato),\n        visibilityFilter: ({ adoptertIUtlandet }) => adoptertIUtlandet === YesOrNo.YES,\n    },\n};\n\nconst omBarnetQuestionsConfig = Questions<OmBarnetQuestionPayload, OmBarnetFormField>(OmBarnetFormConfig);\n\nexport default omBarnetQuestionsConfig;\n","import {\n    attenUkerTreDager,\n    date21DaysAgo,\n    Block,\n    dateToday,\n    hasValue,\n    intlUtils,\n    UtvidetInformasjon,\n} from '@navikt/fp-common';\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport VeilederNormal from 'app/assets/VeilederNormal';\nimport FormikFileUploader from 'app/components/formik-file-uploader/FormikFileUploader';\nimport Søkersituasjon from 'app/context/types/Søkersituasjon';\nimport links from 'app/links/links';\nimport { AttachmentType } from 'app/types/AttachmentType';\nimport { Skjemanummer } from 'app/types/Skjemanummer';\nimport isFarEllerMedmor from 'app/utils/isFarEllerMedmor';\nimport Lenke from 'nav-frontend-lenker';\nimport Veilederpanel from 'nav-frontend-veilederpanel';\nimport React, { FunctionComponent } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { OmBarnetFormComponents, OmBarnetFormData, OmBarnetFormField } from '../omBarnetFormConfig';\nimport { kanSøkePåTermin } from '../omBarnetQuestionsConfig';\nimport { validateTerminbekreftelse, validateTermindato } from '../validation/omBarnetValidering';\ninterface Props {\n    søkersituasjon: Søkersituasjon;\n    formValues: OmBarnetFormData;\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>;\n    søknadGjelderEtNyttBarn: boolean;\n}\n\nconst Termin: FunctionComponent<Props> = ({ søkersituasjon, visibility, formValues, søknadGjelderEtNyttBarn }) => {\n    const intl = useIntl();\n\n    if (søkersituasjon.situasjon === 'adopsjon' || formValues.erBarnetFødt !== YesOrNo.NO || !søknadGjelderEtNyttBarn) {\n        return null;\n    }\n\n    const søkerErFarMedmor = isFarEllerMedmor(søkersituasjon.rolle);\n    const farMedMorSøkerPåTermin = søkerErFarMedmor && hasValue(formValues.termindato);\n    const intlSpørsmålAntallBarnId = søkerErFarMedmor ? 'omBarnet.antallBarn.termin.far' : 'omBarnet.antallBarn.termin';\n\n    const intlTerminbekreftelseId = søkerErFarMedmor\n        ? 'omBarnet.veileder.terminbekreftelse.far'\n        : 'omBarnet.veileder.terminbekreftelse';\n\n    const intlTermindatoInfotekst = søkerErFarMedmor\n        ? 'omBarnet.termindato.infotekst.farMedmor'\n        : 'omBarnet.termindato.infotekst';\n    return (\n        <>\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.antallBarn)}>\n                <OmBarnetFormComponents.RadioPanelGroup\n                    name={OmBarnetFormField.antallBarn}\n                    radios={[\n                        {\n                            label: intlUtils(intl, 'omBarnet.radiobutton.ettBarn'),\n                            value: '1',\n                        },\n                        {\n                            label: intlUtils(intl, 'omBarnet.radiobutton.tvillinger'),\n                            value: '2',\n                        },\n                        {\n                            label: intlUtils(intl, 'omBarnet.radiobutton.flere'),\n                            value: '3',\n                        },\n                    ]}\n                    useTwoColumns={true}\n                    legend={intlUtils(intl, intlSpørsmålAntallBarnId)}\n                />\n            </Block>\n            <Block\n                padBottom=\"l\"\n                visible={formValues.antallBarn !== undefined && parseInt(formValues.antallBarn, 10) >= 3}\n            >\n                <OmBarnetFormComponents.Select name={OmBarnetFormField.antallBarnSelect}>\n                    <option value=\"\" />\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                    <option value=\"6\">6</option>\n                    <option value=\"7\">7</option>\n                    <option value=\"8\">8</option>\n                    <option value=\"9\">9</option>\n                </OmBarnetFormComponents.Select>\n            </Block>\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.termindato)}>\n                <OmBarnetFormComponents.DatePicker\n                    name={OmBarnetFormField.termindato}\n                    label={intlUtils(intl, 'omBarnet.termindato.termin')}\n                    placeholder={'dd.mm.åååå'}\n                    description={\n                        <UtvidetInformasjon apneLabel={intlUtils(intl, 'omBarnet.termindato.åpneLabel')}>\n                            {intlUtils(intl, intlTermindatoInfotekst)}\n                        </UtvidetInformasjon>\n                    }\n                    minDate={date21DaysAgo}\n                    maxDate={attenUkerTreDager}\n                    validate={validateTermindato(intl)}\n                />\n            </Block>\n\n            {farMedMorSøkerPåTermin && !kanSøkePåTermin(søkersituasjon.rolle, formValues.termindato) && (\n                <Block padBottom=\"l\">\n                    <Veilederpanel fargetema=\"normal\" svg={<VeilederNormal transparentBackground={true} />}>\n                        <FormattedMessage\n                            id=\"omBarnet.veileder.medMorEllerFarTermin\"\n                            values={{\n                                lenke: (\n                                    <Lenke href={links.papirsøknad}>\n                                        <FormattedMessage id=\"omBarnet.papirsøknad.lenke\" />\n                                    </Lenke>\n                                ),\n                            }}\n                        />\n                    </Veilederpanel>\n                </Block>\n            )}\n\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.terminbekreftelse)}>\n                <Veilederpanel fargetema=\"normal\" svg={<VeilederNormal transparentBackground={true} />}>\n                    <FormattedMessage id={intlTerminbekreftelseId} />\n                </Veilederpanel>\n            </Block>\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.terminbekreftelse)}>\n                <FormikFileUploader\n                    label={intlUtils(intl, 'omBarnet.terminbekreftelse.lastOpp')}\n                    name={OmBarnetFormField.terminbekreftelse}\n                    attachments={formValues.terminbekreftelse || []}\n                    attachmentType={AttachmentType.TERMINBEKREFTELSE}\n                    skjemanummer={Skjemanummer.TERMINBEKREFTELSE}\n                />\n            </Block>\n            <Block padBottom=\"l\" visible={visibility.isVisible(OmBarnetFormField.terminbekreftelsedato)}>\n                <OmBarnetFormComponents.DatePicker\n                    name={OmBarnetFormField.terminbekreftelsedato}\n                    label={intlUtils(intl, 'omBarnet.terminbekreftelseDato')}\n                    placeholder={'dd.mm.åååå'}\n                    validate={validateTerminbekreftelse(intl)}\n                    maxDate={dateToday}\n                />\n            </Block>\n        </>\n    );\n};\n\nexport default Termin;\n","import { hasValue } from '@navikt/fp-common';\nimport { dateToISOString, YesOrNo } from '@navikt/sif-common-formik/lib';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport Barn, {\n    AdoptertBarn,\n    BarnType,\n    FødtBarn,\n    IkkeUtfyltTypeBarn,\n    isAdoptertAnnetBarn,\n    isAdoptertStebarn,\n    isFødtBarn,\n    isUfødtBarn,\n} from 'app/context/types/Barn';\nimport Arbeidsforhold from 'app/types/Arbeidsforhold';\nimport { AttachmentType } from 'app/types/AttachmentType';\nimport { Situasjon } from 'app/types/Situasjon';\nimport { Skjemanummer } from 'app/types/Skjemanummer';\nimport { ISOStringToDate } from 'app/utils/dateUtils';\nimport { convertBooleanOrUndefinedToYesOrNo, convertYesOrNoOrUndefinedToBoolean } from 'app/utils/formUtils';\nimport { lagSendSenereDokumentNårIngenAndreFinnes } from 'app/utils/vedleggUtils';\nimport { OmBarnetFormData, OmBarnetFormField } from './omBarnetFormConfig';\n\nconst getInitValues = (): Readonly<OmBarnetFormData> => ({\n    [OmBarnetFormField.erBarnetFødt]: YesOrNo.UNANSWERED,\n    [OmBarnetFormField.adopsjonAvEktefellesBarn]: YesOrNo.UNANSWERED,\n    [OmBarnetFormField.antallBarn]: '',\n    [OmBarnetFormField.antallBarnSelect]: '',\n    [OmBarnetFormField.adopsjonsdato]: '',\n    [OmBarnetFormField.fødselsdatoer]: [],\n    [OmBarnetFormField.omsorgsovertakelse]: [],\n    [OmBarnetFormField.termindato]: '',\n    [OmBarnetFormField.terminbekreftelse]: [],\n    [OmBarnetFormField.terminbekreftelsedato]: '',\n    [OmBarnetFormField.adoptertIUtlandet]: YesOrNo.UNANSWERED,\n    [OmBarnetFormField.ankomstdato]: '',\n});\n\nexport const cleanupOmBarnetFormData = (\n    values: OmBarnetFormData,\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>\n): OmBarnetFormData => {\n    const cleanedData: OmBarnetFormData = {\n        erBarnetFødt: visibility.isVisible(OmBarnetFormField.erBarnetFødt) ? values.erBarnetFødt : YesOrNo.UNANSWERED,\n        adopsjonAvEktefellesBarn: visibility.isVisible(OmBarnetFormField.adopsjonAvEktefellesBarn)\n            ? values.adopsjonAvEktefellesBarn\n            : YesOrNo.UNANSWERED,\n        antallBarn: visibility.isVisible(OmBarnetFormField.antallBarn) ? values.antallBarn : '',\n        antallBarnSelect: visibility.isVisible(OmBarnetFormField.antallBarnSelect) ? values.antallBarnSelect : '',\n        adopsjonsdato: visibility.isVisible(OmBarnetFormField.adopsjonsdato) ? values.adopsjonsdato : '',\n        fødselsdatoer: visibility.isVisible(OmBarnetFormField.fødselsdatoer) ? values.fødselsdatoer : [],\n        omsorgsovertakelse: visibility.isVisible(OmBarnetFormField.omsorgsovertakelse) ? values.omsorgsovertakelse : [],\n        termindato: visibility.isVisible(OmBarnetFormField.termindato) ? values.termindato : '',\n        terminbekreftelse: visibility.isVisible(OmBarnetFormField.terminbekreftelse) ? values.terminbekreftelse : [],\n        terminbekreftelsedato: visibility.isVisible(OmBarnetFormField.terminbekreftelsedato)\n            ? values.terminbekreftelsedato\n            : '',\n        adoptertIUtlandet: visibility.isVisible(OmBarnetFormField.adoptertIUtlandet)\n            ? values.adoptertIUtlandet\n            : YesOrNo.UNANSWERED,\n        ankomstdato: visibility.isVisible(OmBarnetFormField.ankomstdato) ? values.ankomstdato : '',\n    };\n\n    return cleanedData;\n};\n\nexport const mapOmDetValgteBarnetFormDataToState = (\n    valgtRegistrertBarn: FødtBarn | AdoptertBarn | IkkeUtfyltTypeBarn,\n    situasjon: Situasjon,\n    values: Partial<OmBarnetFormData>,\n    barnSøktOmFørMenIkkeRegistrert: boolean\n): Barn => {\n    if (valgtRegistrertBarn !== undefined && situasjon === 'fødsel') {\n        return {\n            ...valgtRegistrertBarn,\n            type: barnSøktOmFørMenIkkeRegistrert ? BarnType.UFØDT : BarnType.FØDT,\n            termindato: hasValue(values.termindato) ? ISOStringToDate(values.termindato) : undefined,\n            fødselsdatoer: valgtRegistrertBarn.fødselsdatoer,\n            antallBarn: valgtRegistrertBarn.antallBarn,\n        } as Barn;\n    }\n\n    const omsorgsovertakelse = lagSendSenereDokumentNårIngenAndreFinnes(\n        values.omsorgsovertakelse!,\n        AttachmentType.OMSORGSOVERTAKELSE,\n        Skjemanummer.OMSORGSOVERTAKELSESDATO\n    );\n\n    if (values.adopsjonAvEktefellesBarn === YesOrNo.YES) {\n        return {\n            ...valgtRegistrertBarn,\n            type: BarnType.ADOPTERT_STEBARN,\n            adopsjonsdato: ISOStringToDate(values.adopsjonsdato)!,\n            omsorgsovertakelse,\n        };\n    }\n\n    return {\n        ...valgtRegistrertBarn,\n        type: BarnType.ADOPTERT_ANNET_BARN,\n        adopsjonsdato: ISOStringToDate(values.adopsjonsdato)!,\n        adoptertIUtlandet: convertYesOrNoOrUndefinedToBoolean(values.adoptertIUtlandet)!,\n        ankomstdato: values.adoptertIUtlandet === YesOrNo.YES ? ISOStringToDate(values.ankomstdato) : undefined,\n        omsorgsovertakelse,\n    };\n};\n\nexport const mapOmBarnetFormDataToState = (\n    values: Partial<OmBarnetFormData>,\n    arbeidsforhold: Arbeidsforhold[],\n    valgtRegistrertBarn: Barn | undefined,\n    situasjon: Situasjon,\n    barnSøktOmFørMenIkkeRegistrert: boolean\n): Barn => {\n    if (valgtRegistrertBarn !== undefined) {\n        return mapOmDetValgteBarnetFormDataToState(\n            valgtRegistrertBarn as FødtBarn | AdoptertBarn | IkkeUtfyltTypeBarn,\n            situasjon,\n            values,\n            barnSøktOmFørMenIkkeRegistrert\n        );\n    }\n    const antallBarn =\n        parseInt(values.antallBarn!, 10) < 3\n            ? parseInt(values.antallBarn!, 10)\n            : parseInt(values.antallBarnSelect!, 10);\n\n    if (values.erBarnetFødt === YesOrNo.YES) {\n        return {\n            type: BarnType.FØDT,\n            fødselsdatoer: values.fødselsdatoer!.map((fødselsdato) => ISOStringToDate(fødselsdato)!),\n            antallBarn,\n            termindato: hasValue(values.termindato) ? ISOStringToDate(values.termindato) : undefined,\n        };\n    }\n\n    if (values.erBarnetFødt === YesOrNo.NO) {\n        const terminbekreftelse = lagSendSenereDokumentNårIngenAndreFinnes(\n            values.terminbekreftelse!,\n            AttachmentType.TERMINBEKREFTELSE,\n            Skjemanummer.TERMINBEKREFTELSE\n        );\n\n        if (arbeidsforhold.length === 0) {\n            return {\n                type: BarnType.UFØDT,\n                terminbekreftelse: terminbekreftelse!,\n                terminbekreftelsedato: ISOStringToDate(values.terminbekreftelsedato),\n                antallBarn,\n                termindato: ISOStringToDate(values.termindato)!,\n            };\n        }\n        return {\n            type: BarnType.UFØDT,\n            antallBarn,\n            termindato: ISOStringToDate(values.termindato)!,\n        };\n    }\n\n    const omsorgsovertakelse = lagSendSenereDokumentNårIngenAndreFinnes(\n        values.omsorgsovertakelse!,\n        AttachmentType.OMSORGSOVERTAKELSE,\n        Skjemanummer.OMSORGSOVERTAKELSESDATO\n    );\n\n    if (values.adopsjonAvEktefellesBarn === YesOrNo.YES) {\n        return {\n            type: BarnType.ADOPTERT_STEBARN,\n            adopsjonsdato: ISOStringToDate(values.adopsjonsdato)!,\n            antallBarn,\n            fødselsdatoer: values.fødselsdatoer!.map((fødselsdato) => ISOStringToDate(fødselsdato)!),\n            omsorgsovertakelse,\n        };\n    }\n\n    return {\n        type: BarnType.ADOPTERT_ANNET_BARN,\n        fødselsdatoer: values.fødselsdatoer!.map((fødselsdato) => ISOStringToDate(fødselsdato)!),\n        adopsjonsdato: ISOStringToDate(values.adopsjonsdato)!,\n        antallBarn,\n        adoptertIUtlandet: convertYesOrNoOrUndefinedToBoolean(values.adoptertIUtlandet)!,\n        ankomstdato: values.adoptertIUtlandet === YesOrNo.YES ? ISOStringToDate(values.ankomstdato) : undefined,\n        omsorgsovertakelse,\n    };\n};\n\nexport const getOmBarnetInitialValues = (barn: Barn, arbeidsforhold: Arbeidsforhold[]): OmBarnetFormData => {\n    const initialOmBarnetValues = getInitValues();\n\n    if (!barn) {\n        return initialOmBarnetValues;\n    }\n\n    const erFlereEnnToBarn = barn.antallBarn > 2;\n\n    if (isFødtBarn(barn)) {\n        return {\n            ...initialOmBarnetValues,\n            erBarnetFødt: YesOrNo.YES,\n            fødselsdatoer: barn.fødselsdatoer.map((fødselsdato) => dateToISOString(fødselsdato)),\n            termindato: dateToISOString(barn.termindato),\n            antallBarn: erFlereEnnToBarn ? '3' : barn.antallBarn.toString(),\n            antallBarnSelect: erFlereEnnToBarn ? barn.antallBarn.toString() : '',\n        };\n    }\n\n    if (isUfødtBarn(barn)) {\n        if (arbeidsforhold.length === 0) {\n            return {\n                ...initialOmBarnetValues,\n                erBarnetFødt: YesOrNo.NO,\n                terminbekreftelse: barn.terminbekreftelse || [],\n                terminbekreftelsedato: dateToISOString(barn.terminbekreftelsedato),\n                termindato: dateToISOString(barn.termindato),\n                antallBarn: erFlereEnnToBarn ? '3' : barn.antallBarn.toString(),\n                antallBarnSelect: erFlereEnnToBarn ? barn.antallBarn.toString() : '',\n            };\n        }\n\n        return {\n            ...initialOmBarnetValues,\n            erBarnetFødt: YesOrNo.NO,\n            termindato: dateToISOString(barn.termindato),\n            antallBarn: erFlereEnnToBarn ? '3' : barn.antallBarn.toString(),\n            antallBarnSelect: erFlereEnnToBarn ? barn.antallBarn.toString() : '',\n        };\n    }\n\n    if (isAdoptertAnnetBarn(barn)) {\n        return {\n            ...initialOmBarnetValues,\n            adopsjonAvEktefellesBarn: YesOrNo.NO,\n            fødselsdatoer: barn.fødselsdatoer.map((fødselsdato) => dateToISOString(fødselsdato)),\n            adopsjonsdato: dateToISOString(barn.adopsjonsdato),\n            antallBarn: erFlereEnnToBarn ? '3' : barn.antallBarn.toString(),\n            antallBarnSelect: erFlereEnnToBarn ? barn.antallBarn.toString() : '',\n            adoptertIUtlandet: convertBooleanOrUndefinedToYesOrNo(barn.adoptertIUtlandet),\n            omsorgsovertakelse: barn.omsorgsovertakelse!,\n            ankomstdato: dateToISOString(barn.ankomstdato),\n        };\n    }\n\n    if (isAdoptertStebarn(barn)) {\n        return {\n            ...initialOmBarnetValues,\n            adopsjonAvEktefellesBarn: YesOrNo.YES,\n            adopsjonsdato: dateToISOString(barn.adopsjonsdato),\n            antallBarn: erFlereEnnToBarn ? '3' : barn.antallBarn.toString(),\n            antallBarnSelect: erFlereEnnToBarn ? barn.antallBarn.toString() : '',\n            fødselsdatoer: barn.fødselsdatoer.map((fødselsdato) => dateToISOString(fødselsdato)),\n            omsorgsovertakelse: barn.omsorgsovertakelse,\n        };\n    }\n\n    return initialOmBarnetValues;\n};\n","import * as React from 'react';\nimport { RegistrertBarn } from 'app/types/Person';\nimport RegistrertePersonalia from 'app/components/registrerte-personalia/RegistrertePersonalia';\nimport { Block, intlUtils } from '@navikt/fp-common';\nimport { dateToISOString } from '@navikt/sif-common-formik/lib';\nimport { OmBarnetFormComponents, OmBarnetFormField } from '../omBarnetFormConfig';\nimport { validateTermindatoFødsel } from '../validation/omBarnetValidering';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport dayjs from 'dayjs';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport { Element } from 'nav-frontend-typografi';\nimport { formaterFødselsdatoerPåBarn, getLeverBarnet, getTittelBarnNårNavnSkalIkkeVises } from 'app/utils/barnUtils';\nimport { sorterRegistrerteBarnEtterEldstOgNavn } from 'app/pages/velkommen/velkommenUtils';\n\ninterface Props {\n    valgteBarn: RegistrertBarn[];\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>;\n}\n\nconst ValgteRegistrerteBarn: React.FunctionComponent<Props> = ({ valgteBarn, visibility }: Props) => {\n    const intl = useIntl();\n    const antallBarn = valgteBarn.length;\n    const alleBarnaLever = valgteBarn.every((b) => getLeverBarnet(b));\n    valgteBarn.sort(sorterRegistrerteBarnEtterEldstOgNavn);\n    const fødselsdatoer = valgteBarn.map((b) => b.fødselsdato);\n    const fødselsdato = valgteBarn[0].fødselsdato;\n    return (\n        <>\n            <Block padBottom=\"l\">\n                <div>\n                    <Block padBottom=\"s\">\n                        <Element>\n                            <FormattedMessage id=\"omBarnet.valgteBarn.tittel\" values={{ antallBarn }} />\n                        </Element>\n                    </Block>\n                    {alleBarnaLever ? (\n                        valgteBarn.map((barn: RegistrertBarn, index: number) => (\n                            <Block padBottom=\"l\" key={index}>\n                                <RegistrertePersonalia\n                                    person={barn}\n                                    fødselsdatoForVisning={formaterFødselsdatoerPåBarn([barn.fødselsdato])}\n                                    visEtternavn={false}\n                                />\n                            </Block>\n                        ))\n                    ) : (\n                        <Block padBottom=\"l\">\n                            <RegistrertePersonalia\n                                person={valgteBarn[0]}\n                                fødselsdatoForVisning={formaterFødselsdatoerPåBarn(fødselsdatoer)}\n                                altTekstHvisUkjentNavn={getTittelBarnNårNavnSkalIkkeVises(\n                                    undefined,\n                                    fødselsdatoer,\n                                    valgteBarn.length,\n                                    intl\n                                )}\n                                visEtternavn={false}\n                            />\n                        </Block>\n                    )}\n                </div>\n            </Block>\n            <Block visible={visibility.isVisible(OmBarnetFormField.termindato) && valgteBarn.length > 0}>\n                <OmBarnetFormComponents.DatePicker\n                    name={OmBarnetFormField.termindato}\n                    label={intlUtils(intl, 'omBarnet.termindato.født')}\n                    dayPickerProps={{\n                        initialMonth: fødselsdato,\n                    }}\n                    minDate={dayjs(fødselsdato).subtract(1, 'months').toDate()}\n                    maxDate={dayjs(fødselsdato).add(6, 'months').toDate()}\n                    placeholder={'dd.mm.åååå'}\n                    validate={validateTermindatoFødsel(dateToISOString(fødselsdato), intl)}\n                />\n            </Block>\n        </>\n    );\n};\n\nexport default ValgteRegistrerteBarn;\n","import { Block, hasValue, intlUtils, Step } from '@navikt/fp-common';\nimport actionCreator from 'app/context/action/actionCreator';\nimport SøknadRoutes from 'app/routes/routes';\nimport { Hovedknapp } from 'nav-frontend-knapper';\nimport React from 'react';\nimport { useIntl } from 'react-intl';\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\nimport useSøknad from 'app/utils/hooks/useSøknad';\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\nimport useAvbrytSøknad from 'app/utils/hooks/useAvbrytSøknad';\nimport stepConfig, { getPreviousStepHref } from '../stepsConfig';\nimport AdopsjonAnnetBarn from './components/AdopsjonAnnetBarn';\nimport AdopsjonEktefellesBarn from './components/AdopsjonEktefellesBarn';\nimport BarnFødtEllerAdoptert from './components/BarnFødtEllerAdoptert';\nimport Fødsel from './components/Fødsel';\nimport Termin from './components/Termin';\nimport { OmBarnetFormComponents, OmBarnetFormData } from './omBarnetFormConfig';\nimport omBarnetQuestionsConfig from './omBarnetQuestionsConfig';\nimport { cleanupOmBarnetFormData, getOmBarnetInitialValues, mapOmBarnetFormDataToState } from './omBarnetUtils';\nimport { storeAppState } from 'app/utils/submitUtils';\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\nimport useFortsettSøknadSenere from 'app/utils/hooks/useFortsettSøknadSenere';\nimport { andreAugust2022ReglerGjelder, ISOStringToDate } from 'app/utils/dateUtils';\nimport { convertYesOrNoOrUndefinedToBoolean } from 'app/utils/formUtils';\nimport isFarEllerMedmor from 'app/utils/isFarEllerMedmor';\nimport { useForeldrepengesøknadContext } from 'app/context/hooks/useForeldrepengesøknadContext';\nimport { isFødtBarn, isUfødtBarn } from 'app/context/types/Barn';\nimport ValgteRegistrerteBarn from './components/ValgteRegistrerteBarn';\nimport { RegistrertBarn } from 'app/types/Person';\nimport useSaveLoadedRoute from 'app/utils/hooks/useSaveLoadedRoute';\nimport { getFamiliehendelsedato } from 'app/utils/barnUtils';\nimport { getErDatoInnenEnDagFraAnnenDato } from 'app/pages/velkommen/velkommenUtils';\n\nconst OmBarnet: React.FunctionComponent = () => {\n    const intl = useIntl();\n    const { søkersituasjon, barn } = useSøknad();\n    const { arbeidsforhold, registrerteBarn } = useSøkerinfo();\n    const { state } = useForeldrepengesøknadContext();\n    const { søknadGjelderEtNyttBarn } = state;\n    const onValidSubmitHandler = (values: Partial<OmBarnetFormData>) => {\n        const valgtBarn = !søknadGjelderEtNyttBarn ? barn : undefined;\n        const oppdatertBarn = mapOmBarnetFormDataToState(\n            values,\n            arbeidsforhold,\n            valgtBarn,\n            søkersituasjon.situasjon,\n            barnSøktOmFørMenIkkeRegistrert\n        );\n        return [actionCreator.setOmBarnet(oppdatertBarn)];\n    };\n\n    const { handleSubmit, isSubmitting } = useOnValidSubmit(\n        onValidSubmitHandler,\n        SøknadRoutes.ANNEN_FORELDER,\n        (state: ForeldrepengesøknadContextState) => storeAppState(state)\n    );\n    const onAvbrytSøknad = useAvbrytSøknad();\n    const onFortsettSøknadSenere = useFortsettSøknadSenere();\n    useSaveLoadedRoute(SøknadRoutes.OM_BARNET);\n\n    const findBarnetIRegistrerteBarn = (regBarn: RegistrertBarn) => {\n        if (!isUfødtBarn(barn) && barn.fnr !== undefined && barn.fnr.length > 0) {\n            return barn.fnr.includes(regBarn.fnr);\n        }\n        return false;\n    };\n\n    const familiehendelsesdato = barn ? ISOStringToDate(getFamiliehendelsedato(barn)) : undefined;\n\n    const dødfødteUtenFnrMedSammeFødselsdato =\n        barn && isFødtBarn(barn)\n            ? registrerteBarn.filter(\n                  (barn: RegistrertBarn) =>\n                      barn.fnr === undefined && getErDatoInnenEnDagFraAnnenDato(barn.fødselsdato, familiehendelsesdato)\n              )\n            : [];\n\n    const valgteRegistrerteBarn =\n        !søknadGjelderEtNyttBarn && !isUfødtBarn(barn)\n            ? registrerteBarn.filter((b) => findBarnetIRegistrerteBarn(b)).concat(dødfødteUtenFnrMedSammeFødselsdato)\n            : undefined;\n    const barnSøktOmFørMenIkkeRegistrert = !søknadGjelderEtNyttBarn && valgteRegistrerteBarn === undefined;\n\n    return (\n        <OmBarnetFormComponents.FormikWrapper\n            initialValues={getOmBarnetInitialValues(barn, arbeidsforhold)}\n            onSubmit={handleSubmit}\n            renderForm={({ values: formValues }) => {\n                const visibility = omBarnetQuestionsConfig.getVisbility({\n                    ...formValues,\n                    arbeidsforhold,\n                    situasjon: søkersituasjon.situasjon,\n                    rolle: søkersituasjon.rolle,\n                    valgteRegistrerteBarn,\n                    søknadGjelderEtNyttBarn: barnSøktOmFørMenIkkeRegistrert || søknadGjelderEtNyttBarn,\n                });\n\n                const farMedmorSøkerPåTerminFørWLB =\n                    isFarEllerMedmor(søkersituasjon.rolle) &&\n                    convertYesOrNoOrUndefinedToBoolean(formValues.erBarnetFødt) === false &&\n                    hasValue(formValues.termindato) &&\n                    !andreAugust2022ReglerGjelder(ISOStringToDate(formValues.termindato)!);\n\n                const visGåVidereKnapp = visibility.areAllQuestionsAnswered() && !farMedmorSøkerPåTerminFørWLB;\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 'søknad.pageheading')}\n                        backLinkHref={getPreviousStepHref('omBarnet')}\n                        activeStepId=\"omBarnet\"\n                        pageTitle={intlUtils(intl, 'søknad.omBarnet')}\n                        stepTitle={intlUtils(intl, 'søknad.omBarnet')}\n                        onCancel={onAvbrytSøknad}\n                        onContinueLater={onFortsettSøknadSenere}\n                        steps={stepConfig(intl)}\n                        kompakt={true}\n                    >\n                        <OmBarnetFormComponents.Form\n                            includeButtons={false}\n                            includeValidationSummary={true}\n                            cleanup={(values) => cleanupOmBarnetFormData(values, visibility)}\n                        >\n                            {valgteRegistrerteBarn !== undefined && (\n                                <ValgteRegistrerteBarn valgteBarn={valgteRegistrerteBarn} visibility={visibility} />\n                            )}\n                            <BarnFødtEllerAdoptert visibility={visibility} />\n                            <AdopsjonAnnetBarn\n                                søkersituasjon={søkersituasjon}\n                                formValues={formValues}\n                                visibility={visibility}\n                                søknadGjelderEtNyttBarn={søknadGjelderEtNyttBarn}\n                            />\n                            <AdopsjonEktefellesBarn\n                                søkersituasjon={søkersituasjon}\n                                formValues={formValues}\n                                visibility={visibility}\n                                søknadGjelderEtNyttBarn={søknadGjelderEtNyttBarn}\n                            />\n                            <Termin\n                                søkersituasjon={søkersituasjon}\n                                formValues={formValues}\n                                visibility={visibility}\n                                søknadGjelderEtNyttBarn={barnSøktOmFørMenIkkeRegistrert || søknadGjelderEtNyttBarn}\n                            />\n                            <Fødsel\n                                søkersituasjon={søkersituasjon}\n                                formValues={formValues}\n                                visibility={visibility}\n                                søknadGjelderEtNyttBarn={søknadGjelderEtNyttBarn}\n                            />\n                            <Block visible={visGåVidereKnapp} textAlignCenter={true}>\n                                <Hovedknapp disabled={isSubmitting} spinner={isSubmitting}>\n                                    {intlUtils(intl, 'søknad.gåVidere')}\n                                </Hovedknapp>\n                            </Block>\n                        </OmBarnetFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default OmBarnet;\n"],"names":["RegistrertePersonalia","_ref","person","fødselsnummerForVisning","fødselsdatoForVisning","altTekstHvisUkjentNavn","visEtternavn","bem","bemUtils","React","className","block","Element","element","undefined","formaterNavn","fornavn","etternavn","mellomnavn","Normaltekst","FormattedMessage","id","values","fnr","fødselsdato","OmBarnetFormField","OmBarnetFormComponents","getTypedFormComponents","dayjs","isSameOrAfter","isSameOrBefore","validateFødselsdato","intl","hasValue","isISODateString","etterDagensDato","intlUtils","isBefore","Date","subtract","validateFødselsdatoAdopsjon","adopsjonsdato","isDateABeforeDateB","barnetErUnder15årPåAdopsjonsdato","validateTermindato","termindato","erMindreEnn3UkerSiden","erIUke22Pluss3","validateTermindatoFødsel","add","validateAdopsjonsdato","validateTerminbekreftelse","terminbekreftelseDato","AdopsjonAnnetBarn","søkersituasjon","formValues","visibility","søknadGjelderEtNyttBarn","useIntl","situasjon","adopsjonAvEktefellesBarn","YesOrNo","Block","padBottom","DatePicker","label","name","validate","placeholder","visible","isVisible","antallBarn","RadioPanelGroup","radios","value","useTwoColumns","legend","parseInt","Select","antallBarnSelect","FieldArray","render","_toConsumableArray","Array","map","_","index","key","concat","minDate","toDate","maxDate","ISOStringToDate","showYearSelector","adoptertIUtlandet","YesOrNoQuestion","ankomstdato","fødselsdatoer","validateAnkomstdato","omsorgsovertakelse","Veilederpanel","fargetema","svg","VeilederNormal","transparentBackground","FormikFileUploader","attachments","attachmentType","AttachmentType","skjemanummer","Skjemanummer","AdopsjonEktefellesBarn","BarnFødtEllerAdoptert","Fødsel","erBarnetFødt","intlIdFødsel","includeTermindato","rolle","valgteRegistrerteBarn","eldsteBarnFødselsdato","length","getEldsteRegistrerteBarn","relevantFødselsdato","isFarEllerMedmor","andreAugust2022ReglerGjelder","erDatoInnenforDeSiste12Ukene","dato","twelveWeeksAfterBirthday","isAfter","includeAdoptertIUtlandet","førsteOktober2021ReglerGjelder","kanSøkePåTermin","OmBarnetFormConfig","_defineProperty","_OmBarnetFormConfig","isIncluded","isAnswered","_ref2","visibilityFilter","_ref3","_ref4","_ref5","_ref6","skalViseErBarnFødt","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","skalViseOmsorgsovertakelse","_ref21","_ref22","_ref23","terminbekreftelse","_ref24","includeTerminbekreftelse","arbeidsforhold","_ref25","_ref26","terminbekreftelsedato","_ref27","_ref28","_ref29","_ref30","_ref31","_ref32","_ref33","includeAnkomstDato","_ref34","_ref35","Questions","Termin","søkerErFarMedmor","farMedMorSøkerPåTermin","intlSpørsmålAntallBarnId","intlTerminbekreftelseId","intlTermindatoInfotekst","description","UtvidetInformasjon","apneLabel","date21DaysAgo","attenUkerTreDager","lenke","Lenke","href","links","dateToday","mapOmBarnetFormDataToState","valgtRegistrertBarn","barnSøktOmFørMenIkkeRegistrert","mapOmDetValgteBarnetFormDataToState","_objectSpread","type","BarnType","lagSendSenereDokumentNårIngenAndreFinnes","convertYesOrNoOrUndefinedToBoolean","getOmBarnetInitialValues","barn","initialOmBarnetValues","getInitValues","erFlereEnnToBarn","isFødtBarn","dateToISOString","toString","isUfødtBarn","isAdoptertAnnetBarn","convertBooleanOrUndefinedToYesOrNo","isAdoptertStebarn","ValgteRegistrerteBarn","valgteBarn","alleBarnaLever","every","b","getLeverBarnet","sort","sorterRegistrerteBarnEtterEldstOgNavn","formaterFødselsdatoerPåBarn","getTittelBarnNårNavnSkalIkkeVises","dayPickerProps","initialMonth","OmBarnet","_useSøknad","useSøknad","_useSøkerinfo","useSøkerinfo","registrerteBarn","useForeldrepengesøknadContext","state","_useOnValidSubmit","useOnValidSubmit","onValidSubmitHandler","oppdatertBarn","actionCreator","SøknadRoutes","storeAppState","handleSubmit","isSubmitting","onAvbrytSøknad","useAvbrytSøknad","onFortsettSøknadSenere","useFortsettSøknadSenere","useSaveLoadedRoute","familiehendelsesdato","getFamiliehendelsedato","dødfødteUtenFnrMedSammeFødselsdato","filter","getErDatoInnenEnDagFraAnnenDato","findBarnetIRegistrerteBarn","regBarn","includes","FormikWrapper","initialValues","onSubmit","renderForm","omBarnetQuestionsConfig","farMedmorSøkerPåTerminFørWLB","visGåVidereKnapp","areAllQuestionsAnswered","Step","bannerTitle","backLinkHref","getPreviousStepHref","activeStepId","pageTitle","stepTitle","onCancel","onContinueLater","steps","stepConfig","kompakt","Form","includeButtons","includeValidationSummary","cleanup","cleanupOmBarnetFormData","textAlignCenter","Hovedknapp","disabled","spinner"],"sourceRoot":""}