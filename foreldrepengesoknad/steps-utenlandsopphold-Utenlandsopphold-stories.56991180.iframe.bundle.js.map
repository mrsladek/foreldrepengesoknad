{"version":3,"file":"steps-utenlandsopphold-Utenlandsopphold-stories.56991180.iframe.bundle.js","mappings":"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","sources":["webpack://foreldrepengesoknad/../../node_modules/.pnpm/@navikt+sif-common-question-config@0.0.7/node_modules/@navikt/sif-common-question-config/lib/index.js","webpack://foreldrepengesoknad/./src/app/amplitude/amplitude.ts","webpack://foreldrepengesoknad/./src/app/steps/stepsConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/utenlandsopphold/utenlandsoppholdFormTypes.ts","webpack://foreldrepengesoknad/./src/app/steps/utenlandsopphold/utenlandsoppholdFormQuestions.ts","webpack://foreldrepengesoknad/./src/app/steps/utenlandsopphold/bostedUtlandListAndDialog/BostedUtlandForm.tsx","webpack://foreldrepengesoknad/./src/app/steps/utenlandsopphold/bostedUtlandListAndDialog/types.ts","webpack://foreldrepengesoknad/./src/app/steps/utenlandsopphold/bostedUtlandListAndDialog/BostedUtlandList.tsx","webpack://foreldrepengesoknad/./src/app/steps/utenlandsopphold/bostedUtlandListAndDialog/BostedUtlandListAndDialog.tsx","webpack://foreldrepengesoknad/./src/app/steps/utenlandsopphold/utenlandsoppholdFormUtils.ts","webpack://foreldrepengesoknad/./src/app/steps/utenlandsopphold/utenlandsoppholdValidering.ts","webpack://foreldrepengesoknad/./src/app/steps/utenlandsopphold/Utenlandsopphold.tsx","webpack://foreldrepengesoknad/./src/app/utils/formUtils.ts","webpack://foreldrepengesoknad/./src/app/utils/hooks/useAvbrytSøknad.ts","webpack://foreldrepengesoknad/./src/app/utils/hooks/useFortsettSøknadSenere.ts","webpack://foreldrepengesoknad/./src/app/utils/hooks/useOnValidSubmit.ts","webpack://foreldrepengesoknad/./src/storybook/decorators/withForeldrepengersøknadContext.tsx","webpack://foreldrepengesoknad/./src/storybook/decorators/withIntl.tsx","webpack://foreldrepengesoknad/./src/storybook/decorators/withRouter.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/steps/utenlandsopphold/Utenlandsopphold.stories.tsx","webpack://foreldrepengesoknad/./src/storybook/utils/AxiosMock.tsx","webpack://foreldrepengesoknad/./src/storybook/utils/ForeldrepengerStateMock.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.questionValueIsOk = (value) => {\n    return value !== undefined && value !== '';\n};\nconst isQuestionVisible = (questions, question, payload) => {\n    const config = questions[question];\n    if (!config) {\n        return false;\n    }\n    if (config.isIncluded && config.isIncluded(payload) === false) {\n        return false;\n    }\n    if (config.visibilityFilter && config.visibilityFilter(payload) === false) {\n        return false;\n    }\n    if (config.parentQuestion !== undefined) {\n        const parentQuestion = questions[config.parentQuestion];\n        return isQuestionVisible(questions, config.parentQuestion, payload) && parentQuestion.isAnswered(payload);\n    }\n    return true;\n};\nconst isQuestionAnswered = (questions, question, payload) => {\n    const config = questions[question];\n    if (!config || !config.isAnswered) {\n        return false;\n    }\n    return config.isAnswered(payload);\n};\nconst isQuestionIncluded = (questions, question, payload) => {\n    const config = questions[question];\n    if (!config) {\n        return false;\n    }\n    return config.isIncluded ? config.isIncluded(payload) : true;\n};\nconst areAllQuestionsAnswered = (questions, payload) => {\n    let allQuestionsHasAnswers = true;\n    Object.keys(questions).forEach((key) => {\n        const question = questions[key];\n        if (isQuestionVisible(questions, key, payload)) {\n            const isOptional = question.isOptional !== undefined ? question.isOptional(payload) === true : false;\n            allQuestionsHasAnswers = allQuestionsHasAnswers === true && (question.isAnswered(payload) || isOptional);\n        }\n    });\n    return allQuestionsHasAnswers;\n};\nconst getIncludedQuestions = (questions, payload) => {\n    const keys = Object.keys(questions).filter((key) => {\n        return isQuestionIncluded(questions, key, payload);\n    });\n    return keys;\n};\nconst validateQuestion = (value, questions, question, payload) => {\n    const config = questions[question];\n    if (!config || !config.validate) {\n        return undefined;\n    }\n    return config.validate(payload);\n};\nexports.Questions = (questions) => ({\n    getVisbility: (payload) => ({\n        validate: (key) => (value) => validateQuestion(value, questions, key, payload),\n        isVisible: (key) => isQuestionVisible(questions, key, payload),\n        isAnswered: (key) => isQuestionAnswered(questions, key, payload),\n        isIncluded: (key) => isQuestionIncluded(questions, key, payload),\n        areAllQuestionsAnswered: () => areAllQuestionsAnswered(questions, payload),\n        getIncludedQuestions: () => getIncludedQuestions(questions, payload),\n    }),\n    getQuestionVisbilityInfo: (key, payload) => {\n        const info = {\n            validate: (value) => validateQuestion(value, questions, key, payload),\n            isVisible: () => isQuestionVisible(questions, key, payload),\n            isAnswered: () => isQuestionAnswered(questions, key, payload),\n        };\n        return info;\n    },\n});\n","import amplitude from 'amplitude-js';\n\nexport enum PageKeys {\n    Velkommen = 'velkommen',\n    Situasjon = 'situasjon',\n    OmBarnetFødsel = 'om-barnet-fødsel',\n    OmBarnetAdopsjon = 'om-barnet-adopsjon',\n    AnnenForelder = 'annen-forelder',\n    ManglendeVedlegg = 'manglende-vedlegg',\n    UttaksplanSkjema = 'uttaksplan-skjema',\n    Uttaksplan = 'uttaksplan',\n    AndreInntekter = 'andre-inntekter',\n    Utenlandsopphold = 'utenlandsopphold',\n    Oppsummering = 'oppsummering',\n    SøknadSendt = 'søknad-sendt',\n    Umyndig = 'umyndig',\n}\n\nexport const initAmplitude = () => {\n    if (amplitude) {\n        amplitude.getInstance().init('default', '', {\n            apiEndpoint: 'amplitude.nav.no/collect-auto',\n            saveEvents: false,\n            includeUtm: true,\n            includeReferrer: true,\n            platform: window.location.toString(),\n            onError: () => console.log('Amplitude klarte ikke å starte opp'),\n        });\n    }\n};\n\nexport const logAmplitudeEvent = (eventName: string, eventData?: any, logToConsoleOnly = true) => {\n    if (logToConsoleOnly) {\n        if (process.env.NODE_ENV !== 'test') {\n            console.log({ eventName, eventData });\n        }\n        return;\n    }\n\n    setTimeout(() => {\n        try {\n            if (amplitude) {\n                amplitude.getInstance().logEvent(eventName, eventData);\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    });\n};\n","import { intlUtils } from '@navikt/fp-common';\nimport { assertUnreachable } from 'app/utils/globalUtil';\nimport { IntlShape } from 'react-intl';\n\ntype SøkersituasjonStepId = 'søkersituasjon';\ntype OmBarnetStepId = 'omBarnet';\ntype AnnenForelderId = 'annenForelder';\ntype UttaksplanInfo = 'uttaksplanInfo';\ntype Uttaksplan = 'uttaksplan';\ntype UtenlandsoppholdStepId = 'utenlandsopphold';\ntype Inntektsinformasjon = 'inntektsinformasjon';\ntype PåkrevdDokumentasjonStepId = 'dokumentasjon';\ntype OppsummeringStepId = 'oppsummering';\n\ntype StepIdWithBackHref =\n    | OmBarnetStepId\n    | AnnenForelderId\n    | UttaksplanInfo\n    | Uttaksplan\n    | UtenlandsoppholdStepId\n    | Inntektsinformasjon\n    | PåkrevdDokumentasjonStepId\n    | OppsummeringStepId;\n\ntype StepIdWithBackHrefEndringssøknad = PåkrevdDokumentasjonStepId | OppsummeringStepId;\n\nexport type StepId = SøkersituasjonStepId | StepIdWithBackHref;\n\ninterface StepConfig {\n    id: StepId;\n    index: number;\n    label: string;\n}\n\nconst stepConfig = (intl: IntlShape): StepConfig[] => [\n    {\n        id: 'søkersituasjon',\n        index: 0,\n        label: intlUtils(intl, 'steps.label.søkersituasjon'),\n    },\n    {\n        id: 'omBarnet',\n        index: 1,\n        label: intlUtils(intl, 'steps.label.omBarnet'),\n    },\n    {\n        id: 'annenForelder',\n        index: 2,\n        label: intlUtils(intl, 'steps.label.annenForelder'),\n    },\n    {\n        id: 'uttaksplanInfo',\n        index: 3,\n        label: intlUtils(intl, 'steps.label.uttaksplanInfo'),\n    },\n    {\n        id: 'uttaksplan',\n        index: 4,\n        label: intlUtils(intl, 'steps.label.uttaksplan'),\n    },\n    {\n        id: 'utenlandsopphold',\n        index: 5,\n        label: intlUtils(intl, 'steps.label.utenlandsopphold'),\n    },\n    {\n        id: 'inntektsinformasjon',\n        index: 6,\n        label: intlUtils(intl, 'steps.label.inntektsinformasjon'),\n    },\n    {\n        id: 'dokumentasjon',\n        index: 7,\n        label: intlUtils(intl, 'steps.label.dokumentasjon'),\n    },\n    {\n        id: 'oppsummering',\n        index: 8,\n        label: intlUtils(intl, 'steps.label.oppsummering'),\n    },\n];\n\nexport const getPreviousStepHrefEndringssøknad = (id: StepIdWithBackHrefEndringssøknad): string => {\n    let href;\n\n    switch (id) {\n        case 'dokumentasjon':\n            href = '/soknad/dokumentasjon';\n            break;\n        case 'oppsummering':\n            href = '/soknad/uttaksplan';\n            break;\n        default:\n            return assertUnreachable(id, `Forsøkt å nå en side som ikke er tilgjengelig i endringssøknaden: ${id}`);\n    }\n\n    return href;\n};\n\nexport const getPreviousStepHref = (id: StepIdWithBackHref): string => {\n    let href;\n\n    switch (id) {\n        case 'omBarnet':\n            href = '/soknad/sokersituasjon';\n            break;\n        case 'annenForelder':\n            href = '/soknad/om-barnet';\n            break;\n        case 'uttaksplanInfo':\n            href = '/soknad/annen-forelder';\n            break;\n        case 'uttaksplan':\n            href = '/soknad/uttaksplan-info';\n            break;\n        case 'utenlandsopphold':\n            href = '/soknad/uttaksplan';\n            break;\n        case 'inntektsinformasjon':\n            href = '/soknad/utenlandsopphold';\n            break;\n        case 'dokumentasjon':\n            href = '/soknad/dokumentasjon';\n            break;\n        case 'oppsummering':\n            href = '/soknad/inntektsinformasjon';\n            break;\n        default:\n            return assertUnreachable(id, `Forsøkt å nå en side som ikke er tilgjengelig i søknaden: ${id}`);\n    }\n\n    return href;\n};\n\nexport default stepConfig;\n","import { BostedUtland } from './bostedUtlandListAndDialog/types';\nimport { YesOrNo, getTypedFormComponents } from '@navikt/sif-common-formik/lib';\n\nexport enum UtenlandsoppholdFieldNames {\n    harBoddINorgeSiste12Mnd = 'harBoddINorgeSiste12Mnd',\n    utenlandsoppholdSiste12Mnd = 'utenlandsoppholdSiste12Mnd',\n    skalBoINorgeNeste12Mnd = 'skalBoINorgeNeste12Mnd',\n    utenlandsoppholdNeste12Mnd = 'utenlandsoppholdNeste12Mnd',\n}\n\nexport interface UtenlandsoppholdFormData {\n    [UtenlandsoppholdFieldNames.harBoddINorgeSiste12Mnd]: YesOrNo;\n    [UtenlandsoppholdFieldNames.utenlandsoppholdSiste12Mnd]: BostedUtland[];\n    [UtenlandsoppholdFieldNames.skalBoINorgeNeste12Mnd]: YesOrNo;\n    [UtenlandsoppholdFieldNames.utenlandsoppholdNeste12Mnd]: BostedUtland[];\n}\n\nexport const initialUtenlandsoppholdFormData: UtenlandsoppholdFormData = {\n    [UtenlandsoppholdFieldNames.harBoddINorgeSiste12Mnd]: YesOrNo.UNANSWERED,\n    [UtenlandsoppholdFieldNames.utenlandsoppholdSiste12Mnd]: [],\n    [UtenlandsoppholdFieldNames.skalBoINorgeNeste12Mnd]: YesOrNo.UNANSWERED,\n    [UtenlandsoppholdFieldNames.utenlandsoppholdNeste12Mnd]: [],\n};\n\nexport const UtenlandsoppholdFormComponents = getTypedFormComponents<\n    UtenlandsoppholdFieldNames,\n    UtenlandsoppholdFormData,\n    string\n>();\n","import { QuestionConfig, Questions } from '@navikt/sif-common-question-config';\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\nimport { UtenlandsoppholdFormData, UtenlandsoppholdFieldNames } from './utenlandsoppholdFormTypes';\n\nconst UtenlandsoppholdFormConfig: QuestionConfig<UtenlandsoppholdFormData, UtenlandsoppholdFieldNames> = {\n    [UtenlandsoppholdFieldNames.harBoddINorgeSiste12Mnd]: {\n        isAnswered: ({ harBoddINorgeSiste12Mnd }) => harBoddINorgeSiste12Mnd !== YesOrNo.UNANSWERED,\n        isIncluded: () => true,\n        visibilityFilter: ({ skalBoINorgeNeste12Mnd }) => skalBoINorgeNeste12Mnd !== YesOrNo.UNANSWERED,\n    },\n    [UtenlandsoppholdFieldNames.utenlandsoppholdSiste12Mnd]: {\n        isAnswered: ({ utenlandsoppholdSiste12Mnd }) => utenlandsoppholdSiste12Mnd.length > 0,\n        isOptional: () => true,\n        isIncluded: ({ harBoddINorgeSiste12Mnd }) => harBoddINorgeSiste12Mnd === YesOrNo.NO,\n    },\n    [UtenlandsoppholdFieldNames.skalBoINorgeNeste12Mnd]: {\n        isAnswered: ({ skalBoINorgeNeste12Mnd }) => skalBoINorgeNeste12Mnd !== YesOrNo.UNANSWERED,\n        isIncluded: () => true,\n    },\n    [UtenlandsoppholdFieldNames.utenlandsoppholdNeste12Mnd]: {\n        isAnswered: ({ utenlandsoppholdNeste12Mnd }) => utenlandsoppholdNeste12Mnd.length > 0,\n        isOptional: () => true,\n        isIncluded: ({ skalBoINorgeNeste12Mnd }) => skalBoINorgeNeste12Mnd === YesOrNo.NO,\n    },\n};\n\nexport const utenlandsoppholdFormQuestions = Questions<UtenlandsoppholdFormData, UtenlandsoppholdFieldNames>(\n    UtenlandsoppholdFormConfig\n);\n","import React from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { getTypedFormComponents } from '@navikt/sif-common-formik/lib';\nimport { Systemtittel } from 'nav-frontend-typografi';\nimport { BostedUtland, isValidBostedUtland } from './types';\nimport { Block, intlUtils, validateRequiredField } from '@navikt/fp-common';\nimport { dateRangeValidation, ISOStringToDate } from 'app/utils/dateUtils';\nimport dayjs from 'dayjs';\n\nexport interface BostedUtlandFormLabels {\n    tittel: string;\n}\n\ninterface Props {\n    minDate: Date;\n    maxDate: Date;\n    bosted?: BostedUtland;\n    onSubmit: (values: BostedUtland) => void;\n    onCancel: () => void;\n    erFremtidigOpphold: boolean;\n}\n\nenum BostedUtlandFormFields {\n    fom = 'fom',\n    tom = 'tom',\n    landkode = 'landkode',\n}\n\ntype FormValues = Partial<{\n    [BostedUtlandFormFields.fom]: string;\n    [BostedUtlandFormFields.tom]: string;\n    [BostedUtlandFormFields.landkode]: string;\n}>;\n\nconst Form = getTypedFormComponents<BostedUtlandFormFields, FormValues, string>();\n\nconst mapBostedToFormValues = (bosted: BostedUtland): FormValues => {\n    return {\n        fom: bosted.fom,\n        tom: bosted.tom,\n        landkode: bosted.landkode,\n    };\n};\n\nconst BostedUtlandForm: React.FunctionComponent<Props> = ({\n    maxDate,\n    minDate,\n    bosted,\n    onSubmit,\n    onCancel,\n    erFremtidigOpphold,\n}) => {\n    const intl = useIntl();\n    const onFormikSubmit = (formValues: FormValues) => {\n        const updatedBosted: Partial<BostedUtland> = {\n            ...bosted,\n            fom: formValues.fom,\n            tom: formValues.tom,\n            landkode: formValues.landkode,\n        };\n        if (isValidBostedUtland(updatedBosted)) {\n            onSubmit(updatedBosted);\n        } else {\n            throw new Error('BostedUtlandForm: Formvalues is not a valid BostedUtland on submit.');\n        }\n    };\n\n    return (\n        <Form.FormikWrapper\n            initialValues={bosted ? mapBostedToFormValues(bosted) : {}}\n            onSubmit={onFormikSubmit}\n            renderForm={({ values }) => {\n                return (\n                    <Form.Form onCancel={onCancel}>\n                        <Systemtittel tag=\"h1\">\n                            <FormattedMessage id={'utenlandsopphold.leggTilUtenlandsopphold.tittel'} />\n                        </Systemtittel>\n                        <Block>\n                            <Form.DateIntervalPicker\n                                legend={intlUtils(intl, 'utenlandsopphold.leggTilUtenlandsopphold.tidsrom')}\n                                fromDatepickerProps={{\n                                    name: BostedUtlandFormFields.fom,\n                                    label: intlUtils(intl, 'utenlandsopphold.leggTilUtenlandsopphold.fraogmed'),\n                                    fullscreenOverlay: true,\n                                    placeholder: 'dd.mm.åååå',\n                                    minDate,\n                                    maxDate: ISOStringToDate(values.tom) || maxDate,\n                                    validate: (value) => {\n                                        if (values.tom && values.fom && dayjs(values.tom).isSame(values.fom)) {\n                                            return 'Fra og med dato kan ikke være samme som til og med dato';\n                                        }\n\n                                        return dateRangeValidation.validateFromDateInRange({\n                                            intl,\n                                            date: ISOStringToDate(value),\n                                            minDate,\n                                            maxDate,\n                                            errorKey: 'valideringsfeil.fraOgMedDato.førTilDato',\n                                            toDate: ISOStringToDate(values.tom),\n                                            disableWeekend: false,\n                                        });\n                                    },\n                                }}\n                                toDatepickerProps={{\n                                    name: BostedUtlandFormFields.tom,\n                                    label: intlUtils(intl, 'utenlandsopphold.leggTilUtenlandsopphold.tilogmed'),\n                                    fullscreenOverlay: true,\n                                    placeholder: 'dd.mm.åååå',\n                                    minDate: ISOStringToDate(values.fom) || minDate,\n                                    maxDate,\n                                    validate: (value) => {\n                                        if (values.tom && values.fom && dayjs(values.tom).isSame(values.fom)) {\n                                            return 'Til og med dato kan ikke være samme som fra og med dato';\n                                        }\n\n                                        return dateRangeValidation.validateToDateInRange({\n                                            intl,\n                                            date: ISOStringToDate(value),\n                                            minDate,\n                                            maxDate,\n                                            errorKey: 'valideringsfeil.tilOgMedDato.etterFraDato',\n                                            fromDate: ISOStringToDate(values.fom),\n                                            disableWeekend: false,\n                                        });\n                                    },\n                                }}\n                            />\n                        </Block>\n                        <Block margin=\"xl\">\n                            <Form.CountrySelect\n                                name={BostedUtlandFormFields.landkode}\n                                label={\n                                    erFremtidigOpphold\n                                        ? intlUtils(\n                                              intl,\n                                              'utenlandsopphold.leggTilUtenlandsopphold.spørsmål.hvilketLandSkalDuBoI'\n                                          )\n                                        : intlUtils(\n                                              intl,\n                                              'utenlandsopphold.leggTilUtenlandsopphold.spørsmål.hvilketLandHarDuBoddI'\n                                          )\n                                }\n                                validate={(country) =>\n                                    validateRequiredField(\n                                        country,\n                                        intlUtils(\n                                            intl,\n                                            erFremtidigOpphold\n                                                ? 'valideringsfeil.utenlandsopphold.landDuSkalBoIPåkrevd'\n                                                : 'valideringsfeil.utenlandsopphold.landDuHarBoddIPåkrevd'\n                                        )\n                                    )\n                                }\n                                useAlpha3Code={false}\n                            />\n                        </Block>\n                    </Form.Form>\n                );\n            }}\n        />\n    );\n};\n\nexport default BostedUtlandForm;\n","export interface BostedUtland {\n    id?: string;\n    fom: string;\n    tom: string;\n    landkode: string;\n}\n\nexport const isValidBostedUtland = (bosted: Partial<BostedUtland>): bosted is BostedUtland => {\n    const { fom, landkode, tom } = bosted;\n    return fom !== undefined && landkode !== undefined && tom !== undefined;\n};\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport { getCountryName } from '@navikt/sif-common-formik';\nimport { BostedUtland } from './types';\nimport { ActionLink, bemUtils, formatDateExtended, ItemList } from '@navikt/fp-common';\n\nimport dayjs from 'dayjs';\n\nimport './bostedUtlandList.less';\n\ninterface Props {\n    bosteder: BostedUtland[];\n    onEdit?: (opphold: BostedUtland) => void;\n    onDelete?: (opphold: BostedUtland) => void;\n}\n\nconst bem = bemUtils('bostedUtlandList');\n\nconst BostedUtlandList: React.FunctionComponent<Props> = ({ bosteder, onDelete, onEdit }) => {\n    const intl = useIntl();\n    const renderBostedUtlandLabel = (opphold: BostedUtland): React.ReactNode => {\n        const navn = getCountryName(opphold.landkode, intl.locale);\n        return (\n            <div className={bem.element('label')}>\n                <span className={bem.element('land')}>\n                    {onEdit && <ActionLink onClick={() => onEdit(opphold)}>{navn}</ActionLink>}\n                    {!onEdit && <span>{navn}</span>}\n                </span>\n                <span className={bem.element('dato')}>\n                    {formatDateExtended(dayjs(opphold.fom).toDate())} -{' '}\n                    {formatDateExtended(dayjs(opphold.tom).toDate())}\n                </span>\n            </div>\n        );\n    };\n\n    return (\n        <ItemList<BostedUtland>\n            getItemId={(opphold: BostedUtland) => opphold.id}\n            getItemTitle={(opphold: BostedUtland) => getCountryName(opphold.landkode, intl.locale)}\n            onDelete={onDelete}\n            onEdit={onEdit}\n            labelRenderer={renderBostedUtlandLabel}\n            items={bosteder}\n        />\n    );\n};\n\nexport default BostedUtlandList;\n","import React from 'react';\nimport { FormikModalFormAndList, ModalFormAndListLabels } from '@navikt/sif-common-formik';\nimport BostedUtlandForm from './BostedUtlandForm';\nimport BostedUtlandListe from './BostedUtlandList';\nimport { BostedUtland } from './types';\nimport { sortItemsByFom } from '@navikt/fp-common';\n\ninterface Props<FieldNames> {\n    name: FieldNames;\n    validate?: any;\n    minDate: Date;\n    maxDate: Date;\n    labels: ModalFormAndListLabels;\n    erFremtidigOpphold: boolean;\n}\n\nfunction BostedUtlandListAndDialog<FieldNames>({\n    name,\n    minDate,\n    maxDate,\n    validate,\n    labels,\n    erFremtidigOpphold,\n}: Props<FieldNames>) {\n    return (\n        <FormikModalFormAndList<FieldNames, BostedUtland, string>\n            name={name}\n            labels={labels}\n            validate={validate}\n            dialogWidth=\"narrow\"\n            sortFunc={sortItemsByFom}\n            formRenderer={({ onSubmit, onCancel, item }) => (\n                <BostedUtlandForm\n                    bosted={item}\n                    minDate={minDate}\n                    maxDate={maxDate}\n                    onSubmit={onSubmit}\n                    onCancel={onCancel}\n                    erFremtidigOpphold={erFremtidigOpphold}\n                />\n            )}\n            listRenderer={({ items, onEdit, onDelete }) => (\n                <BostedUtlandListe bosteder={items} onEdit={onEdit} onDelete={onDelete} />\n            )}\n        />\n    );\n}\n\nexport default BostedUtlandListAndDialog;\n","import { initialUtenlandsoppholdFormData, UtenlandsoppholdFormData } from './utenlandsoppholdFormTypes';\nimport { YesOrNo } from '@navikt/sif-common-formik/lib';\nimport InformasjonOmUtenlandsopphold, { Utenlandsopphold } from 'app/context/types/InformasjonOmUtenlandsopphold';\nimport { convertBooleanOrUndefinedToYesOrNo, convertYesOrNoOrUndefinedToBoolean } from 'app/utils/formUtils';\nimport { BostedUtland } from './bostedUtlandListAndDialog/types';\n\nconst mapUtenlandsoppholdTilBostedUtland = (opphold: Utenlandsopphold): BostedUtland => ({\n    fom: opphold.tidsperiode.fom,\n    tom: opphold.tidsperiode.tom!,\n    landkode: opphold.land,\n});\n\nexport const getInitialUtenlandsoppholdValuesFromState = (\n    init: InformasjonOmUtenlandsopphold\n): UtenlandsoppholdFormData => {\n    return {\n        ...initialUtenlandsoppholdFormData,\n        harBoddINorgeSiste12Mnd: convertBooleanOrUndefinedToYesOrNo(init.iNorgeSiste12Mnd),\n        skalBoINorgeNeste12Mnd: convertBooleanOrUndefinedToYesOrNo(init.iNorgeNeste12Mnd),\n        utenlandsoppholdNeste12Mnd: init.senereOpphold.map(mapUtenlandsoppholdTilBostedUtland),\n        utenlandsoppholdSiste12Mnd: init.tidligereOpphold.map(mapUtenlandsoppholdTilBostedUtland),\n    };\n};\n\nconst mapBostedUtlandToUtenlandsopphold = (bostedUtland: BostedUtland[]): Utenlandsopphold[] => {\n    return bostedUtland.map((bosted) => ({\n        land: bosted.landkode,\n        tidsperiode: {\n            fom: bosted.fom,\n            tom: bosted.tom,\n        },\n    }));\n};\n\nexport const mapUtenlandsoppholdFormDataToState = (\n    formValues: Partial<UtenlandsoppholdFormData>\n): InformasjonOmUtenlandsopphold => {\n    const { harBoddINorgeSiste12Mnd, skalBoINorgeNeste12Mnd, utenlandsoppholdNeste12Mnd, utenlandsoppholdSiste12Mnd } =\n        formValues;\n\n    return {\n        iNorgeSiste12Mnd: convertYesOrNoOrUndefinedToBoolean(harBoddINorgeSiste12Mnd)!,\n        iNorgeNeste12Mnd: convertYesOrNoOrUndefinedToBoolean(skalBoINorgeNeste12Mnd)!,\n        senereOpphold:\n            skalBoINorgeNeste12Mnd === YesOrNo.NO ? mapBostedUtlandToUtenlandsopphold(utenlandsoppholdNeste12Mnd!) : [],\n        tidligereOpphold:\n            harBoddINorgeSiste12Mnd === YesOrNo.NO\n                ? mapBostedUtlandToUtenlandsopphold(utenlandsoppholdSiste12Mnd!)\n                : [],\n    };\n};\n","import {\n    date1YearAgo,\n    date1YearFromNow,\n    dateRangesCollide,\n    dateRangesExceedsRange,\n    intlUtils,\n} from '@navikt/fp-common';\nimport dayjs from 'dayjs';\nimport { BostedUtland } from './bostedUtlandListAndDialog/types';\nimport { IntlShape } from 'react-intl';\nimport { SkjemaelementFeil } from 'app/types/SkjemaelementFeil';\n\nexport const validateUtenlandsoppholdNeste12Mnd =\n    (intl: IntlShape) =>\n    (utenlandsopphold: BostedUtland[]): SkjemaelementFeil => {\n        if (utenlandsopphold.length === 0) {\n            return intlUtils(intl, 'valideringsfeil.utenlandsopphold.neste12Måneder.ikkeRegistrert');\n        }\n\n        const dateRanges = utenlandsopphold.map((u) => ({ from: dayjs(u.fom).toDate(), to: dayjs(u.tom).toDate() }));\n\n        if (dateRangesCollide(dateRanges)) {\n            return intlUtils(intl, 'valideringsfeil.utenlandsopphold.overlapp');\n        }\n\n        if (dateRangesExceedsRange(dateRanges, { from: new Date(), to: date1YearFromNow })) {\n            return intlUtils(intl, 'valideringsfeil.utenlandsoppholdUtenforPeriode');\n        }\n\n        return undefined;\n    };\n\nexport const validateUtenlandsoppholdSiste12Mnd =\n    (intl: IntlShape) =>\n    (utenlandsopphold: BostedUtland[]): SkjemaelementFeil => {\n        if (utenlandsopphold.length === 0) {\n            return intlUtils(intl, 'valideringsfeil.utenlandsopphold.siste12Måneder.ikkeRegistrert');\n        }\n\n        const dateRanges = utenlandsopphold.map((u) => ({ from: dayjs(u.fom).toDate(), to: dayjs(u.tom).toDate() }));\n\n        if (dateRangesCollide(dateRanges)) {\n            return intlUtils(intl, 'valideringsfeil.utenlandsopphold.overlapp');\n        }\n\n        if (dateRangesExceedsRange(dateRanges, { from: date1YearAgo, to: new Date() })) {\n            return intlUtils(intl, 'valideringsfeil.utenlandsoppholdUtenforPeriode');\n        }\n\n        return undefined;\n    };\n","import React from 'react';\nimport {\n    Block,\n    date1YearAgo,\n    date1YearFromNow,\n    dateToday,\n    intlUtils,\n    Step,\n    UtvidetInformasjon,\n    validateYesOrNoIsAnswered,\n} from '@navikt/fp-common';\nimport {\n    UtenlandsoppholdFieldNames,\n    UtenlandsoppholdFormComponents,\n    UtenlandsoppholdFormData,\n} from './utenlandsoppholdFormTypes';\nimport { useIntl } from 'react-intl';\nimport actionCreator from 'app/context/action/actionCreator';\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\nimport useSøknad from 'app/utils/hooks/useSøknad';\nimport useAvbrytSøknad from 'app/utils/hooks/useAvbrytSøknad';\nimport { utenlandsoppholdFormQuestions } from './utenlandsoppholdFormQuestions';\nimport BostedUtlandListAndDialog from './bostedUtlandListAndDialog/BostedUtlandListAndDialog';\nimport stepConfig, { getPreviousStepHref } from '../stepsConfig';\nimport { Hovedknapp } from 'nav-frontend-knapper';\nimport {\n    getInitialUtenlandsoppholdValuesFromState,\n    mapUtenlandsoppholdFormDataToState,\n} from './utenlandsoppholdFormUtils';\nimport SøknadRoutes from 'app/routes/routes';\nimport { validateUtenlandsoppholdNeste12Mnd, validateUtenlandsoppholdSiste12Mnd } from './utenlandsoppholdValidering';\nimport { storeAppState } from 'app/utils/submitUtils';\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\nimport useFortsettSøknadSenere from 'app/utils/hooks/useFortsettSøknadSenere';\nimport useSaveLoadedRoute from 'app/utils/hooks/useSaveLoadedRoute';\n\nconst Utenlandsopphold: React.FunctionComponent = () => {\n    const intl = useIntl();\n    const { informasjonOmUtenlandsopphold } = useSøknad();\n\n    const onValidSubmitHandler = (values: Partial<UtenlandsoppholdFormData>) => {\n        const utenlandsopphold = mapUtenlandsoppholdFormDataToState(values);\n        return [actionCreator.setInformasjonOmUtenlandsopphold(utenlandsopphold)];\n    };\n\n    const { handleSubmit, isSubmitting } = useOnValidSubmit(\n        onValidSubmitHandler,\n        SøknadRoutes.INNTEKTSINFORMASJON,\n        (state: ForeldrepengesøknadContextState) => storeAppState(state)\n    );\n    const onAvbrytSøknad = useAvbrytSøknad();\n    const onFortsettSøknadSenere = useFortsettSøknadSenere();\n    useSaveLoadedRoute(SøknadRoutes.UTENLANDSOPPHOLD);\n\n    return (\n        <UtenlandsoppholdFormComponents.FormikWrapper\n            initialValues={getInitialUtenlandsoppholdValuesFromState(informasjonOmUtenlandsopphold)}\n            onSubmit={handleSubmit}\n            renderForm={({ values: formValues }) => {\n                const visibility = utenlandsoppholdFormQuestions.getVisbility(formValues);\n\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 'søknad.pageheading')}\n                        activeStepId=\"utenlandsopphold\"\n                        pageTitle={intlUtils(intl, 'søknad.utenlandsopphold')}\n                        stepTitle={intlUtils(intl, 'søknad.utenlandsopphold')}\n                        backLinkHref={getPreviousStepHref('utenlandsopphold')}\n                        onCancel={onAvbrytSøknad}\n                        onContinueLater={onFortsettSøknadSenere}\n                        steps={stepConfig(intl)}\n                        kompakt={true}\n                    >\n                        <UtenlandsoppholdFormComponents.Form includeButtons={false} includeValidationSummary={true}>\n                            <Block\n                                visible={visibility.isVisible(UtenlandsoppholdFieldNames.skalBoINorgeNeste12Mnd)}\n                                padBottom=\"l\"\n                            >\n                                <UtenlandsoppholdFormComponents.YesOrNoQuestion\n                                    legend={intlUtils(intl, 'utenlandsopphold.neste12Måneder.spørsmål')}\n                                    name={UtenlandsoppholdFieldNames.skalBoINorgeNeste12Mnd}\n                                    description={\n                                        <UtvidetInformasjon\n                                            apneLabel={intlUtils(\n                                                intl,\n                                                'utenlandsopphold.neste12MånederInfotekst.apneLabel'\n                                            )}\n                                        >\n                                            {intlUtils(intl, 'utenlandsopphold.neste12MånederInfotekst')}\n                                        </UtvidetInformasjon>\n                                    }\n                                    labels={{\n                                        yes: intlUtils(\n                                            intl,\n                                            'utenlandsopphold.neste12MånederInfotekst.radiobutton.boddINorge'\n                                        ),\n                                        no: intlUtils(\n                                            intl,\n                                            'utenlandsopphold.neste12MånederInfotekst.radiobutton.boddIUtlandet'\n                                        ),\n                                    }}\n                                    validate={(skalBoINorgeNeste12Mnd) =>\n                                        validateYesOrNoIsAnswered(\n                                            skalBoINorgeNeste12Mnd,\n                                            'valideringsfeil.utenlandsopphold.skalBoINorgePåkrevd'\n                                        )\n                                    }\n                                />\n                            </Block>\n                            <Block\n                                padBottom=\"l\"\n                                visible={visibility.isVisible(UtenlandsoppholdFieldNames.utenlandsoppholdNeste12Mnd)}\n                            >\n                                <BostedUtlandListAndDialog<UtenlandsoppholdFieldNames>\n                                    name={UtenlandsoppholdFieldNames.utenlandsoppholdNeste12Mnd}\n                                    minDate={dateToday}\n                                    maxDate={date1YearFromNow}\n                                    labels={{\n                                        addLabel: intlUtils(intl, 'utenlandsopphold.knapp.leggTilLand'),\n                                        modalTitle: 'Utenlandsopphold neste 12 måneder',\n                                    }}\n                                    erFremtidigOpphold={true}\n                                    validate={validateUtenlandsoppholdNeste12Mnd(intl)}\n                                />\n                            </Block>\n                            <Block\n                                padBottom=\"l\"\n                                visible={visibility.isVisible(UtenlandsoppholdFieldNames.harBoddINorgeSiste12Mnd)}\n                            >\n                                <UtenlandsoppholdFormComponents.YesOrNoQuestion\n                                    legend={intlUtils(intl, 'utenlandsopphold.siste12Måneder.spørsmål')}\n                                    name={UtenlandsoppholdFieldNames.harBoddINorgeSiste12Mnd}\n                                    description={\n                                        <UtvidetInformasjon\n                                            apneLabel={intlUtils(\n                                                intl,\n                                                'utenlandsopphold.siste12MånederInfotekst.apneLabel'\n                                            )}\n                                        >\n                                            {intlUtils(intl, 'utenlandsopphold.siste12MånederInfotekst')}\n                                        </UtvidetInformasjon>\n                                    }\n                                    labels={{\n                                        yes: intlUtils(\n                                            intl,\n                                            'utenlandsopphold.siste12MånederInfotekst.radiobutton.boddINorge'\n                                        ),\n                                        no: intlUtils(\n                                            intl,\n                                            'utenlandsopphold.siste12MånederInfotekst.radiobutton.boddIUtlandet'\n                                        ),\n                                    }}\n                                    validate={(harBoddINorgeSiste12Mnd) =>\n                                        validateYesOrNoIsAnswered(\n                                            harBoddINorgeSiste12Mnd,\n                                            'valideringsfeil.utenlandsopphold.harBoddINorgePåkrevd'\n                                        )\n                                    }\n                                />\n                            </Block>\n                            <Block\n                                padBottom=\"l\"\n                                visible={visibility.isVisible(UtenlandsoppholdFieldNames.utenlandsoppholdSiste12Mnd)}\n                            >\n                                <BostedUtlandListAndDialog<UtenlandsoppholdFieldNames>\n                                    minDate={date1YearAgo}\n                                    maxDate={dateToday}\n                                    name={UtenlandsoppholdFieldNames.utenlandsoppholdSiste12Mnd}\n                                    labels={{\n                                        addLabel: intlUtils(intl, 'utenlandsopphold.knapp.leggTilLand'),\n                                        modalTitle: 'Utenlandsopphold siste 12 måneder',\n                                    }}\n                                    erFremtidigOpphold={false}\n                                    validate={validateUtenlandsoppholdSiste12Mnd(intl)}\n                                />\n                            </Block>\n                            <Block visible={visibility.areAllQuestionsAnswered()} textAlignCenter={true}>\n                                <Hovedknapp disabled={isSubmitting} spinner={isSubmitting}>\n                                    {intlUtils(intl, 'søknad.gåVidere')}\n                                </Hovedknapp>\n                            </Block>\n                        </UtenlandsoppholdFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default Utenlandsopphold;\n","import { YesOrNo } from '@navikt/sif-common-formik/lib';\n\nexport const convertBooleanOrUndefinedToYesOrNo = (value: boolean | undefined): YesOrNo => {\n    if (value === true) {\n        return YesOrNo.YES;\n    }\n\n    if (value === false) {\n        return YesOrNo.NO;\n    }\n\n    return YesOrNo.UNANSWERED;\n};\n\nexport const convertYesOrNoOrUndefinedToBoolean = (value: YesOrNo | undefined) => {\n    if (value === YesOrNo.YES) {\n        return true;\n    }\n\n    if (value === YesOrNo.UNANSWERED) {\n        return undefined;\n    }\n\n    return false;\n};\n","import { useNavigate } from 'react-router-dom';\nimport { useForeldrepengesøknadContext } from 'app/context/hooks/useForeldrepengesøknadContext';\nimport { logAmplitudeEvent } from 'app/amplitude/amplitude';\nimport Api from 'app/api/api';\nimport actionCreator from 'app/context/action/actionCreator';\nimport { useCallback } from 'react';\n\nconst useAvbrytSøknad = () => {\n    const navigate = useNavigate();\n    const { dispatch, state } = useForeldrepengesøknadContext();\n    const { søkerinfo } = state;\n\n    const avbrytSøknadHandler = useCallback(() => {\n        logAmplitudeEvent('applikasjon-hendelse', {\n            app: 'foreldrepengesoknad',\n            team: 'foreldrepenger',\n            hendelse: 'avbrutt',\n        });\n\n        dispatch(actionCreator.avbrytSøknad());\n        Api.deleteStoredAppState(søkerinfo.person.fnr);\n        navigate('/');\n    }, [navigate, dispatch, søkerinfo.person.fnr]);\n\n    return avbrytSøknadHandler;\n};\n\nexport default useAvbrytSøknad;\n","import { logAmplitudeEvent } from 'app/amplitude/amplitude';\nimport { useCallback } from 'react';\nimport Environment from 'app/Environment';\n\nconst useFortsettSøknadSenere = () => {\n    const useFortsettSøknadSenere = useCallback(() => {\n        logAmplitudeEvent('applikasjon-hendelse', {\n            app: 'foreldrepengesoknad',\n            team: 'foreldrepenger',\n            hendelse: 'fortsettSenere',\n        });\n\n        (window as any).location = Environment.FAMILIE;\n    }, []);\n\n    return useFortsettSøknadSenere;\n};\n\nexport default useFortsettSøknadSenere;\n","import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport actionCreator from 'app/context/action/actionCreator';\nimport SøknadRoutes from 'app/routes/routes';\nimport { useForeldrepengesøknadContext } from 'app/context/hooks/useForeldrepengesøknadContext';\nimport { ForeldrepengesøknadContextAction } from 'app/context/action/actionCreator';\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\nimport { redirectToLogin } from '../redirectToLogin';\nimport { sendErrorMessageToSentry } from 'app/api/apiUtils';\n\nconst useOnValidSubmit = <T>(\n    submitHandler: (values: T) => ForeldrepengesøknadContextAction[],\n    nextRoute: SøknadRoutes,\n    postSubmit: (state: ForeldrepengesøknadContextState) => Promise<any>\n) => {\n    const { dispatch, state } = useForeldrepengesøknadContext();\n    const navigate = useNavigate();\n    const [harSubmitted, setSubmitted] = useState(false);\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [submitError, setSubmitError] = useState(undefined);\n\n    useEffect(() => {\n        if (harSubmitted) {\n            postSubmit(state)\n                .then(() => {\n                    if (nextRoute === SøknadRoutes.SØKNAD_SENDT) {\n                        navigate(nextRoute);\n                    } else {\n                        navigate(state.currentRoute);\n                    }\n                })\n                .catch((error) => {\n                    if (error.response && (error.response.status === 401 || error.response.status === 403)) {\n                        redirectToLogin();\n                    } else {\n                        setSubmitError(error);\n                    }\n                });\n        }\n    }, [harSubmitted, navigate, nextRoute, state, postSubmit]);\n\n    useEffect(() => {\n        if (submitError) {\n            sendErrorMessageToSentry(submitError);\n            throw new Error(submitError);\n        }\n    }, [submitError]);\n\n    const handleSubmit = (values: T) => {\n        setIsSubmitting(true);\n        const actions = submitHandler(values);\n        const dispatchRouteChange =\n            nextRoute === SøknadRoutes.SØKNAD_SENDT ? undefined : dispatch(actionCreator.updateCurrentRoute(nextRoute));\n        Promise.all([dispatchRouteChange, ...actions.map((a) => dispatch(a))]).then(() => setSubmitted(true));\n    };\n\n    return { handleSubmit, isSubmitting };\n};\n\nexport default useOnValidSubmit;\n","import React from 'react';\nimport ForeldrepengesøknadContextProvider from '../../app/context/ForeldrepengesøknadContext';\n\nconst withForeldrepengersøknadContextProvider = (Story: any) => (\n    <ForeldrepengesøknadContextProvider>\n        <Story />\n    </ForeldrepengesøknadContextProvider>\n);\n\nexport default withForeldrepengersøknadContextProvider;\n","import React from 'react';\n\nimport IntlProvider from '../../app/intl/IntlProvider';\n\nconst withIntlProvider = (Story: any) => (\n    <IntlProvider locale=\"nb\">\n        <Story />\n    </IntlProvider>\n);\n\nexport default withIntlProvider;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst withRouterProvider = (Story: any) => (\n    <BrowserRouter>\n        <Story />\n    </BrowserRouter>\n);\n\nexport default withRouterProvider;\n","import React from 'react';\nimport { Story } from '@storybook/react';\nimport søkerinfo from './testdata/søkerinfo.json';\nimport context from './testdata/context.json';\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\nimport Utenlandsopphold from 'app/steps/utenlandsopphold/Utenlandsopphold';\nimport withIntlProvider from '../../../decorators/withIntl';\nimport withRouter from '../../../decorators/withRouter';\nimport withForeldrepengersøknadContext from '../../../decorators/withForeldrepengersøknadContext';\nimport ForeldrepengerStateMock from '../../../utils/ForeldrepengerStateMock';\nimport MockAdapter from 'axios-mock-adapter/types';\nimport AxiosMock from '../../../utils/AxiosMock';\n\nexport default {\n    title: 'steps/Utenlandsopphold',\n    component: Utenlandsopphold,\n    decorators: [withRouter, withIntlProvider, withForeldrepengersøknadContext],\n};\n\ninterface Props {\n    context: ForeldrepengesøknadContextState;\n    søkerinfo: SøkerinfoDTO;\n}\n\nconst Template: Story<Props> = ({ context, søkerinfo }) => {\n    const restMock = (apiMock: MockAdapter) => {\n        apiMock.onPost('/storage').reply(200, undefined);\n    };\n    return (\n        <AxiosMock mock={restMock}>\n            <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\n                <Utenlandsopphold />\n            </ForeldrepengerStateMock>\n        </AxiosMock>\n    );\n};\n\nexport const Default = Template.bind({});\nDefault.args = {\n    context,\n    søkerinfo,\n};\n","import { FunctionComponent, useEffect } from 'react';\nimport MockAdapter from 'axios-mock-adapter';\nimport getAxiosInstance from '../../app/api/apiInterceptor';\n\ninterface Props {\n    children: any;\n    mock: (adapter: MockAdapter) => void;\n}\n\nconst apiMock = new MockAdapter(getAxiosInstance());\n\nconst AxiosMock: FunctionComponent<Props> = ({ children, mock }) => {\n    useEffect(() => {\n        mock(apiMock);\n        return () => {\n            apiMock.reset();\n        };\n    });\n    return children;\n};\n\nexport default AxiosMock;\n","import { FunctionComponent, useEffect, useState } from 'react';\n\nimport actionCreator from '../../app/context/action/actionCreator';\nimport { useForeldrepengesøknadContext } from '../../app/context/hooks/useForeldrepengesøknadContext';\nimport { ForeldrepengesøknadContextState } from '../../app/context/ForeldrepengesøknadContextConfig';\nimport { SøkerinfoDTO } from '../../app/types/SøkerinfoDTO';\nimport mapSøkerinfoDTOToSøkerinfo from '../../app/utils/mapSøkerinfoDTO';\n\ninterface Props {\n    children: any;\n    søknad: ForeldrepengesøknadContextState;\n    søkerinfo: SøkerinfoDTO;\n}\n\nconst ForeldrepengerStateMock: FunctionComponent<Props> = ({ children, søknad, søkerinfo }) => {\n    const [erFerdig, setFerdig] = useState(false);\n    const { dispatch } = useForeldrepengesøknadContext();\n\n    useEffect(() => {\n        if (!erFerdig) {\n            Promise.all([\n                dispatch(actionCreator.applyStoredState(søknad)),\n                dispatch(actionCreator.setSøkerinfo(mapSøkerinfoDTOToSøkerinfo(søkerinfo))),\n            ]).then(() => setFerdig(true));\n        }\n    }, [dispatch, søknad, søkerinfo, erFerdig]);\n\n    return erFerdig ? children : null;\n};\n\nexport default ForeldrepengerStateMock;\n"],"names":["isQuestionVisible","questions","question","payload","config","isIncluded","visibilityFilter","undefined","parentQuestion","isAnswered","isQuestionAnswered","isQuestionIncluded","validateQuestion","value","validate","exports","getVisbility","key","isVisible","areAllQuestionsAnswered","allQuestionsHasAnswers","Object","keys","forEach","isOptional","getIncludedQuestions","filter","getQuestionVisbilityInfo","PageKeys","logAmplitudeEvent","eventName","eventData","arguments","length","setTimeout","amplitude","logEvent","error","console","log","getPreviousStepHrefEndringssøknad","id","href","assertUnreachable","concat","getPreviousStepHref","stepConfig","intl","index","label","intlUtils","UtenlandsoppholdFieldNames","initialUtenlandsoppholdFormData","_defineProperty","_initialUtenlandsopph","harBoddINorgeSiste12Mnd","YesOrNo","utenlandsoppholdSiste12Mnd","skalBoINorgeNeste12Mnd","utenlandsoppholdNeste12Mnd","UtenlandsoppholdFormComponents","getTypedFormComponents","BostedUtlandFormFields","UtenlandsoppholdFormConfig","_UtenlandsoppholdForm","_ref","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","utenlandsoppholdFormQuestions","Questions","Form","mapBostedToFormValues","bosted","fom","tom","landkode","BostedUtlandForm","maxDate","minDate","onSubmit","onCancel","erFremtidigOpphold","useIntl","React","FormikWrapper","initialValues","onFormikSubmit","formValues","updatedBosted","_objectSpread","isValidBostedUtland","Error","renderForm","values","Systemtittel","tag","FormattedMessage","Block","DateIntervalPicker","legend","fromDatepickerProps","name","fullscreenOverlay","placeholder","ISOStringToDate","dayjs","isSame","dateRangeValidation","date","errorKey","toDate","disableWeekend","toDatepickerProps","fromDate","margin","CountrySelect","country","validateRequiredField","useAlpha3Code","bem","bemUtils","BostedUtlandList","bosteder","onDelete","onEdit","ItemList","getItemId","opphold","getItemTitle","getCountryName","locale","labelRenderer","renderBostedUtlandLabel","navn","className","element","ActionLink","onClick","formatDateExtended","items","BostedUtlandListAndDialog","labels","FormikModalFormAndList","dialogWidth","sortFunc","sortItemsByFom","formRenderer","item","listRenderer","BostedUtlandListe","mapUtenlandsoppholdTilBostedUtland","tidsperiode","land","getInitialUtenlandsoppholdValuesFromState","init","convertBooleanOrUndefinedToYesOrNo","iNorgeSiste12Mnd","iNorgeNeste12Mnd","senereOpphold","map","tidligereOpphold","mapBostedUtlandToUtenlandsopphold","bostedUtland","validateUtenlandsoppholdNeste12Mnd","utenlandsopphold","dateRanges","u","from","to","dateRangesCollide","dateRangesExceedsRange","Date","date1YearFromNow","validateUtenlandsoppholdSiste12Mnd","date1YearAgo","Utenlandsopphold","informasjonOmUtenlandsopphold","useSøknad","_useOnValidSubmit","useOnValidSubmit","onValidSubmitHandler","mapUtenlandsoppholdFormDataToState","convertYesOrNoOrUndefinedToBoolean","actionCreator","SøknadRoutes","state","storeAppState","handleSubmit","isSubmitting","onAvbrytSøknad","useAvbrytSøknad","onFortsettSøknadSenere","useFortsettSøknadSenere","useSaveLoadedRoute","visibility","Step","bannerTitle","activeStepId","pageTitle","stepTitle","backLinkHref","onContinueLater","steps","kompakt","includeButtons","includeValidationSummary","visible","padBottom","YesOrNoQuestion","description","UtvidetInformasjon","apneLabel","yes","no","validateYesOrNoIsAnswered","dateToday","addLabel","modalTitle","textAlignCenter","Hovedknapp","disabled","spinner","navigate","useNavigate","_useForeldrepengesøkn","useForeldrepengesøknadContext","dispatch","søkerinfo","useCallback","app","team","hendelse","Api","person","fnr","window","location","Environment","submitHandler","nextRoute","postSubmit","_useState2","_slicedToArray","useState","harSubmitted","setSubmitted","_useState4","setIsSubmitting","_useState6","submitError","setSubmitError","useEffect","then","currentRoute","response","status","redirectToLogin","sendErrorMessageToSentry","actions","dispatchRouteChange","Promise","all","_toConsumableArray","a","withForeldrepengersøknadContextProvider","Story","ForeldrepengesøknadContextProvider","withIntlProvider","IntlProvider","withRouterProvider","BrowserRouter","title","component","decorators","withRouter","withForeldrepengersøknadContext","Default","Template","context","AxiosMock","mock","restMock","apiMock","onPost","reply","ForeldrepengerStateMock","søknad","bind","args","__namedExportsOrder","MockAdapter","getAxiosInstance","children","reset","erFerdig","setFerdig","mapSøkerinfoDTOToSøkerinfo"],"sourceRoot":""}