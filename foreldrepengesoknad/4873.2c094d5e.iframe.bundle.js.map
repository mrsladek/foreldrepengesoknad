{"version":3,"file":"4873.2c094d5e.iframe.bundle.js","mappings":"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","sources":["webpack://foreldrepengesoknad/./src/app/Environment.ts","webpack://foreldrepengesoknad/./src/app/FeatureToggle.ts","webpack://foreldrepengesoknad/./src/app/context/ForeldrepengesøknadContextConfig.ts","webpack://foreldrepengesoknad/./src/app/context/reducer/foreldrepengesøknadReducer.ts","webpack://foreldrepengesoknad/./src/app/context/ForeldrepengesøknadContext.tsx","webpack://foreldrepengesoknad/./src/app/context/action/actionCreator.ts","webpack://foreldrepengesoknad/./src/app/context/hooks/useForeldrepengesøknadContext.ts","webpack://foreldrepengesoknad/./src/app/routes/routes.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/utils/Perioden.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/utils/Periodene.ts","webpack://foreldrepengesoknad/./src/app/utils/fridagerUtils.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/utils/Tidsperioden.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/utils/Uttaksdagen.ts","webpack://foreldrepengesoknad/./src/app/steps/uttaksplan-info/utils/uttaksPlanStatus.ts","webpack://foreldrepengesoknad/./src/app/types/AttachmentType.ts","webpack://foreldrepengesoknad/./src/app/types/Forelder.ts","webpack://foreldrepengesoknad/./src/app/utils/dateUtils.ts","webpack://foreldrepengesoknad/./src/app/utils/toggleUtils.ts","webpack://foreldrepengesoknad/./src/app/context/types/UttaksplanInfo.ts","webpack://foreldrepengesoknad/./src/app/utils/mapSøkerinfoDTO.ts","webpack://foreldrepengesoknad/./src/app/utils/numberUtils.ts","webpack://foreldrepengesoknad/./src/app/utils/stringUtils.ts","webpack://foreldrepengesoknad/./src/app/utils/validationUtil.ts","webpack://foreldrepengesoknad/./src/app/utils/validation/fødselsnummer.ts","webpack://foreldrepengesoknad/./src/app/utils/wlbUtils.ts","webpack://foreldrepengesoknad/./src/uttaksplan/types/MorsAktivitet.ts","webpack://foreldrepengesoknad/./src/uttaksplan/types/OppholdÅrsakType.ts","webpack://foreldrepengesoknad/./src/uttaksplan/types/OverføringÅrsakType.ts","webpack://foreldrepengesoknad/./src/uttaksplan/types/Periode.ts","webpack://foreldrepengesoknad/./src/uttaksplan/types/PeriodeInfoType.ts","webpack://foreldrepengesoknad/./src/uttaksplan/types/SenEndringÅrsak.ts","webpack://foreldrepengesoknad/./src/uttaksplan/types/StønadskontoType.ts","webpack://foreldrepengesoknad/./src/uttaksplan/types/UtsettelseÅrsakType.ts","webpack://foreldrepengesoknad/./src/uttaksplan/utils/periodeUtils.ts","webpack://foreldrepengesoknad/./src/uttaksplan/utils/stønadskontoerUtils.ts","webpack://foreldrepengesoknad/../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ sync ^\\.\\/.*$"],"sourcesContent":["import FeatureToggle from './FeatureToggle';\n\nconst Environment = () => {\n    const appSettings = (window as any).appSettings;\n    return {\n        REST_API_URL: appSettings.REST_API_URL,\n        UTTAK_API_URL: appSettings.UTTAK_API_URL,\n        LOGIN_URL: appSettings.LOGIN_URL,\n        APP_VERSION: appSettings.APP_VERSION,\n        FAMILIE: appSettings.FAMILIE,\n        [FeatureToggle.visFeilside]: appSettings[FeatureToggle.visFeilside],\n        [FeatureToggle.visAlertstripe]: appSettings[FeatureToggle.visAlertstripe],\n        [FeatureToggle.visPerioderSomSendesInn]: appSettings[FeatureToggle.visPerioderSomSendesInn],\n        [FeatureToggle.wlbGjelderFraFørsteJanuar2022]: appSettings[FeatureToggle.wlbGjelderFraFørsteJanuar2022],\n    };\n};\n\nexport default Environment();\n","enum FeatureToggle {\n    visPerioderSomSendesInn = 'FEATURE_VIS_PERIODER_SOM_SENDES_INN',\n    visFeilside = 'FEATURE_VIS_FEILSIDE',\n    visAlertstripe = 'FEATURE_VIS_ALERTSTRIPE',\n    wlbGjelderFraFørsteJanuar2022 = 'FEATURE_WLB_GJELDER_FRA_FORSTE_JAN',\n    /** Nye features må også registreres i ./Environment */\n}\n\nexport default FeatureToggle;\n","import SøknadRoutes from 'app/routes/routes';\nimport { EksisterendeSak } from 'app/types/EksisterendeSak';\nimport { Kvittering } from 'app/types/Kvittering';\nimport { Sak } from 'app/types/Sak';\nimport { Situasjon } from 'app/types/Situasjon';\nimport { Søkerinfo } from 'app/types/Søkerinfo';\nimport { Søkerrolle } from 'app/types/Søkerrolle';\nimport { Periode } from 'uttaksplan/types/Periode';\nimport { BarnFraNesteSak } from './types/Barn';\nimport { Søknad } from './types/Søknad';\nimport UttaksplanInfo from './types/UttaksplanInfo';\n\nexport interface ForeldrepengesøknadContextState {\n    version: number;\n    currentRoute: SøknadRoutes;\n    søknad: Søknad;\n    søkerinfo: Søkerinfo;\n    saker: Sak[];\n    kvittering: Kvittering;\n    antallUkerIUttaksplan: number;\n    perioderSomSkalSendesInn: Periode[];\n    harUttaksplanBlittSlettet: boolean;\n    brukerSvarteJaPåAutoJustering: boolean | undefined;\n    søknadGjelderEtNyttBarn: boolean;\n    harEksisterendeSak?: boolean;\n    harAnnenPartEksisterendeSak?: boolean;\n    annenPartEksisterendeSakSaksnummer?: string;\n    uttaksplanInfo?: UttaksplanInfo;\n    eksisterendeSak?: EksisterendeSak;\n    endringstidspunkt?: Date;\n    barnFraNesteSak?: BarnFraNesteSak;\n    annenPartsUttakErLagtTilIPlan?: boolean;\n}\n\nexport const foreldrepengesøknadInitialState: ForeldrepengesøknadContextState = {\n    version: 5,\n    currentRoute: SøknadRoutes.VELKOMMEN,\n    søknad: {\n        type: 'foreldrepenger',\n        harGodkjentVilkår: false,\n        søkersituasjon: {\n            rolle: '' as Søkerrolle,\n            situasjon: '' as Situasjon,\n        },\n        barn: undefined!,\n        annenForelder: {\n            kanIkkeOppgis: false,\n        },\n        søker: {\n            harHattAnnenInntektSiste10Mnd: undefined!,\n            harJobbetSomFrilansSiste10Mnd: undefined!,\n            harJobbetSomSelvstendigNæringsdrivendeSiste10Mnd: undefined!,\n            erAleneOmOmsorg: undefined!,\n            språkkode: 'nb',\n        },\n        informasjonOmUtenlandsopphold: {\n            iNorgeNeste12Mnd: undefined!,\n            iNorgeSiste12Mnd: undefined!,\n            tidligereOpphold: [],\n            senereOpphold: [],\n        },\n        erEndringssøknad: false,\n        dekningsgrad: undefined!,\n        uttaksplan: [],\n        harGodkjentOppsummering: false,\n        vedlegg: [],\n        tilleggsopplysninger: {\n            begrunnelseForSenEndring: undefined!,\n        },\n        saksnummer: undefined,\n        ønskerJustertUttakVedFødsel: undefined,\n    },\n    søkerinfo: undefined!,\n    saker: [],\n    uttaksplanInfo: undefined,\n    antallUkerIUttaksplan: undefined!,\n    kvittering: undefined!,\n    endringstidspunkt: undefined,\n    perioderSomSkalSendesInn: [],\n    harUttaksplanBlittSlettet: false,\n    brukerSvarteJaPåAutoJustering: undefined,\n    søknadGjelderEtNyttBarn: undefined!,\n    barnFraNesteSak: undefined,\n    annenPartsUttakErLagtTilIPlan: undefined,\n};\n","import { Attachment } from 'app/types/Attachment';\nimport { AttachmentType } from 'app/types/AttachmentType';\nimport { ForeldrepengesøknadContextAction, ForeldrepengesøknadContextActionKeys } from '../action/actionCreator';\nimport { ForeldrepengesøknadContextState, foreldrepengesøknadInitialState } from '../ForeldrepengesøknadContextConfig';\n\nconst finnVedleggAvType = (type: AttachmentType, alleVedlegg: Attachment[]): Attachment[] | undefined => {\n    const vedleggAvType = alleVedlegg.filter((v) => v.type === type);\n    return vedleggAvType.length > 0 ? vedleggAvType : undefined;\n};\n\nconst foreldrepengesøknadReducer = (\n    state: ForeldrepengesøknadContextState,\n    action: ForeldrepengesøknadContextAction\n): ForeldrepengesøknadContextState => {\n    switch (action.type) {\n        case ForeldrepengesøknadContextActionKeys.SET_HARGODKJENTVILKÅR:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    harGodkjentVilkår: action.payload,\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_ER_ENDRINGSSØKNAD:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    erEndringssøknad: action.payload,\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_SØKERSITUASJON:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    søkersituasjon: action.payload,\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_OMBARNET:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    barn: {\n                        ...action.payload,\n                    },\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_ANNENFORELDER:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    annenForelder: action.payload,\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_INFORMASJON_OM_UTENLANDSOPPHOLD:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    informasjonOmUtenlandsopphold: {\n                        ...state.søknad.informasjonOmUtenlandsopphold,\n                        ...action.payload,\n                    },\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.AVBRYT_SØKNAD:\n            return {\n                ...foreldrepengesøknadInitialState,\n                søkerinfo: state.søkerinfo,\n                saker: state.saker,\n            };\n        case ForeldrepengesøknadContextActionKeys.UPDATE_CURRENT_ROUTE:\n            return {\n                ...state,\n                currentRoute: action.payload,\n            };\n        case ForeldrepengesøknadContextActionKeys.APPLY_STORED_STATE:\n            return {\n                ...state,\n                ...action.payload,\n            };\n\n        case ForeldrepengesøknadContextActionKeys.SET_SAKER:\n            return {\n                ...state,\n                saker: [...action.payload],\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_SØKERINFO:\n            return {\n                ...state,\n                søkerinfo: { ...action.payload },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_SØKER:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    søker: {\n                        ...action.payload,\n                    },\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_UTTAKSPLAN_INFO:\n            return {\n                ...state,\n                uttaksplanInfo: { ...action.payload },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_DEKNINGSGRAD:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    dekningsgrad: action.dekningsgrad,\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_EKSISTERENDE_SAK:\n            return {\n                ...state,\n                eksisterendeSak: action.payload,\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_BARN_FRA_NESTE_SAK:\n            return {\n                ...state,\n                barnFraNesteSak: action.payload,\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_VEDLEGG:\n            //TODO Legg til håndtering av fleire vedlegg\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    barn: {\n                        ...state.søknad.barn,\n                        dokumentasjonAvAleneomsorg:\n                            finnVedleggAvType(AttachmentType.ALENEOMSORG, action.vedlegg) ||\n                            state.søknad.barn.dokumentasjonAvAleneomsorg,\n                    },\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.LAG_UTTAKSPLANFORSLAG:\n        case ForeldrepengesøknadContextActionKeys.SLETT_UTTAKSPLAN:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    uttaksplan: action.payload,\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_UTTAKSPLAN:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    uttaksplan: action.payload,\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_PERIODER_SOM_SKAL_SENDES_INN:\n            return {\n                ...state,\n                perioderSomSkalSendesInn: action.payload,\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_SØKNAD:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    ...action.payload,\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_SØKNAD_GJELDER_ET_NYTT_BARN:\n            return {\n                ...state,\n                søknadGjelderEtNyttBarn: action.payload,\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_GODKJENT_OPPSUMMERING:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    harGodkjentOppsummering: action.payload,\n                },\n            };\n\n        case ForeldrepengesøknadContextActionKeys.SET_TILLEGGSOPPLYSNINGER:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    tilleggsopplysninger: action.payload,\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_KVITTERING:\n            return {\n                ...state,\n                kvittering: action.payload,\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_ANTALL_UKER_I_UTTAKSPLAN:\n            return {\n                ...state,\n                antallUkerIUttaksplan: action.payload,\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_ENDRINGSTIDSPUNKT:\n            return {\n                ...state,\n                endringstidspunkt: action.payload,\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_SPRÅKKODE:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    søker: {\n                        ...state.søknad.søker,\n                        språkkode: action.payload,\n                    },\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_UTTAKSPLAN_SLETTET:\n            return {\n                ...state,\n                harUttaksplanBlittSlettet: action.uttaksplanHarBlittSlettet,\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_ØNSKER_JUSTERT_UTTAK_VED_FØDSEL:\n            return {\n                ...state,\n                søknad: {\n                    ...state.søknad,\n                    ønskerJustertUttakVedFødsel: action.payload,\n                },\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_BRUKER_SVARTE_JA_PÅ_AUTO_JUSTERING:\n            return {\n                ...state,\n                brukerSvarteJaPåAutoJustering: action.payload,\n            };\n        case ForeldrepengesøknadContextActionKeys.SET_ANNEN_PARTS_UTTAK_ER_LAGT_TIL_I_PLAN:\n            return {\n                ...state,\n                annenPartsUttakErLagtTilIPlan: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default foreldrepengesøknadReducer;\n","import React, { createContext, Dispatch, FunctionComponent, ReactNode, useMemo, useReducer } from 'react';\nimport { ForeldrepengesøknadContextAction } from './action/actionCreator';\nimport { ForeldrepengesøknadContextState, foreldrepengesøknadInitialState } from './ForeldrepengesøknadContextConfig';\nimport foreldrepengesøknadReducer from './reducer/foreldrepengesøknadReducer';\n\ninterface ForeldrepengesøknadContextData {\n    state: ForeldrepengesøknadContextState;\n    dispatch: Dispatch<ForeldrepengesøknadContextAction>;\n}\n\nexport const ForeldrepengesøknadContext = createContext<ForeldrepengesøknadContextData>(null!);\n\ninterface Props {\n    children: ReactNode;\n}\n\nconst ForeldrepengesøknadContextProvider: FunctionComponent<Props> = ({ children }) => {\n    const [state, dispatch] = useReducer(foreldrepengesøknadReducer, foreldrepengesøknadInitialState);\n\n    const contextValue = useMemo(() => {\n        return { state, dispatch };\n    }, [state, dispatch]);\n\n    return <ForeldrepengesøknadContext.Provider value={contextValue}>{children}</ForeldrepengesøknadContext.Provider>;\n};\n\nexport default ForeldrepengesøknadContextProvider;\n","import { Locale } from '@navikt/fp-common';\nimport SøknadRoutes from 'app/routes/routes';\nimport { Attachment } from 'app/types/Attachment';\nimport { Dekningsgrad } from 'app/types/Dekningsgrad';\nimport { EksisterendeSak } from 'app/types/EksisterendeSak';\nimport { Kvittering } from 'app/types/Kvittering';\nimport { Sak } from 'app/types/Sak';\nimport { Søkerinfo } from 'app/types/Søkerinfo';\nimport { Periode } from 'uttaksplan/types/Periode';\nimport { ForeldrepengesøknadContextState } from '../ForeldrepengesøknadContextConfig';\nimport AnnenForelder from '../types/AnnenForelder';\nimport Barn, { BarnFraNesteSak } from '../types/Barn';\nimport InformasjonOmUtenlandsopphold from '../types/InformasjonOmUtenlandsopphold';\nimport Søker from '../types/Søker';\nimport Søkersituasjon from '../types/Søkersituasjon';\nimport { Søknad } from '../types/Søknad';\nimport { Tilleggsopplysninger } from '../types/Tilleggsopplysninger';\nimport UttaksplanInfo from '../types/UttaksplanInfo';\n\nexport enum ForeldrepengesøknadContextActionKeys {\n    SET_HARGODKJENTVILKÅR = 'setVelkommen',\n    SET_ER_ENDRINGSSØKNAD = 'setErEndringssøknad',\n    SET_SØKERSITUASJON = 'setSøkersituasjon',\n    SET_OMBARNET = 'setOmBarnet',\n    AVBRYT_SØKNAD = 'avbrytSøknad',\n    UPDATE_CURRENT_ROUTE = 'updateCurrentRoute',\n    APPLY_STORED_STATE = 'applyStoredState',\n    SET_ANNENFORELDER = 'setAnnenForelder',\n    SET_SØKERINFO = 'setSøkerinfo',\n    SET_SØKER = 'setSøker',\n    SET_SØKNAD_GJELDER_ET_NYTT_BARN = 'setSøknadGjelderEtNyttBarn',\n    SET_INFORMASJON_OM_UTENLANDSOPPHOLD = 'setInformasjonOmUtenlandsopphold',\n    SET_INFORMASJON_OM_ANDRE_INNTEKTER = 'setInformasjonOmAndreInntekter',\n    SET_SAKER = 'setSaker',\n    SET_UTTAKSPLAN_INFO = 'setUttaksplanInfo',\n    SET_DEKNINGSGRAD = 'setDekningsgrad',\n    SET_VEDLEGG = 'setVedlegg',\n    LAG_UTTAKSPLANFORSLAG = 'lagUttaksplanforslag',\n    SET_UTTAKSPLAN = 'setUttaksplan',\n    SET_PERIODER_SOM_SKAL_SENDES_INN = 'setPerioderSomSkalSendesInn',\n    SET_SØKNAD = 'setSøknad',\n    SET_EKSISTERENDE_SAK = 'setEksisterendeSak',\n    SET_GODKJENT_OPPSUMMERING = 'setGodkjentOppsummering',\n    SET_KVITTERING = 'setKvittering',\n    SET_ANTALL_UKER_I_UTTAKSPLAN = 'setAntallUkerIUttaksplan',\n    SET_ENDRINGSTIDSPUNKT = 'setEndringstidspunkt',\n    SET_SPRÅKKODE = 'setSpråkkode',\n    SET_TILLEGGSOPPLYSNINGER = 'setTilleggsopplysninger',\n    SLETT_UTTAKSPLAN = 'slettUttaksplan',\n    SET_UTTAKSPLAN_SLETTET = 'setUttaksplanSlettet',\n    SET_ØNSKER_JUSTERT_UTTAK_VED_FØDSEL = 'setØnskerJustertUttakVedFødsel',\n    SET_BRUKER_SVARTE_JA_PÅ_AUTO_JUSTERING = 'setBrukerSvarteJaPAutoJustering',\n    SET_BARN_FRA_NESTE_SAK = 'setBarnFraNesteSak',\n    SET_ANNEN_PARTS_UTTAK_ER_LAGT_TIL_I_PLAN = 'setAnnenPartsUttakErLagtTilIPlan',\n}\n\ninterface SetVelkommen {\n    type: ForeldrepengesøknadContextActionKeys.SET_HARGODKJENTVILKÅR;\n    payload: boolean;\n}\n\nconst setVelkommen = (payload: boolean): SetVelkommen => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_HARGODKJENTVILKÅR,\n    payload,\n});\n\ninterface SetErEndringssøknad {\n    type: ForeldrepengesøknadContextActionKeys.SET_ER_ENDRINGSSØKNAD;\n    payload: boolean;\n}\n\nconst setErEndringssøknad = (payload: boolean): SetErEndringssøknad => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_ER_ENDRINGSSØKNAD,\n    payload,\n});\n\ninterface SetSøkersituasjon {\n    type: ForeldrepengesøknadContextActionKeys.SET_SØKERSITUASJON;\n    payload: Søkersituasjon;\n}\n\nconst setSøkersituasjon = (payload: Søkersituasjon): SetSøkersituasjon => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_SØKERSITUASJON,\n    payload,\n});\n\ninterface SetOmBarnet {\n    type: ForeldrepengesøknadContextActionKeys.SET_OMBARNET;\n    payload: Barn;\n}\n\nconst setOmBarnet = (payload: Barn): SetOmBarnet => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_OMBARNET,\n    payload,\n});\n\ninterface AvbrytSøknad {\n    type: ForeldrepengesøknadContextActionKeys.AVBRYT_SØKNAD;\n}\n\nconst avbrytSøknad = (): AvbrytSøknad => ({\n    type: ForeldrepengesøknadContextActionKeys.AVBRYT_SØKNAD,\n});\n\ninterface UpdateCurrentRoute {\n    type: ForeldrepengesøknadContextActionKeys.UPDATE_CURRENT_ROUTE;\n    payload: SøknadRoutes;\n}\n\nconst updateCurrentRoute = (payload: SøknadRoutes): UpdateCurrentRoute => ({\n    type: ForeldrepengesøknadContextActionKeys.UPDATE_CURRENT_ROUTE,\n    payload,\n});\n\ninterface ApplyStoredState {\n    type: ForeldrepengesøknadContextActionKeys.APPLY_STORED_STATE;\n    payload: ForeldrepengesøknadContextState;\n}\n\nconst applyStoredState = (payload: ForeldrepengesøknadContextState): ApplyStoredState => ({\n    type: ForeldrepengesøknadContextActionKeys.APPLY_STORED_STATE,\n    payload,\n});\n\ninterface SetAnnenForelder {\n    type: ForeldrepengesøknadContextActionKeys.SET_ANNENFORELDER;\n    payload: AnnenForelder;\n}\n\nconst setAnnenForelder = (payload: AnnenForelder): SetAnnenForelder => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_ANNENFORELDER,\n    payload,\n});\n\ninterface SetSøkerinfo {\n    type: ForeldrepengesøknadContextActionKeys.SET_SØKERINFO;\n    payload: Søkerinfo;\n}\n\nconst setSøkerinfo = (payload: Søkerinfo): SetSøkerinfo => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_SØKERINFO,\n    payload,\n});\n\ninterface SetSøker {\n    type: ForeldrepengesøknadContextActionKeys.SET_SØKER;\n    payload: Søker;\n}\n\nconst setSøker = (payload: Søker): SetSøker => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_SØKER,\n    payload,\n});\n\ninterface SetInformasjonOmUtenlandsopphold {\n    type: ForeldrepengesøknadContextActionKeys.SET_INFORMASJON_OM_UTENLANDSOPPHOLD;\n    payload: InformasjonOmUtenlandsopphold;\n}\n\nconst setInformasjonOmUtenlandsopphold = (\n    payload: InformasjonOmUtenlandsopphold\n): SetInformasjonOmUtenlandsopphold => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_INFORMASJON_OM_UTENLANDSOPPHOLD,\n    payload,\n});\n\ninterface SetSaker {\n    type: ForeldrepengesøknadContextActionKeys.SET_SAKER;\n    payload: Sak[];\n}\n\nconst setSaker = (payload: Sak[]): SetSaker => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_SAKER,\n    payload,\n});\n\ninterface SetUttaksplanInfo {\n    type: ForeldrepengesøknadContextActionKeys.SET_UTTAKSPLAN_INFO;\n    payload: UttaksplanInfo;\n}\n\nconst setUttaksplanInfo = (payload: UttaksplanInfo): SetUttaksplanInfo => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_UTTAKSPLAN_INFO,\n    payload,\n});\n\ninterface SetTilleggsopplysninger {\n    type: ForeldrepengesøknadContextActionKeys.SET_TILLEGGSOPPLYSNINGER;\n    payload: Tilleggsopplysninger;\n}\n\nconst setTilleggsopplysninger = (payload: Tilleggsopplysninger): SetTilleggsopplysninger => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_TILLEGGSOPPLYSNINGER,\n    payload,\n});\n\ninterface SetDekningsgrad {\n    type: ForeldrepengesøknadContextActionKeys.SET_DEKNINGSGRAD;\n    dekningsgrad: Dekningsgrad;\n}\n\nconst setDekningsgrad = (dekningsgrad: Dekningsgrad): SetDekningsgrad => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_DEKNINGSGRAD,\n    dekningsgrad,\n});\n\ninterface SetVedlegg {\n    type: ForeldrepengesøknadContextActionKeys.SET_VEDLEGG;\n    vedlegg: Attachment[];\n}\n\nconst setVedlegg = (vedlegg: Attachment[]): SetVedlegg => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_VEDLEGG,\n    vedlegg,\n});\n\ninterface LagUttaksplanforslag {\n    type: ForeldrepengesøknadContextActionKeys.LAG_UTTAKSPLANFORSLAG;\n    payload: Periode[];\n}\n\nconst lagUttaksplanforslag = (payload: Periode[]): LagUttaksplanforslag => ({\n    type: ForeldrepengesøknadContextActionKeys.LAG_UTTAKSPLANFORSLAG,\n    payload,\n});\n\ninterface SetUttaksplan {\n    type: ForeldrepengesøknadContextActionKeys.SET_UTTAKSPLAN;\n    payload: Periode[];\n}\n\nconst setUttaksplan = (payload: Periode[]): SetUttaksplan => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_UTTAKSPLAN,\n    payload,\n});\n\ninterface SetPerioderSomSkalSendesInn {\n    type: ForeldrepengesøknadContextActionKeys.SET_PERIODER_SOM_SKAL_SENDES_INN;\n    payload: Periode[];\n}\n\nconst setPerioderSomSkalSendesInn = (payload: Periode[]): SetPerioderSomSkalSendesInn => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_PERIODER_SOM_SKAL_SENDES_INN,\n    payload,\n});\n\ninterface SetSøknadGjelderEtNyttBarn {\n    type: ForeldrepengesøknadContextActionKeys.SET_SØKNAD_GJELDER_ET_NYTT_BARN;\n    payload: boolean;\n}\n\nconst setSøknadGjelderEtNyttBarn = (payload: boolean): SetSøknadGjelderEtNyttBarn => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_SØKNAD_GJELDER_ET_NYTT_BARN,\n    payload,\n});\n\ninterface SetSøknad {\n    type: ForeldrepengesøknadContextActionKeys.SET_SØKNAD;\n    payload: Søknad;\n}\n\nconst setSøknad = (payload: Søknad): SetSøknad => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_SØKNAD,\n    payload,\n});\n\ninterface SetEksisterendeSak {\n    type: ForeldrepengesøknadContextActionKeys.SET_EKSISTERENDE_SAK;\n    payload: EksisterendeSak | undefined;\n}\n\nconst setEksisterendeSak = (payload: EksisterendeSak | undefined): SetEksisterendeSak => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_EKSISTERENDE_SAK,\n    payload,\n});\n\ninterface SetGodkjentOppsummering {\n    type: ForeldrepengesøknadContextActionKeys.SET_GODKJENT_OPPSUMMERING;\n    payload: boolean;\n}\n\nconst setGodkjentOppsummering = (payload: boolean): SetGodkjentOppsummering => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_GODKJENT_OPPSUMMERING,\n    payload,\n});\n\ninterface SetAntallUkerIUttaksplan {\n    type: ForeldrepengesøknadContextActionKeys.SET_ANTALL_UKER_I_UTTAKSPLAN;\n    payload: number;\n}\n\nconst setAntallUkerIUttaksplan = (payload: number): SetAntallUkerIUttaksplan => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_ANTALL_UKER_I_UTTAKSPLAN,\n    payload,\n});\n\ninterface SetEndringstidspunkt {\n    type: ForeldrepengesøknadContextActionKeys.SET_ENDRINGSTIDSPUNKT;\n    payload: Date | undefined;\n}\n\nconst setEndringstidspunkt = (payload: Date | undefined): SetEndringstidspunkt => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_ENDRINGSTIDSPUNKT,\n    payload,\n});\n\ninterface SetKvittering {\n    type: ForeldrepengesøknadContextActionKeys.SET_KVITTERING;\n    payload: Kvittering;\n}\n\nconst setKvittering = (payload: Kvittering): SetKvittering => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_KVITTERING,\n    payload,\n});\n\ninterface SetSpråkkode {\n    type: ForeldrepengesøknadContextActionKeys.SET_SPRÅKKODE;\n    payload: Locale;\n}\n\nconst setSpråkkode = (payload: Locale): SetSpråkkode => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_SPRÅKKODE,\n    payload,\n});\n\ninterface SlettUttaksplan {\n    type: ForeldrepengesøknadContextActionKeys.SLETT_UTTAKSPLAN;\n    payload: Periode[];\n}\n\nconst slettUttaksplan = (payload: Periode[]): SlettUttaksplan => ({\n    type: ForeldrepengesøknadContextActionKeys.SLETT_UTTAKSPLAN,\n    payload,\n});\n\ninterface SetUttaksplanSlettet {\n    type: ForeldrepengesøknadContextActionKeys.SET_UTTAKSPLAN_SLETTET;\n    uttaksplanHarBlittSlettet: boolean;\n}\n\nconst setUttaksplanSlettet = (uttaksplanHarBlittSlettet: boolean): SetUttaksplanSlettet => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_UTTAKSPLAN_SLETTET,\n    uttaksplanHarBlittSlettet,\n});\n\ninterface SetØnskerJustertUttakVedFødsel {\n    type: ForeldrepengesøknadContextActionKeys.SET_ØNSKER_JUSTERT_UTTAK_VED_FØDSEL;\n    payload: boolean | undefined;\n}\n\nconst setØnskerJustertUttakVedFødsel = (payload: boolean | undefined): SetØnskerJustertUttakVedFødsel => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_ØNSKER_JUSTERT_UTTAK_VED_FØDSEL,\n    payload,\n});\n\ninterface SetBrukerSvarteJaPåAutoJustering {\n    type: ForeldrepengesøknadContextActionKeys.SET_BRUKER_SVARTE_JA_PÅ_AUTO_JUSTERING;\n    payload: boolean | undefined;\n}\n\nconst setBrukerSvarteJaPåAutoJustering = (payload: boolean | undefined): SetBrukerSvarteJaPåAutoJustering => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_BRUKER_SVARTE_JA_PÅ_AUTO_JUSTERING,\n    payload,\n});\n\ninterface SetBarnFraNesteSak {\n    type: ForeldrepengesøknadContextActionKeys.SET_BARN_FRA_NESTE_SAK;\n    payload: BarnFraNesteSak | undefined;\n}\n\nconst setBarnFraNesteSak = (payload: BarnFraNesteSak | undefined): SetBarnFraNesteSak => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_BARN_FRA_NESTE_SAK,\n    payload,\n});\n\ninterface SetAnnenPartsUttakErLagtTilIPlan {\n    type: ForeldrepengesøknadContextActionKeys.SET_ANNEN_PARTS_UTTAK_ER_LAGT_TIL_I_PLAN;\n    payload: boolean;\n}\n\nconst setAnnenPartsUttakErLagtTilIPlan = (payload: boolean): SetAnnenPartsUttakErLagtTilIPlan => ({\n    type: ForeldrepengesøknadContextActionKeys.SET_ANNEN_PARTS_UTTAK_ER_LAGT_TIL_I_PLAN,\n    payload,\n});\nexport type ForeldrepengesøknadContextAction =\n    | SetVelkommen\n    | SetErEndringssøknad\n    | SetSøkersituasjon\n    | SetOmBarnet\n    | AvbrytSøknad\n    | UpdateCurrentRoute\n    | SetAnnenForelder\n    | SetSøkerinfo\n    | SetSøker\n    | SetSøknadGjelderEtNyttBarn\n    | SetInformasjonOmUtenlandsopphold\n    | SetSaker\n    | SetUttaksplanInfo\n    | SetTilleggsopplysninger\n    | SetDekningsgrad\n    | ApplyStoredState\n    | SetVedlegg\n    | SetSøknad\n    | SetEksisterendeSak\n    | LagUttaksplanforslag\n    | SetGodkjentOppsummering\n    | SetAntallUkerIUttaksplan\n    | SetEndringstidspunkt\n    | SetKvittering\n    | SetSpråkkode\n    | SetUttaksplan\n    | SetPerioderSomSkalSendesInn\n    | SlettUttaksplan\n    | SetUttaksplanSlettet\n    | SetØnskerJustertUttakVedFødsel\n    | SetBrukerSvarteJaPåAutoJustering\n    | SetBarnFraNesteSak\n    | SetAnnenPartsUttakErLagtTilIPlan;\n\nexport default {\n    setVelkommen,\n    setErEndringssøknad,\n    setSøkersituasjon,\n    setOmBarnet,\n    avbrytSøknad,\n    updateCurrentRoute,\n    applyStoredState,\n    setAnnenForelder,\n    setSøkerinfo,\n    setSøker,\n    setInformasjonOmUtenlandsopphold,\n    setSaker,\n    setUttaksplanInfo,\n    setTilleggsopplysninger,\n    setDekningsgrad,\n    setVedlegg,\n    lagUttaksplanforslag,\n    setUttaksplan,\n    setSøknad,\n    setSøknadGjelderEtNyttBarn,\n    setEksisterendeSak,\n    setGodkjentOppsummering,\n    setKvittering,\n    setAntallUkerIUttaksplan,\n    setEndringstidspunkt,\n    setSpråkkode,\n    setPerioderSomSkalSendesInn,\n    slettUttaksplan,\n    setUttaksplanSlettet,\n    setØnskerJustertUttakVedFødsel,\n    setBrukerSvarteJaPåAutoJustering,\n    setBarnFraNesteSak,\n    setAnnenPartsUttakErLagtTilIPlan,\n};\n","import { useContext } from 'react';\nimport { ForeldrepengesøknadContext } from '../ForeldrepengesøknadContext';\n\nexport const useForeldrepengesøknadContext = () => useContext(ForeldrepengesøknadContext);\n","enum SøknadRoutes {\n    VELKOMMEN = '/',\n    SØKERSITUASJON = '/soknad/sokersituasjon',\n    OM_BARNET = '/soknad/om-barnet',\n    ANNEN_FORELDER = '/soknad/annen-forelder',\n    UTTAKSPLAN_INFO = '/soknad/uttaksplan-info',\n    UTTAKSPLAN = '/soknad/uttaksplan',\n    UTENLANDSOPPHOLD = '/soknad/utenlandsopphold',\n    INNTEKTSINFORMASJON = '/soknad/inntektsinformasjon',\n    MANGLENDE_VEDLEGG = '/soknad/manglende-vedlegg',\n    OPPSUMMERING = '/soknad/oppsummering',\n    SØKNAD_SENDT = '/soknad/soknad-sendt',\n    IKKE_MYNDIG = 'ikke-myndig',\n}\n\nexport default SøknadRoutes;\n","import dayjs from 'dayjs';\nimport { Periode, Periodetype, isForeldrepengerFørFødselUttaksperiode } from 'uttaksplan/types/Periode';\nimport { getTidsperiode, Tidsperioden } from './Tidsperioden';\nimport { Uttaksdagen } from './Uttaksdagen';\nimport { formaterDatoKompakt } from 'app/utils/dateUtils';\n\nexport const Perioden = (periode: Periode) => ({\n    setStartdato: (fom: Date) => flyttPeriode(periode, fom),\n    setUttaksdager: (uttaksdager: number) =>\n        (periode.tidsperiode = getTidsperiode(periode.tidsperiode.fom, uttaksdager)),\n    getAntallUttaksdager: () => Tidsperioden(periode.tidsperiode).getAntallUttaksdager(),\n    getAntallFridager: () => Tidsperioden(periode.tidsperiode).getAntallFridager(),\n    erLik: (periode2: Periode, inkluderTidsperiode = false, inkluderUtsettelser = false) =>\n        erPerioderLike(periode, periode2, inkluderTidsperiode, inkluderUtsettelser),\n    erSammenhengende: (periode2: Periode) => erPerioderSammenhengende(periode, periode2),\n    inneholderFridager: () => Tidsperioden(periode.tidsperiode).getAntallFridager() > 0,\n    starterFør: (dato: Date) => dayjs(periode.tidsperiode.fom).isBefore(dato, 'day'),\n    slutterEtter: (dato: Date) => dayjs(periode.tidsperiode.tom).isAfter(dato, 'day'),\n    slutterSammeDagEllerEtter: (dato: Date) => dayjs(periode.tidsperiode.tom).isSameOrAfter(dato, 'day'),\n});\n\nfunction erPerioderSammenhengende(p1: Periode, p2: Periode) {\n    const p1NesteUttaksdato = Uttaksdagen(dayjs(p1.tidsperiode.tom).toDate()).neste();\n    const p2Startdato = p2.tidsperiode.fom;\n    return dayjs(p1NesteUttaksdato).isSame(p2Startdato, 'day');\n}\n\nfunction erPerioderLike(p1: Periode, p2: Periode, inkluderTidsperiode = false, inkluderUtsettelser = false) {\n    if (p1.type !== p2.type) {\n        return false;\n    }\n    if (inkluderUtsettelser === false && (p1.type === Periodetype.Utsettelse || p2.type === Periodetype.Utsettelse)) {\n        return false;\n    }\n    if (p1.type === Periodetype.Hull && p2.type === Periodetype.Hull) {\n        return true;\n    }\n    if (isForeldrepengerFørFødselUttaksperiode(p1) && isForeldrepengerFørFødselUttaksperiode(p2)) {\n        const fff1 = getPeriodeFootprint(\n            { ...p1, skalIkkeHaUttakFørTermin: p1.skalIkkeHaUttakFørTermin || false },\n            inkluderTidsperiode\n        );\n        const fff2 = getPeriodeFootprint(\n            { ...p2, skalIkkeHaUttakFørTermin: p2.skalIkkeHaUttakFørTermin || false },\n            inkluderTidsperiode\n        );\n        return fff1 === fff2;\n    }\n    const k1 = getPeriodeFootprint(p1, inkluderTidsperiode);\n    const k2 = getPeriodeFootprint(p2, inkluderTidsperiode);\n    return k1 === k2;\n}\n\nfunction getPeriodeFootprint(periode: Periode, inkluderTidsperiode = false) {\n    const { tidsperiode, id, ...rest } = periode;\n    const sortedPeriode: any = {};\n    Object.keys(rest)\n        .sort()\n        .filter((key) => (rest as any)[key] !== undefined)\n        .forEach((key) => {\n            sortedPeriode[key] = (rest as any)[key];\n        });\n    if (inkluderTidsperiode && tidsperiode) {\n        sortedPeriode.tidsperiode = {\n            fom: tidsperiode.fom ? formaterDatoKompakt(tidsperiode.fom) : undefined,\n            tom: tidsperiode.tom ? formaterDatoKompakt(tidsperiode.tom) : undefined,\n        };\n    }\n    return JSON.stringify({ ...sortedPeriode });\n}\n\nfunction flyttPeriode(periode: Periode, fom: Date): Periode {\n    const { tidsperiode } = periode;\n\n    return {\n        ...periode,\n        tidsperiode: Tidsperioden({\n            fom: tidsperiode.fom,\n            tom: tidsperiode.tom,\n        }).setStartdato(fom),\n    };\n}\n","import { Forelder } from 'app/types/Forelder';\nimport dayjs from 'dayjs';\nimport {\n    ForeldrepengerFørFødselUttaksperiode,\n    InfoPeriode,\n    isForeldrepengerFørFødselUttaksperiode,\n    isHull,\n    isInfoPeriode,\n    isOppholdsperiode,\n    isOverføringsperiode,\n    isPeriodeUtenUttak,\n    isPeriodeUtenUttakUtsettelse,\n    isUtsettelsePgaFerie,\n    isUtsettelsesperiode,\n    isUttaksperiode,\n    Oppholdsperiode,\n    Overføringsperiode,\n    Periode,\n    PeriodeHull,\n    Periodetype,\n    PeriodeUtenUttak,\n    Utsettelsesperiode,\n    Uttaksperiode,\n} from 'uttaksplan/types/Periode';\nimport { StønadskontoType } from 'uttaksplan/types/StønadskontoType';\nimport {\n    erUtsettelse,\n    erUtsettelseGrunnetPgaArbeid,\n    erUtsettelsePgaSykdom,\n    erUtsettelseTilbakeITid,\n    erUttakEllerOppholdMerEnnTreMånederSiden,\n    erUttakGrunnetSykdom,\n    erUttakTilbakeITid,\n} from 'uttaksplan/utils/periodeUtils';\nimport { Perioden } from './Perioden';\nimport { datoErInnenforTidsperiode, isValidTidsperiode, Tidsperioden } from './Tidsperioden';\nimport { Uttaksdagen } from './Uttaksdagen';\nimport { SenEndringÅrsak } from 'uttaksplan/types/SenEndringÅrsak';\nimport { finnAntallDagerÅTrekke } from './uttaksPlanStatus';\n\nexport const Periodene = (perioder: Periode[]) => ({\n    getPeriode: (id: string) => getPeriode(perioder, id),\n    getOpphold: () => getOpphold(perioder),\n    getUttak: () => getUttaksperioder(perioder),\n    getOverføringer: () => getOverføringer(perioder),\n    getHull: () => getHull(perioder),\n    getHullOgInfoOgPerioderUtenUttak: () => getHullOgInfoOgPerioderUtenUttak(perioder),\n    getInfoperioder: () => getInfoperioder(perioder),\n    getUtsettelser: () => getUtsettelser(perioder),\n    getPerioderEtterFamiliehendelsesdato: (dato: Date) => getPerioderEtterFamiliehendelsesdato(perioder, dato),\n    getPerioderFørFamiliehendelsesdato: (dato: Date) => getPerioderFørFamiliehendelsesdato(perioder, dato),\n    getPerioderMedUgyldigTidsperiode: () => getPeriodeMedUgyldigTidsperiode(perioder),\n    getPerioderMedFerieForForelder: (forelder: Forelder) => getPerioderMedFerieForForelder(perioder, forelder),\n    getFørstePerioderEtterFamiliehendelsesdato: (dato: Date) =>\n        getFørstePeriodeEtterFamiliehendelsesdato(perioder, dato),\n    getForeldrepengerFørTermin: () => getForeldrepengerFørTermin(perioder),\n    getFørsteUttaksdag: () => getFørsteUttaksdag(perioder),\n    getFørsteUttaksdagEtterSistePeriode: () => getFørsteUttaksdagEtterSistePeriode(perioder),\n    getFørsteUttaksdagEksluderInfoperioderOgFrittUttak: () =>\n        getFørsteUttaksdagEksluderInfoperioderOgFrittUttak(perioder),\n    getAntallUttaksdager: () => getAntallUttaksdager(perioder),\n    getAntallFeriedager: (forelder?: Forelder) => getAntallFeriedager(perioder, forelder),\n    finnOverlappendePerioder: (periode: Periode) => finnOverlappendePerioder(perioder, periode),\n    finnPeriodeMedDato: (dato: Date) => finnPeriodeMedDato(perioder, dato),\n    finnFørstePeriodeEtterDato: (dato: Date) => finnFørstePeriodeEtterDato(perioder, dato),\n    finnAlleForegåendePerioder: (periode: Periode) => finnPerioderFørPeriode(perioder, periode),\n    finnAllePåfølgendePerioder: (periode: Periode) => finnPerioderEtterPeriode(perioder, periode),\n    finnDenForegåendePerioden: (periode: Periode) => finnForrigePeriode(perioder, periode),\n    finnPåfølgendePeriode: (periode: Periode) => finnPåfølgendePeriode(perioder, periode),\n    forskyvPerioder: (uttaksdager: number) => forskyvPerioder(perioder, uttaksdager),\n    sort: () => perioder.sort(sorterPerioder),\n    finnSisteInfoperiode: () => finnSisteInfoperiode(perioder),\n});\n\nexport function sorterPerioder(p1: Periode, p2: Periode) {\n    if (isValidTidsperiode(p1.tidsperiode) === false || isValidTidsperiode(p2.tidsperiode) === false) {\n        if (isForeldrepengerFørFødselUttaksperiode(p1) && p1.skalIkkeHaUttakFørTermin) {\n            return -1;\n        }\n        return isValidTidsperiode(p1.tidsperiode) ? 1 : -1;\n    }\n    if (dayjs(p1.tidsperiode.fom).isSame(p2.tidsperiode.fom, 'day')) {\n        return isInfoPeriode(p1) ? -1 : 1;\n    }\n\n    if (Tidsperioden(p2.tidsperiode).erOmsluttetAv(p1.tidsperiode)) {\n        return 1;\n    }\n\n    return dayjs(p1.tidsperiode.fom).isBefore(p2.tidsperiode.fom, 'day') ? -1 : 1;\n}\n\nfunction getPeriode(perioder: Periode[], id: string): Periode | undefined {\n    return perioder.find((p) => p.id === id);\n}\n\nfunction getUttaksperioder(perioder: Periode[]): Uttaksperiode[] {\n    return perioder.filter((periode) => isUttaksperiode(periode)) as Uttaksperiode[];\n}\n\nfunction getUtsettelser(perioder: Periode[]): Utsettelsesperiode[] {\n    return perioder.filter((periode) => isUtsettelsesperiode(periode)) as Utsettelsesperiode[];\n}\n\nfunction getFerieUtsettelser(perioder: Periode[]): Utsettelsesperiode[] {\n    return perioder.filter((periode) => isUtsettelsePgaFerie(periode)) as Utsettelsesperiode[];\n}\n\nfunction getOverføringer(perioder: Periode[]): Overføringsperiode[] {\n    return perioder.filter((periode) => isOverføringsperiode(periode)) as Overføringsperiode[];\n}\n\nfunction getHull(perioder: Periode[]): PeriodeHull[] {\n    return perioder.filter((periode) => isHull(periode)) as PeriodeHull[];\n}\n\nfunction getHullOgInfoOgPerioderUtenUttak(perioder: Periode[]): Array<PeriodeHull | InfoPeriode | PeriodeUtenUttak> {\n    return perioder.filter(\n        (periode) => isHull(periode) || isInfoPeriode(periode) || isPeriodeUtenUttak(periode)\n    ) as Array<PeriodeHull | InfoPeriode | PeriodeUtenUttak>;\n}\n\nfunction getInfoperioder(perioder: Periode[]): InfoPeriode[] {\n    return perioder.filter((periode) => isInfoPeriode(periode)) as InfoPeriode[];\n}\n\nfunction getOpphold(perioder: Periode[]): Oppholdsperiode[] {\n    return perioder.filter((periode) => isOppholdsperiode(periode)) as Oppholdsperiode[];\n}\n\nfunction finnOverlappendePerioder(perioder: Periode[], periode: Periode): Periode[] {\n    return perioder.filter((p) => {\n        if (p.id === periode.id || !isValidTidsperiode(periode.tidsperiode)) {\n            return false;\n        }\n        const { fom, tom } = p.tidsperiode;\n        if (!fom || !tom) {\n            return false;\n        }\n        const fomEllerTomErInnenforTidsperiode =\n            datoErInnenforTidsperiode(fom, periode.tidsperiode) || datoErInnenforTidsperiode(tom, periode.tidsperiode);\n\n        const fomTomOmkranserTidsperiode =\n            dayjs(periode.tidsperiode.fom).isSameOrAfter(fom, 'day') &&\n            dayjs(periode.tidsperiode.tom).isSameOrBefore(tom, 'day');\n\n        return fomEllerTomErInnenforTidsperiode || fomTomOmkranserTidsperiode;\n    });\n}\n\nfunction finnPeriodeMedDato(perioder: Periode[], dato: Date): Periode | undefined {\n    return perioder.find((periode) => {\n        return dayjs(dato).isBetween(periode.tidsperiode.fom, periode.tidsperiode.tom, 'day', '[]');\n    });\n}\n\nfunction finnFørstePeriodeEtterDato(perioder: Periode[], dato: Date): Periode | undefined {\n    return perioder.find((periode) => {\n        return dayjs(periode.tidsperiode.fom).isAfter(dato, 'day');\n    });\n}\n\nfunction finnPerioderFørPeriode(perioder: Periode[], periode: Periode): Periode[] {\n    return perioder.filter((p) => dayjs(p.tidsperiode.tom).isBefore(periode.tidsperiode.fom, 'day'));\n}\n\nfunction finnPerioderEtterPeriode(perioder: Periode[], periode: Periode): Periode[] {\n    return perioder.filter((p) => dayjs(p.tidsperiode.fom).isAfter(periode.tidsperiode.tom, 'day'));\n}\n\nfunction finnForrigePeriode(perioder: Periode[], periode: Periode): Periode | undefined {\n    const foregåendePerioder = finnPerioderFørPeriode(perioder, periode);\n    if (foregåendePerioder.length > 0) {\n        return foregåendePerioder.pop();\n    }\n    return undefined;\n}\nfunction finnPåfølgendePeriode(perioder: Periode[], periode: Periode): Periode | undefined {\n    const påfølgendePerioder = finnPerioderEtterPeriode(perioder, periode);\n    if (påfølgendePerioder.length > 0) {\n        return påfølgendePerioder[0];\n    }\n    return undefined;\n}\nfunction forskyvPerioder(perioder: Periode[], uttaksdager: number): Periode[] {\n    let uttaksdagerCurrent = uttaksdager;\n\n    return perioder.reduce((result: Periode[], periode: Periode) => {\n        if (isUtsettelsesperiode(periode)) {\n            result.push(periode);\n\n            const dagerIPerioden = Perioden(periode).getAntallUttaksdager();\n\n            if (dagerIPerioden >= uttaksdagerCurrent) {\n                uttaksdagerCurrent = 0;\n            } else {\n                uttaksdagerCurrent -= dagerIPerioden;\n            }\n\n            return result;\n        }\n\n        if (\n            isInfoPeriode(periode) ||\n            isHull(periode) ||\n            isPeriodeUtenUttak(periode) ||\n            isPeriodeUtenUttakUtsettelse(periode)\n        ) {\n            const dagerIPerioden = Perioden(periode).getAntallUttaksdager();\n\n            if (dagerIPerioden > uttaksdagerCurrent) {\n                const forskyvetStartdato = Uttaksdagen(Uttaksdagen(periode.tidsperiode.fom).denneEllerNeste()).leggTil(\n                    uttaksdagerCurrent\n                );\n                const justertPeriode: Periode = {\n                    ...periode,\n                    tidsperiode: {\n                        fom: forskyvetStartdato,\n                        tom: periode.tidsperiode.tom,\n                    },\n                };\n\n                uttaksdagerCurrent = 0;\n\n                result.push(justertPeriode);\n                return result;\n            } else if (dagerIPerioden === uttaksdagerCurrent) {\n                uttaksdagerCurrent = 0;\n                return result;\n            } else {\n                uttaksdagerCurrent -= dagerIPerioden;\n                return result;\n            }\n        }\n\n        result.push(forskyvPeriode(periode, uttaksdagerCurrent));\n        return result;\n    }, []);\n}\n\nfunction forskyvPeriode(periode: Periode, uttaksdager: number): Periode {\n    if (uttaksdager === 0) {\n        return periode;\n    }\n\n    const forskyvetStartdato = Uttaksdagen(Uttaksdagen(periode.tidsperiode.fom).denneEllerNeste()).leggTil(uttaksdager);\n    return Perioden(periode).setStartdato(forskyvetStartdato);\n}\n\nfunction getPerioderFørFamiliehendelsesdato(perioder: Periode[], familiehendelsesdato: Date) {\n    return perioder.filter(\n        (periode) =>\n            isForeldrepengerFørFødselUttaksperiode(periode) ||\n            (isValidTidsperiode(periode.tidsperiode) &&\n                dayjs(periode.tidsperiode.fom).isBefore(familiehendelsesdato, 'day'))\n    );\n}\n\nfunction getPerioderEtterFamiliehendelsesdato(perioder: Periode[], familiehendelsesdato: Date) {\n    return perioder.filter(\n        (periode) =>\n            isValidTidsperiode(periode.tidsperiode) &&\n            dayjs(periode.tidsperiode.fom).isSameOrAfter(familiehendelsesdato, 'day') &&\n            isForeldrepengerFørFødselUttaksperiode(periode) === false\n    );\n}\n\nfunction getFørstePeriodeEtterFamiliehendelsesdato(\n    perioder: Periode[],\n    familiehendelsesdato: Date\n): Periode | undefined {\n    const aktuellePerioder = getPerioderEtterFamiliehendelsesdato(perioder, familiehendelsesdato).sort(sorterPerioder);\n    return aktuellePerioder.length > 0 ? aktuellePerioder[0] : undefined;\n}\n\nfunction getPeriodeMedUgyldigTidsperiode(perioder: Periode[]) {\n    return perioder.filter(\n        (periode) =>\n            isValidTidsperiode(periode.tidsperiode) === false &&\n            isForeldrepengerFørFødselUttaksperiode(periode) === false\n    );\n}\n\nfunction getFørsteUttaksdag(perioder: Periode[]): Date | undefined {\n    const førstePeriode = perioder\n        .filter((p) => p.tidsperiode.fom !== undefined)\n        .sort(sorterPerioder)\n        .shift();\n    if (førstePeriode) {\n        return førstePeriode.tidsperiode.fom;\n    }\n    return undefined;\n}\n\nfunction getFørsteUttaksdagEksluderInfoperioderOgFrittUttak(perioder: Periode[]): Date | undefined {\n    const førstePeriode = perioder\n        .filter(\n            (p) =>\n                p.tidsperiode.fom !== undefined &&\n                !isInfoPeriode(p) &&\n                !isPeriodeUtenUttak(p) &&\n                !isPeriodeUtenUttakUtsettelse(p)\n        )\n        .sort(sorterPerioder)\n        .shift();\n    if (førstePeriode) {\n        return førstePeriode.tidsperiode.fom;\n    }\n    return undefined;\n}\n\nfunction getAntallUttaksdager(perioder: Periode[]): number {\n    return perioder.reduce((dager, periode) => {\n        return dager + Perioden(periode).getAntallUttaksdager();\n    }, 0);\n}\n\nfunction getAntallFeriedager(perioder: Periode[], forelder?: Forelder): number {\n    return getFerieUtsettelser(perioder)\n        .filter((p) => (isValidTidsperiode(p.tidsperiode) && forelder ? p.forelder === forelder : true))\n        .map((p) => Tidsperioden(p.tidsperiode).getAntallUttaksdager())\n        .reduce((tot = 0, curr) => tot + curr, 0);\n}\n\nfunction getPerioderMedFerieForForelder(perioder: Periode[], forelder: Forelder): Periode[] {\n    return perioder.filter((periode) => erPeriodeMedFerieForForelder(periode, forelder));\n}\n\nfunction getForeldrepengerFørTermin(perioder: Periode[]): ForeldrepengerFørFødselUttaksperiode | undefined {\n    const periode: Periode | undefined = perioder.find(\n        (p) => isUttaksperiode(p) && p.konto === StønadskontoType.ForeldrepengerFørFødsel\n    );\n    return periode ? (periode as ForeldrepengerFørFødselUttaksperiode) : undefined;\n}\n\nfunction getFørsteUttaksdagEtterSistePeriode(perioder: Periode[]): Date | undefined {\n    if (perioder.length === 0) {\n        return undefined;\n    }\n    return Uttaksdagen(perioder[perioder.length - 1].tidsperiode.tom).neste();\n}\n\nexport const erPeriodeMedFerieForForelder = (periode: Periode, forelder: Forelder): boolean => {\n    return isUtsettelsePgaFerie(periode) && periode.forelder === forelder;\n};\n\nfunction finnSisteInfoperiode(perioder: Periode[]) {\n    return perioder\n        .filter((p) => isInfoPeriode(p))\n        .sort(sorterPerioder)\n        .reverse()[0];\n}\n\nexport const getSeneEndringerSomKreverBegrunnelse = (uttaksplan: Periode[]): SenEndringÅrsak => {\n    const utsettelsesPerioder = uttaksplan.filter(erUtsettelse) as Utsettelsesperiode[];\n    const utsettelseSykdomKreverBegrunnelse = utsettelsesPerioder.some(erUtsettelsePgaSykdom);\n    const uttakSykdomKreverBegrunnelse = uttaksplan.some(erUttakGrunnetSykdom);\n    const utsettelseSykdomKreverBegrunnelsePgaSøktSent = utsettelsesPerioder\n        .filter(erUtsettelseTilbakeITid)\n        .some(erUtsettelsePgaSykdom);\n    const uttakSykdomKreverBegrunnelsePgaSøktSent = uttaksplan.filter(erUttakTilbakeITid).some(erUttakGrunnetSykdom);\n    const utsettelseArbeidKreverBegrunnelsePgaSøktSent = utsettelsesPerioder\n        .filter(erUtsettelseTilbakeITid)\n        .some(erUtsettelseGrunnetPgaArbeid);\n    const uttakKreverBegrunnelsePgaSøktSent = uttaksplan.some(erUttakEllerOppholdMerEnnTreMånederSiden);\n\n    if (utsettelseArbeidKreverBegrunnelsePgaSøktSent) {\n        return uttakKreverBegrunnelsePgaSøktSent ? SenEndringÅrsak.ArbeidOgUttak : SenEndringÅrsak.Arbeid;\n    }\n\n    if (\n        utsettelseSykdomKreverBegrunnelse ||\n        utsettelseSykdomKreverBegrunnelsePgaSøktSent ||\n        uttakSykdomKreverBegrunnelsePgaSøktSent ||\n        uttakSykdomKreverBegrunnelse\n    ) {\n        return uttakKreverBegrunnelsePgaSøktSent ? SenEndringÅrsak.SykdomOgUttak : SenEndringÅrsak.Sykdom;\n    }\n\n    return uttakKreverBegrunnelsePgaSøktSent ? SenEndringÅrsak.Uttak : SenEndringÅrsak.Ingen;\n};\n\nexport const uttaksplanErBareOpphold = (perioder: Periode[]): boolean => {\n    const perioderUtenInfoPerioder = perioder.filter((p) => !isInfoPeriode(p));\n\n    if (perioderUtenInfoPerioder.length === 0) {\n        return false;\n    }\n\n    return perioderUtenInfoPerioder.every((periode) => periode.type === Periodetype.Opphold);\n};\n\nexport const uttaksplanSlutterMedOpphold = (perioder: Periode[]): boolean => {\n    return (\n        perioder\n            .filter((p) => !isInfoPeriode(p))\n            .slice()\n            .reverse()\n            .findIndex((periode) => periode.type === Periodetype.Opphold) === 0\n    );\n};\n\nexport const uttaksplanStarterMedOpphold = (perioder: Periode[]): boolean => {\n    return perioder.filter((p) => !isInfoPeriode(p)).findIndex((periode) => periode.type === Periodetype.Opphold) === 0;\n};\n\nexport const getSumUttaksdagerÅTrekkeIPeriodene = (perioder: Periode[]) => {\n    return Math.floor(perioder.map((p) => finnAntallDagerÅTrekke(p)).reduce((prev, curr) => prev + curr, 0));\n};\n","import dayjs from 'dayjs';\nimport DateHolidays, { HolidaysTypes } from 'date-holidays';\nimport { TidsperiodeDate } from '@navikt/fp-common';\n\nconst holidays = new DateHolidays('no');\n\nexport const getOffentligeFridager = (tidsperiode: TidsperiodeDate): HolidaysTypes.Holiday[] => {\n    const fraÅr = tidsperiode.fom.getFullYear();\n    const tilÅr = tidsperiode.tom.getFullYear();\n    let days = [] as HolidaysTypes.Holiday[];\n    if (fraÅr === tilÅr) {\n        days = holidays.getHolidays(fraÅr);\n    } else {\n        let år = fraÅr;\n        while (år <= tilÅr) {\n            days = [...days, ...holidays.getHolidays(år)];\n            år++;\n        }\n    }\n    const start = dayjs(tidsperiode.fom).subtract(24, 'hours');\n    const slutt = dayjs(tidsperiode.tom).add(24, 'hours');\n    return days\n        .filter((d) => d.type === 'public')\n        .filter((d) => dayjs(d.date).isAfter(start, 'day') && dayjs(d.date).isBefore(slutt, 'day'));\n};\n\nexport const getOffentligeFridagerIMåned = (måned: Date): HolidaysTypes.Holiday[] => {\n    const days: HolidaysTypes.Holiday[] = holidays.getHolidays(måned.getFullYear());\n    const start = dayjs(måned).startOf('month');\n    const slutt = dayjs(måned).endOf('month');\n    return days\n        .filter((d) => d.type === 'public')\n        .filter((d) => dayjs(d.date).isAfter(start, 'day') && dayjs(d.date).isBefore(slutt, 'day'));\n};\n\n/* Default - hente ut helligdager i default tidsrom */\nexport const fridager = getOffentligeFridager({\n    fom: new Date(dayjs().subtract(4, 'years').toDate()),\n    tom: new Date(dayjs().add(4, 'years').toDate()),\n});\n\nexport const erFridag = (dato: Date): string | undefined => {\n    const fridag = fridager.find((fr) => dayjs(new Date(fr.date)).isSame(dato, 'day'));\n    return fridag ? fridag.name : undefined;\n};\n","import dayjs from 'dayjs';\nimport { IntlShape } from 'react-intl';\nimport { HolidaysTypes } from 'date-holidays';\nimport { getOffentligeFridager } from 'app/utils/fridagerUtils';\nimport { formaterDatoUtenDag, dateIsSameOrBefore, dateIsSameOrAfter } from 'app/utils/dateUtils';\nimport { Uttaksdagen } from './Uttaksdagen';\nimport { TidsperiodeDate } from '@navikt/fp-common';\n\nexport const ANTALL_UTTAKSDAGER_SEKS_UKER = 30;\n\nexport const Tidsperioden = (tidsperiode: TidsperiodeDate) => ({\n    erLik: (tidsperiode2: TidsperiodeDate) => erTidsperioderLike(tidsperiode, tidsperiode2),\n    overlapper: (tidsperiode2: TidsperiodeDate) => overlapperTidsperioder(tidsperiode, tidsperiode2),\n    erOmsluttetAv: (tidsperiode2: TidsperiodeDate) => erTidsperiodeOmsluttetAvTidsperiode(tidsperiode, tidsperiode2),\n    erUtenfor: (tidsperiode2: TidsperiodeDate) => erTidsperiodeUtenforTidsperiode(tidsperiode, tidsperiode2),\n    getAntallUttaksdager: () => getAntallUttaksdagerITidsperiode(tidsperiode),\n    getAntallFridager: () => getUttaksdagerSomErFridager(tidsperiode).length,\n    setStartdato: (fom: Date) => (isValidTidsperiode(tidsperiode) ? flyttTidsperiode(tidsperiode, fom) : tidsperiode),\n    setUttaksdager: (uttaksdager: number) =>\n        tidsperiode.fom ? getTidsperiode(tidsperiode.fom, uttaksdager) : tidsperiode,\n    formaterString: (intl: IntlShape) => tidsperiodeToString(tidsperiode, intl),\n    formaterStringKort: (intl: IntlShape) => tidsperiodeToStringKort(tidsperiode, intl),\n    erFomEllerEtterDato: (dato: Date) => erTidsperiodeFomEllerEtterDato(tidsperiode, dato),\n    erFørDato: (dato: Date) => erTidsperiodeFomEllerEtterDato(tidsperiode, dato) === false,\n    inneholderDato: (dato: Date) => inneholderTidsperiodeDato(tidsperiode, dato),\n    erInnenforFørsteSeksUker: (familiehendelsesdato: Date) =>\n        erTidsperiodeInnenforFørsteSeksUker(tidsperiode, familiehendelsesdato),\n});\n\nconst overlapperTidsperioder = (t1: TidsperiodeDate, t2: TidsperiodeDate) => {\n    return (\n        dayjs(t1.fom).isBetween(t2.fom, t2.tom, 'day', '[]') ||\n        dayjs(t1.tom).isBetween(t2.fom, t2.tom, 'day', '[]') ||\n        dayjs(t2.fom).isBetween(t1.fom, t1.tom, 'day', '[]') ||\n        dayjs(t2.tom).isBetween(t1.fom, t1.tom, 'day', '[]')\n    );\n};\n\nconst erTidsperiodeInnenforFørsteSeksUker = (tidsperiode: any, familiehendelsesdato: Date) => {\n    const førsteUttaksdagFamiliehendelsesdato = Uttaksdagen(familiehendelsesdato).denneEllerNeste();\n    const førsteUttaksdagEtterSeksUker = Uttaksdagen(førsteUttaksdagFamiliehendelsesdato).leggTil(\n        ANTALL_UTTAKSDAGER_SEKS_UKER\n    );\n    return erTidsperiodeFomEllerEtterDato(tidsperiode, førsteUttaksdagEtterSeksUker) === false;\n};\n\nfunction inneholderTidsperiodeDato(tidsperiode: TidsperiodeDate, dato: Date): boolean {\n    if (!tidsperiode.fom || !tidsperiode.tom) {\n        return false;\n    }\n\n    return dayjs(dato).isBetween(tidsperiode.fom, tidsperiode.tom, 'days', '[]');\n}\n\nexport function isValidTidsperiode(tidsperiode: any): tidsperiode is TidsperiodeDate {\n    return (\n        tidsperiode.fom !== undefined &&\n        tidsperiode.tom !== undefined &&\n        dayjs(tidsperiode.fom).isSameOrBefore(tidsperiode.tom, 'day')\n    );\n}\n\nexport function resetTidsperiodeTomIfBeforeFom(tidsperiode: TidsperiodeDate): TidsperiodeDate {\n    return {\n        fom: tidsperiode.fom,\n        tom:\n            tidsperiode.fom && tidsperiode.tom && dayjs(tidsperiode.fom).isAfter(tidsperiode.tom, 'day')\n                ? tidsperiode.fom\n                : tidsperiode.tom,\n    };\n}\n\nexport function getValidTidsperiode(tidsperiode: TidsperiodeDate | undefined): TidsperiodeDate | undefined {\n    if (tidsperiode === undefined) {\n        return undefined;\n    }\n    if (isValidTidsperiode(tidsperiode)) {\n        return tidsperiode;\n    }\n    return undefined;\n}\n\nexport function getTidsperiode(fom: Date, uttaksdager: number): TidsperiodeDate {\n    if (!Uttaksdagen(fom).erUttaksdag()) {\n        throw new Error('FOM er ikke en uttaksdag');\n    }\n    return {\n        fom,\n        tom: Uttaksdagen(fom).leggTil(uttaksdager - 1),\n    };\n}\n\nexport function datoErInnenforTidsperiode(dato: Date, tidsperiode: TidsperiodeDate): boolean {\n    const { fom, tom } = tidsperiode;\n    if (!fom || !tom) {\n        return false;\n    }\n    return dayjs(dato).isBetween(fom, tom, 'days', '[]');\n}\n\nfunction getAntallUttaksdagerITidsperiode(tidsperiode: TidsperiodeDate): number {\n    if (!isValidTidsperiode(tidsperiode)) {\n        return 0;\n    }\n    let fom = dayjs(tidsperiode.fom);\n    const tom = dayjs(tidsperiode.tom);\n    let antall = 0;\n    while (fom.isSameOrBefore(tom, 'day')) {\n        if (Uttaksdagen(fom.toDate()).erUttaksdag()) {\n            antall++;\n        }\n        fom = fom.add(24, 'hours');\n    }\n    return antall;\n}\n\nfunction getUttaksdagerSomErFridager(tidsperiode: TidsperiodeDate): HolidaysTypes.Holiday[] {\n    return isValidTidsperiode(tidsperiode)\n        ? getOffentligeFridager(tidsperiode).filter((dag) => Uttaksdagen(new Date(dag.date)).erUttaksdag())\n        : [];\n}\n\nfunction flyttTidsperiode(tidsperiode: TidsperiodeDate, fom: Date): TidsperiodeDate {\n    const uttaksdager = getAntallUttaksdagerITidsperiode(tidsperiode);\n    return getTidsperiode(fom, uttaksdager);\n}\n\nexport function erTidsperioderLike(t1: TidsperiodeDate, t2: TidsperiodeDate) {\n    if (isValidTidsperiode(t1) && isValidTidsperiode(t2)) {\n        return dayjs(t1.fom).isSame(t2.fom, 'day') && dayjs(t1.tom).isSame(t2.tom, 'day');\n    }\n    return JSON.stringify(t1) === JSON.stringify(t2);\n}\n\nfunction erTidsperiodeOmsluttetAvTidsperiode(tidsperiode1: TidsperiodeDate, tidsperiode2: TidsperiodeDate): boolean {\n    if (isValidTidsperiode(tidsperiode1) && isValidTidsperiode(tidsperiode2)) {\n        return (\n            dateIsSameOrAfter(tidsperiode1.fom, tidsperiode2.fom) &&\n            dateIsSameOrBefore(tidsperiode1.tom, tidsperiode2.tom)\n        );\n    }\n    return false;\n}\n\nfunction erTidsperiodeUtenforTidsperiode(tidsperiode1: TidsperiodeDate, tidsperiode2: TidsperiodeDate): boolean {\n    if (isValidTidsperiode(tidsperiode1) && isValidTidsperiode(tidsperiode2)) {\n        return (\n            dayjs(tidsperiode1.fom).isAfter(tidsperiode2.tom, 'day') ||\n            dayjs(tidsperiode1.tom).isBefore(tidsperiode2.fom, 'day')\n        );\n    }\n    return false;\n}\n\nfunction tidsperiodeToString(tidsperiode: TidsperiodeDate, intl: IntlShape) {\n    const { fom, tom } = tidsperiode;\n    if (fom && tom && dayjs(fom).isSame(tom, 'day')) {\n        return formaterDatoUtenDag(fom ? fom : tom);\n    }\n    return intl.formatMessage(\n        { id: 'tidsperiode' },\n        {\n            fom: fom ? formaterDatoUtenDag(fom) : '',\n            tom: tom ? formaterDatoUtenDag(tom) : '',\n        }\n    );\n}\n\nfunction tidsperiodeToStringKort(tidsperiode: TidsperiodeDate, intl: IntlShape) {\n    const { fom, tom } = tidsperiode;\n    if (fom && tom && dayjs(fom).isSame(tom, 'day')) {\n        return formaterDatoUtenDag(fom ? fom : tom);\n    }\n    return intl.formatMessage(\n        { id: 'tidsperiode.kort' },\n        {\n            fom: fom ? formaterDatoUtenDag(fom) : '',\n            tom: tom ? formaterDatoUtenDag(tom) : '',\n        }\n    );\n}\n\nconst erTidsperiodeFomEllerEtterDato = (tidsperiode: TidsperiodeDate, dato: Date): boolean => {\n    return (\n        tidsperiode.fom !== undefined &&\n        tidsperiode.tom !== undefined &&\n        dayjs(tidsperiode.fom).isSameOrAfter(dato, 'day') &&\n        dayjs(tidsperiode.tom).isSameOrAfter(dato, 'day')\n    );\n};\n","import isoWeek from 'dayjs/plugin/isoWeek';\nimport dayjs from 'dayjs';\nimport { Tidsperioden } from './Tidsperioden';\n\ndayjs.extend(isoWeek);\n\n/**\n * Wrapper en dato med uttaksdager-funksjonalitet\n * @param dato\n */\nexport const Uttaksdagen = (dato: Date) => ({\n    erUttaksdag: (): boolean => erUttaksdag(dato),\n    forrige: (): Date => getUttaksdagFørDato(dato),\n    neste: (): Date => getUttaksdagEtterDato(dato),\n    denneEllerNeste: (): Date => getUttaksdagFraOgMedDato(dato),\n    denneEllerForrige: (): Date => getUttaksdagTilOgMedDato(dato),\n    getUttaksdagerFremTilDato: (tildato: Date) => getUttaksdagerFremTilDato(dato, tildato),\n    leggTil: (uttaksdager: number): Date => {\n        if (uttaksdager < 0) {\n            return trekkUttaksdagerFraDato(dato, uttaksdager);\n        } else if (uttaksdager > 0) {\n            return leggUttaksdagerTilDato(dato, uttaksdager);\n        }\n        return dato;\n    },\n    trekkFra: (uttaksdager: number): Date => trekkUttaksdagerFraDato(dato, uttaksdager),\n});\n\nfunction getUkedag(dato: Date): number {\n    return dayjs(dato).isoWeekday();\n}\n\nexport function erUttaksdag(dato: Date): boolean {\n    return getUkedag(dato) !== 6 && getUkedag(dato) !== 7;\n}\n\nfunction getUttaksdagFørDato(dato: Date): Date {\n    return getUttaksdagTilOgMedDato(dayjs.utc(dato).subtract(24, 'hours').toDate());\n}\n\n/**\n * Sjekker om dato er en ukedag, dersom ikke finner den foregående fredag\n * @param dato\n */\nfunction getUttaksdagTilOgMedDato(dato: Date): Date {\n    switch (getUkedag(dato)) {\n        case 6:\n            return dayjs.utc(dato).subtract(24, 'hours').toDate();\n        case 7:\n            return dayjs.utc(dato).subtract(48, 'hours').toDate();\n        default:\n            return dato;\n    }\n}\n\n/**\n * Første gyldige uttaksdag etter dato\n * @param termin\n */\nfunction getUttaksdagEtterDato(dato: Date): Date {\n    return getUttaksdagFraOgMedDato(dayjs.utc(dato).add(24, 'hours').toDate());\n}\n\n/**\n * Sjekker om dato er en ukedag, dersom ikke finner den nærmeste påfølgende mandag\n * @param dato\n */\nfunction getUttaksdagFraOgMedDato(dato: Date): Date {\n    switch (getUkedag(dato)) {\n        case 6:\n            return dayjs.utc(dato).add(48, 'hours').toDate();\n        case 7:\n            return dayjs.utc(dato).add(24, 'hours').toDate();\n        default:\n            return dato;\n    }\n}\n\n/**\n * Legger uttaksdager til en dato og returnerer ny dato\n * @param dato\n * @param uttaksdager\n */\nfunction leggUttaksdagerTilDato(dato: Date, uttaksdager: number): Date {\n    if (erUttaksdag(dato) === false) {\n        throw new Error('leggUttaksdagerTilDato: Dato må være uttaksdag');\n    }\n    let nyDato = dato;\n    let dagteller = 0;\n    let uttaksdageteller = 0;\n    while (uttaksdageteller <= uttaksdager) {\n        const tellerdato = dayjs\n            .utc(dato)\n            .add(dagteller++ * 24, 'hours')\n            .toDate();\n        if (erUttaksdag(tellerdato)) {\n            nyDato = tellerdato;\n            uttaksdageteller++;\n        }\n    }\n    return nyDato;\n}\n\n/**\n * Trekker uttaksdager fra en dato og returnerer ny dato\n * @param dato\n * @param uttaksdager\n */\nfunction trekkUttaksdagerFraDato(dato: Date, uttaksdager: number): Date {\n    if (erUttaksdag(dato) === false) {\n        throw new Error('trekkUttaksdagerFraDato: Dato må være uttaksdag');\n    }\n    let nyDato = dato;\n    let dagteller = 0;\n    let uttaksdageteller = 0;\n    while (uttaksdageteller < Math.abs(uttaksdager)) {\n        const tellerdato = dayjs\n            .utc(dato)\n            .add(--dagteller * 24, 'hours')\n            .toDate();\n        if (erUttaksdag(tellerdato)) {\n            nyDato = tellerdato;\n            uttaksdageteller++;\n        }\n    }\n    return nyDato;\n}\n\n/**\n * Finner antall uttaksdager som er mellom to datoer. Dvs. fra og med startdato, og\n * frem til sluttdato (ikke til og med)\n * @param fra\n * @param til\n */\nfunction getUttaksdagerFremTilDato(fom: Date, tom: Date): number {\n    if (dayjs(fom).isSame(tom, 'day')) {\n        return 0;\n    }\n    if (dayjs(fom).isBefore(tom, 'day')) {\n        return Tidsperioden({ fom, tom }).getAntallUttaksdager() - 1;\n    }\n    return (\n        -1 *\n        (Tidsperioden({\n            fom: tom,\n            tom: fom,\n        }).getAntallUttaksdager() -\n            1)\n    );\n}\n","import { Periode, isUttaksperiode } from 'uttaksplan/types/Periode';\nimport { getFloatFromString } from 'app/utils/numberUtils';\nimport { Perioden } from './Perioden';\n\nexport const finnAntallDagerÅTrekke = (periode: Periode): number => {\n    const dager = Perioden(periode).getAntallUttaksdager();\n    if (isUttaksperiode(periode)) {\n        const periodeErGradert = periode.stillingsprosent !== undefined;\n        const periodeErSamtidigUttak = periode.samtidigUttakProsent !== undefined;\n\n        if (periodeErGradert && periodeErSamtidigUttak) {\n            const graderingsProsent = (100 - getFloatFromString(periode.stillingsprosent)!) / 100;\n\n            return dager * graderingsProsent;\n        } else if (periodeErSamtidigUttak) {\n            return dager * (getFloatFromString(periode.samtidigUttakProsent)! / 100);\n        } else if (periodeErGradert) {\n            const graderingsProsent = (100 - getFloatFromString(periode.stillingsprosent)!) / 100;\n\n            return dager * graderingsProsent;\n        } else {\n            return dager;\n        }\n    }\n    return dager;\n};\n","export enum AttachmentType {\n    OMSORGSOVERTAKELSE = 'omsorgsovertakelse',\n    ADOPSJONSVEDTAK = 'adopsjonsvedtak',\n    TERMINBEKREFTELSE = 'terminbekreftelse',\n    FØDSELSATTEST = 'fødselsattest',\n    ANNEN_INNTEKT = 'anneninntektDokumentasjon',\n    UTSETTELSE_SYKDOM = 'utsettelseSykdomUttaksplan',\n    MORS_AKTIVITET_DOKUMENTASJON = 'morsaktivitetdokumentasjon',\n    OVERFØRING_KVOTE = 'dokumentasjonOverføringAvKvote',\n    ALENEOMSORG = 'dokumentasjonAvAleneomsorg',\n    SEN_ENDRING = 'senEndring',\n    HV_ØVELSE = 'hvØvelse',\n    NAV_TILTAK = 'navTiltak',\n}\n","export enum Forelder {\n    mor = 'mor',\n    farMedmor = 'farMedmor',\n}\n","import dayjs, { Dayjs } from 'dayjs';\nimport { isISODateString } from 'nav-datovelger';\nimport isBetween from 'dayjs/plugin/isBetween';\nimport minMax from 'dayjs/plugin/minMax';\nimport utc from 'dayjs/plugin/utc';\nimport timezone from 'dayjs/plugin/timezone';\nimport advanced from 'dayjs/plugin/advancedFormat';\nimport { IntlShape } from 'react-intl';\nimport { formatDate, formatDateExtended, hasValue, intlUtils, Tidsperiode, TidsperiodeDate } from '@navikt/fp-common';\nimport { SkjemaelementFeil } from 'app/types/SkjemaelementFeil';\nimport { RegistrertBarn } from 'app/types/Person';\nimport { dateToISOString } from '@navikt/sif-common-formik/lib';\nimport { Alder } from 'app/types/Alder';\nimport { Uttaksdagen } from 'app/steps/uttaksplan-info/utils/Uttaksdagen';\nimport {\n    isInfoPeriode,\n    isPeriodeUtenUttak,\n    isUtsettelsesperiode,\n    isUttaksperiode,\n    Periode,\n    Utsettelsesperiode,\n} from 'uttaksplan/types/Periode';\nimport { Perioden } from 'app/steps/uttaksplan-info/utils/Perioden';\nimport UttaksplanInfo, { isFarMedmorFødselBeggeHarRettUttaksplanInfo } from 'app/context/types/UttaksplanInfo';\nimport FeatureToggle from 'app/FeatureToggle';\nimport { isFeatureEnabled } from './toggleUtils';\n\ndayjs.extend(utc);\ndayjs.extend(isBetween);\ndayjs.extend(minMax);\ndayjs.extend(timezone);\ndayjs.extend(advanced);\n\nexport const date4YearsAgo = dayjs().subtract(4, 'year').startOf('day').toDate();\n\nexport const ISOStringToDate = (dateString: string | undefined): Date | undefined => {\n    if (dateString === undefined) {\n        return undefined;\n    }\n    if (isISODateString(dateString) && dayjs(dateString, 'YYYY-MM-DD', true).isValid()) {\n        return dayjs.utc(dateString).toDate();\n    }\n    return undefined;\n};\n\nexport const dateIsWithinRange = (date: Date, minDate: Date, maxDate: Date) => {\n    return dayjs(date).isBetween(minDate, maxDate, 'day', '[]');\n};\n\nconst validateDateInRange = (\n    intl: IntlShape,\n    date: Date | undefined,\n    minDate: Date,\n    maxDate: Date,\n    isFomDate: boolean\n) => {\n    if (date === undefined) {\n        if (isFomDate) {\n            return intlUtils(intl, 'valideringsfeil.fraOgMedDato.gyldigDato');\n        }\n        return intlUtils(intl, 'valideringsfeil.tilOgMedDato.gyldigDato');\n    }\n\n    if (!dateIsWithinRange(date, minDate, maxDate)) {\n        if (isFomDate) {\n            return intlUtils(intl, 'valideringsfeil.dateOutsideRange.fom', {\n                fom: formatDateExtended(minDate),\n                tom: formatDateExtended(maxDate),\n            });\n        }\n\n        return intlUtils(intl, 'valideringsfeil.dateOutsideRange.tom', {\n            fom: formatDateExtended(minDate),\n            tom: formatDateExtended(maxDate),\n        });\n    }\n\n    return undefined;\n};\n\nconst getMeldingOmOverlappendeUtsettelser = (\n    utsettelserIPlan: Utsettelsesperiode[] | undefined,\n    dato: Date | undefined,\n    intl: IntlShape,\n    periodeId: string | undefined\n): string | undefined => {\n    if (dato === undefined || utsettelserIPlan === undefined) {\n        return undefined;\n    }\n    const overlappendeUtsettelsesPerioder = utsettelserIPlan.filter(\n        (up) =>\n            dayjs(dato).isSameOrAfter(up.tidsperiode.fom, 'day') &&\n            dayjs(dato).isSameOrBefore(up.tidsperiode.tom, 'day') &&\n            up.id !== periodeId\n    );\n    if (overlappendeUtsettelsesPerioder.length > 0) {\n        return intlUtils(intl, 'valideringsfeil.overlapperEnUtsettelse', {\n            fom: formatDate(overlappendeUtsettelsesPerioder[0].tidsperiode.fom),\n            tom: formatDate(overlappendeUtsettelsesPerioder[0].tidsperiode.tom),\n        });\n    }\n\n    return undefined;\n};\n\nconst validateFromDateInRange = ({\n    intl,\n    date,\n    minDate,\n    maxDate,\n    errorKey,\n    disableWeekend,\n    periodeId,\n    utsettelserIPlan,\n    toDate,\n}: {\n    intl: IntlShape;\n    date: Date | undefined;\n    minDate: Date;\n    maxDate: Date;\n    errorKey: string;\n    disableWeekend: boolean;\n    periodeId?: string;\n    utsettelserIPlan?: Utsettelsesperiode[];\n    toDate?: Date;\n}): SkjemaelementFeil => {\n    const error = validateDateInRange(intl, date, minDate, maxDate, true);\n\n    if (disableWeekend && (dayjs(date).day() === 0 || dayjs(date).day() === 6)) {\n        return intlUtils(intl, 'valideringsfeil.fraDatoErHelgedag');\n    }\n\n    if (error !== undefined) {\n        return error;\n    }\n\n    if (toDate && dayjs(date).isAfter(toDate, 'day')) {\n        return intlUtils(intl, errorKey);\n    }\n    return getMeldingOmOverlappendeUtsettelser(utsettelserIPlan, date, intl, periodeId);\n};\n\nconst validateToDateInRange = ({\n    intl,\n    date,\n    minDate,\n    maxDate,\n    errorKey,\n    disableWeekend,\n    periodeId,\n    utsettelserIPlan,\n    fromDate,\n}: {\n    intl: IntlShape;\n    date: Date | undefined;\n    minDate: Date;\n    maxDate: Date;\n    errorKey: string;\n    disableWeekend: boolean;\n    periodeId?: string;\n    utsettelserIPlan?: Utsettelsesperiode[];\n    fromDate?: Date;\n}): SkjemaelementFeil => {\n    const error = validateDateInRange(intl, date, minDate, maxDate, false);\n\n    if (error !== undefined) {\n        return error;\n    }\n\n    if (disableWeekend && (dayjs(date).day() === 0 || dayjs(date).day() === 6)) {\n        return intlUtils(intl, 'valideringsfeil.tilDatoErHelgedag');\n    }\n\n    if (fromDate && dayjs(date).isBefore(fromDate, 'day')) {\n        return intlUtils(intl, errorKey);\n    }\n\n    return getMeldingOmOverlappendeUtsettelser(utsettelserIPlan, date, intl, periodeId);\n};\n\nexport const dateRangeValidation = {\n    validateToDateInRange,\n    validateFromDateInRange,\n};\n\nexport const isDateABeforeDateB = (a: string, b: string): boolean => {\n    if (!hasValue(a) || !hasValue(b) || !isISODateString(a) || !isISODateString(b)) {\n        return false;\n    }\n\n    if (dayjs(a).isBefore(b, 'day')) {\n        return true;\n    }\n\n    return false;\n};\n\nexport const isDateToday = (date: string): boolean => {\n    if (dayjs().isSame(date, 'day')) {\n        return true;\n    }\n\n    return false;\n};\n\nexport const isDateTodayOrInTheFuture = (date: string): boolean => {\n    return isDateInTheFuture(date) || isDateToday(date);\n};\n\nexport const isDateInTheFuture = (date: string): boolean => {\n    if (dayjs().isBefore(date, 'day')) {\n        return true;\n    }\n\n    return false;\n};\n\nexport const getEldsteRegistrerteBarn = (registrerteBarn: RegistrertBarn[]): RegistrertBarn => {\n    return registrerteBarn.sort((a, b) =>\n        isDateABeforeDateB(dateToISOString(a.fødselsdato)!, dateToISOString(b.fødselsdato)!) ? 1 : -1\n    )[registrerteBarn.length - 1];\n};\n\nexport const getEldsteDato = (dato: Date[]) => {\n    return dato.sort((a, b) => (isDateABeforeDateB(dateToISOString(a)!, dateToISOString(b)!) ? 1 : -1))[\n        dato.length - 1\n    ];\n};\n\ntype VarighetFormat = 'full' | 'normal';\n\nexport const getUkerOgDagerFromDager = (dager: number): { uker: number; dager: number } => {\n    const uker = Math.floor(dager / 5);\n    return {\n        dager: dager - uker * 5,\n        uker,\n    };\n};\n\nexport const getVarighetString = (antallDager: number, intl: IntlShape, format: VarighetFormat = 'full'): string => {\n    const { uker, dager } = getUkerOgDagerFromDager(Math.abs(antallDager));\n    const dagerStr = intl.formatMessage(\n        { id: 'varighet.dager' },\n        {\n            dager,\n        }\n    );\n    if (uker === 0) {\n        return dagerStr;\n    }\n    const ukerStr = intl.formatMessage({ id: 'varighet.uker' }, { uker });\n    if (dager > 0) {\n        return `${ukerStr}${intl.formatMessage({\n            id: `varighet.separator--${format}`,\n        })}${dagerStr}`;\n    }\n    return ukerStr;\n};\n\nexport const formaterDato = (dato: string | Date | undefined, datoformat?: string): string => {\n    return dayjs(dato).format(datoformat || 'dddd D. MMMM YYYY');\n};\n\nexport const formaterDatoUtenDag = (dato: string | Date): string => {\n    return dayjs(dato).format('D. MMMM YYYY');\n};\n\ntype DateValue = Date | undefined;\n\nexport const dateIsSameOrBefore = (date: DateValue, otherDate: DateValue): boolean => {\n    if (date && otherDate) {\n        return dayjs(date).isSameOrBefore(otherDate, 'day');\n    }\n    return true;\n};\nexport const dateIsSameOrAfter = (date: DateValue, otherDate: DateValue): boolean => {\n    if (date && otherDate) {\n        return dayjs(date).isSameOrAfter(otherDate, 'day');\n    }\n    return true;\n};\n\nexport const formaterDatoKompakt = (dato: Date): string => {\n    return formaterDato(dato, 'DD.MM.YYYY');\n};\n\nexport const findEldsteDato = (dateArray: Date[]): DateValue => {\n    if (dateArray.length > 0) {\n        return dayjs.min(dateArray.map((date: Date) => dayjs(date))).toDate();\n    }\n    return undefined;\n};\n\nexport const getAlderFraDato = (fødselsdato: Date): Alder => {\n    const idag = dayjs();\n    const dato = dayjs(fødselsdato);\n\n    const år = idag.diff(dato, 'year');\n    dato.add(år, 'years');\n    const måneder = idag.diff(dato, 'months');\n    dato.add(måneder, 'months');\n    const dager = idag.diff(dato, 'days');\n\n    return {\n        år,\n        måneder,\n        dager,\n    };\n};\n\nexport const måned = (dato: Dayjs): string => {\n    return dato.format('MMMM');\n};\n\nexport const måned3bokstaver = (dato: Dayjs): string => {\n    return dato.format('MMM').substr(0, 3);\n};\n\nexport const år = (dato: Dayjs): string => {\n    return dato.format('YYYY');\n};\n\nexport const convertTidsperiodeToTidsperiodeDate = (tidsperiode: Tidsperiode): TidsperiodeDate => {\n    return {\n        fom: ISOStringToDate(tidsperiode.fom)!,\n        tom: ISOStringToDate(tidsperiode.tom)!,\n    };\n};\n\nexport const getRelevantFamiliehendelseDato = (\n    termindato: string | undefined,\n    fødselsdato: string | undefined,\n    omsorgsovertakelsesdato: string | undefined\n): string => {\n    if (omsorgsovertakelsesdato !== undefined) {\n        return omsorgsovertakelsesdato;\n    } else if (fødselsdato !== undefined) {\n        return fødselsdato;\n    } else if (termindato !== undefined) {\n        return termindato;\n    } else {\n        throw new Error('Mangler fødselsdato/termindato/adopsjonsdato for barnet.');\n    }\n};\n\nexport const førsteOktober2021ReglerGjelder = (familiehendelsesdato: Date): boolean => {\n    const førsteOktober2021 = new Date('2021-10-01');\n\n    return (\n        dayjs(familiehendelsesdato).isSameOrAfter(førsteOktober2021, 'day') &&\n        dayjs(new Date()).isSameOrAfter(førsteOktober2021, 'day')\n    );\n};\n\nexport const andreAugust2022ReglerGjelder = (familiehendelsesdato: Date): boolean => {\n    const andreAugust2022 = new Date('2022-08-02');\n    const førsteJanuar2022 = new Date('2022-01-01');\n    if (isFeatureEnabled(FeatureToggle.wlbGjelderFraFørsteJanuar2022)) {\n        return dayjs(familiehendelsesdato).isSameOrAfter(førsteJanuar2022, 'day');\n    }\n    return (\n        dayjs(familiehendelsesdato).isSameOrAfter(andreAugust2022, 'day') &&\n        dayjs(new Date()).isSameOrAfter(andreAugust2022, 'day')\n    );\n};\n\nexport const getToTetteReglerGjelder = (\n    familiehendelsesdato: Date | undefined,\n    familiehendelsesdatoNesteBarn: Date | undefined\n): boolean => {\n    if (familiehendelsesdato === undefined || familiehendelsesdatoNesteBarn === undefined) {\n        return false;\n    }\n    const familiehendelsePlus48Uker = dayjs(familiehendelsesdato).add(48, 'week');\n    return (\n        andreAugust2022ReglerGjelder(familiehendelsesdato) &&\n        andreAugust2022ReglerGjelder(familiehendelsesdatoNesteBarn) &&\n        dayjs(familiehendelsePlus48Uker).isAfter(familiehendelsesdatoNesteBarn, 'day')\n    );\n};\n\nexport const skalFarUtsetteEtterMorSinSisteUttaksdag = (\n    farSinFørsteUttaksdag: Date,\n    morsSisteUttaksdag: Date\n): boolean => {\n    return dayjs(farSinFørsteUttaksdag).isAfter(Uttaksdagen(morsSisteUttaksdag).neste(), 'day');\n};\n\nexport const getEndringstidspunkt = (\n    opprinneligPlan: Periode[] | undefined,\n    updatedPlan: Periode[],\n    erEndringssøknad: boolean\n): Date | undefined => {\n    if (!erEndringssøknad) {\n        return undefined;\n    }\n\n    const søkerensOpprinneligePlan =\n        opprinneligPlan === undefined ? undefined : opprinneligPlan.filter((p) => !isInfoPeriode(p));\n    const søkerensUpdatedPlan = updatedPlan.filter((p) => !isInfoPeriode(p));\n\n    let endringstidspunktNyPlan: Date | undefined;\n    let endringstidspunktOpprinneligPlan: Date | undefined;\n    if (søkerensOpprinneligePlan) {\n        søkerensUpdatedPlan.forEach((periode, index) => {\n            if (endringstidspunktNyPlan) {\n                return endringstidspunktNyPlan;\n            }\n\n            const { fom } = periode.tidsperiode;\n            const opprinneligPeriodeMedSammeFom = søkerensOpprinneligePlan.find((opprinneligPeriode) =>\n                dayjs(opprinneligPeriode.tidsperiode.fom).isSame(fom, 'day')\n            );\n\n            if (opprinneligPeriodeMedSammeFom !== undefined) {\n                const perioderErLikeUtenTidSjekk = Perioden(periode).erLik(opprinneligPeriodeMedSammeFom, false, true);\n                if (\n                    !perioderErLikeUtenTidSjekk ||\n                    (perioderErLikeUtenTidSjekk &&\n                        Perioden(periode).slutterEtter(opprinneligPeriodeMedSammeFom.tidsperiode.tom))\n                ) {\n                    endringstidspunktNyPlan = fom;\n                }\n            }\n\n            if (opprinneligPeriodeMedSammeFom === undefined) {\n                endringstidspunktNyPlan = fom;\n            }\n\n            if (opprinneligPeriodeMedSammeFom !== undefined && søkerensUpdatedPlan.length - 1 === index) {\n                if (!Perioden(periode).erLik(opprinneligPeriodeMedSammeFom, true, true)) {\n                    endringstidspunktNyPlan = fom;\n                }\n            }\n\n            //Hvis endringstidspunktet er etter siste periode i opprinnelig plan, og 'periode' er periode uten uttak, finn første uttak/utsettelse etter endringstidspunktet\n            if (\n                endringstidspunktNyPlan &&\n                isPeriodeUtenUttak(periode) &&\n                dayjs(endringstidspunktNyPlan).isAfter(\n                    søkerensOpprinneligePlan[søkerensOpprinneligePlan.length - 1].tidsperiode.tom\n                )\n            ) {\n                const førsteUttakEllerUtsettelseEtterEndring = søkerensUpdatedPlan.find(\n                    (p) =>\n                        (isUttaksperiode(p) || isUtsettelsesperiode(p)) &&\n                        dayjs(p.tidsperiode.fom).isAfter(endringstidspunktNyPlan)\n                );\n                endringstidspunktNyPlan =\n                    førsteUttakEllerUtsettelseEtterEndring !== undefined\n                        ? førsteUttakEllerUtsettelseEtterEndring.tidsperiode.fom\n                        : endringstidspunktNyPlan;\n            }\n        });\n\n        søkerensOpprinneligePlan.forEach((periode) => {\n            if (endringstidspunktOpprinneligPlan) {\n                return endringstidspunktOpprinneligPlan;\n            }\n\n            const { fom } = periode.tidsperiode;\n            const nyPeriodeMedSammeFom = søkerensUpdatedPlan.find((nyPeriode) =>\n                dayjs(nyPeriode.tidsperiode.fom).isSame(fom, 'day')\n            );\n\n            if (nyPeriodeMedSammeFom !== undefined && !Perioden(periode).erLik(nyPeriodeMedSammeFom, false, true)) {\n                endringstidspunktOpprinneligPlan = nyPeriodeMedSammeFom.tidsperiode.fom;\n            }\n\n            if (nyPeriodeMedSammeFom === undefined) {\n                endringstidspunktOpprinneligPlan = fom;\n            }\n        });\n    } else {\n        // Bruker har slettet opprinnelig plan, send med alt\n        if (søkerensUpdatedPlan.length > 0) {\n            return søkerensUpdatedPlan[0].tidsperiode.fom;\n        }\n    }\n\n    return getOldestDate(endringstidspunktNyPlan, endringstidspunktOpprinneligPlan);\n};\n\nconst getOldestDate = (\n    endringstidspunktNyPlan: Date | undefined,\n    endringstidspunktOpprinneligPlan: Date | undefined\n): Date | undefined => {\n    if (endringstidspunktNyPlan === undefined && endringstidspunktOpprinneligPlan === undefined) {\n        return undefined;\n    }\n\n    if (endringstidspunktNyPlan !== undefined && endringstidspunktOpprinneligPlan === undefined) {\n        return endringstidspunktNyPlan;\n    }\n\n    if (endringstidspunktNyPlan === undefined && endringstidspunktOpprinneligPlan !== undefined) {\n        return endringstidspunktOpprinneligPlan;\n    }\n\n    return dayjs(endringstidspunktNyPlan).isSameOrBefore(dayjs(endringstidspunktOpprinneligPlan))\n        ? endringstidspunktNyPlan\n        : endringstidspunktOpprinneligPlan;\n};\n\nexport const getMorsSisteDag = (uttaksplanInfo: UttaksplanInfo | undefined): Date | undefined => {\n    if (!uttaksplanInfo) {\n        return undefined;\n    }\n\n    if (isFarMedmorFødselBeggeHarRettUttaksplanInfo(uttaksplanInfo)) {\n        return ISOStringToDate(uttaksplanInfo.morsSisteDag);\n    }\n};\n\nexport const dateIsBetween = (date: DateValue, fom: DateValue, tom: DateValue): boolean =>\n    dayjs(date).isBetween(fom, tom, 'day', '[]');\n\nexport const tidperiodeOverlapperDato = (tidsperiode: TidsperiodeDate, dato: Date): boolean => {\n    return dayjs(tidsperiode.fom).isBefore(dato, 'day') && dayjs(tidsperiode.tom).isSameOrAfter(dato, 'day');\n};\n","import FeatureToggle from '../FeatureToggle';\nimport Environment from '../Environment';\n\nexport const isFeatureEnabled = (feature: FeatureToggle): boolean => {\n    if (Environment[feature] && Environment[feature].toLowerCase() === 'on') {\n        return true;\n    }\n    return false;\n};\n","import AdopsjonStartdatoValg from 'app/steps/uttaksplan-info/components/scenarios/mor-far-adopsjon/adopsjonStartdatoValg';\n\n/* eslint-disable @typescript-eslint/no-empty-interface */\ninterface UttaksplanInfo {}\n\nexport interface MorFødselUttaksplanInfo extends UttaksplanInfo {\n    permisjonStartdato: string;\n    skalIkkeHaUttakFørTermin: boolean;\n    fellesperiodeukerMor: number | undefined;\n}\n\nexport interface MorFarAdopsjonUttaksplanInfo extends UttaksplanInfo {\n    harAnnenForelderSøktFP: boolean;\n    startdatoAdopsjonValg: AdopsjonStartdatoValg;\n    annenStartdatoAdopsjon: string;\n    annenForeldersSisteDag: string;\n    søkersFørsteDag: string;\n    antallUkerFellesperiode: string;\n    antallDagerFellesperiode: string;\n    fellesperiodeukerMor: number | undefined;\n}\n\nexport interface FarMedmorAleneomsorgFødselUttaksplanInfo extends UttaksplanInfo {\n    startdatoUttak: string;\n    fellesperiodeukerMor: number | undefined;\n}\n\nexport interface FarMedmorFødselOgMorHarIkkeRettUttaksplanInfo extends UttaksplanInfo {\n    permisjonStartdato: string;\n}\n\nexport interface FarMedmorFørstegangssøknadMedAnnenPartUttaksplanInfo extends UttaksplanInfo {\n    permisjonStartdato: string;\n}\n\nexport interface FarMedmorFødselBeggeHarRettUttaksplanInfo extends UttaksplanInfo {\n    morsSisteDag: string;\n    farMedmorsFørsteDag: string;\n    antallUkerFellesperiode: string;\n    antallDagerFellesperiode: string;\n}\n\nexport interface MorFarAdopsjonAnnenForelderHarRettIEØSUttaksplanInfo extends UttaksplanInfo {\n    startdatoAdopsjonValg: AdopsjonStartdatoValg;\n    dekningsgrad: string;\n    annenStartdatoAdopsjon: string | undefined;\n}\n\nexport interface MorFarFødselAnnenForelderHarRettIEØSUttaksplanInfo extends UttaksplanInfo {\n    permisjonStartdato: string;\n    skalIkkeHaUttakFørTermin: boolean | undefined;\n    dekningsgrad: string;\n}\n\nexport const isFarMedmorFødselBeggeHarRettUttaksplanInfo = (\n    uttaksplanInfo: UttaksplanInfo\n): uttaksplanInfo is FarMedmorFødselBeggeHarRettUttaksplanInfo => {\n    return 'morsSisteDag' in uttaksplanInfo;\n};\n\nexport default UttaksplanInfo;\n","import { erMyndig } from '@navikt/fp-common';\nimport Arbeidsforhold from 'app/types/Arbeidsforhold';\nimport Person, { RegistrertAnnenForelder, RegistrertBarn } from 'app/types/Person';\nimport { Søkerinfo } from 'app/types/Søkerinfo';\nimport { SøkerinfoDTO, SøkerinfoDTOArbeidsforhold, SøkerinfoDTOBarn, SøkerinfoDTOSøker } from 'app/types/SøkerinfoDTO';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport timezone from 'dayjs/plugin/timezone';\nimport { ISOStringToDate } from './dateUtils';\n\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\nconst mapArbeidsforholdDTOToArbeidsforhold = (\n    arbeidsforhold: SøkerinfoDTOArbeidsforhold[] | undefined\n): Arbeidsforhold[] => {\n    if (!arbeidsforhold) {\n        return [];\n    }\n\n    return arbeidsforhold.map((arbforhold) => {\n        return {\n            arbeidsgiverId: arbforhold.arbeidsgiverId,\n            arbeidsgiverIdType: arbforhold.arbeidsgiverIdType,\n            arbeidsgiverNavn: arbforhold.arbeidsgiverNavn,\n            fom: dayjs.utc(arbforhold.fom).toDate(),\n            stillingsprosent: arbforhold.stillingsprosent,\n            tom: arbforhold.tom ? dayjs.utc(arbforhold.tom).toDate() : undefined,\n        };\n    });\n};\n\nconst mapSøkerinfoDTOSøkerToPerson = (personDTO: SøkerinfoDTOSøker): Person => {\n    return {\n        erMyndig: erMyndig(personDTO.fødselsdato),\n        etternavn: personDTO.etternavn,\n        fornavn: personDTO.fornavn,\n        fnr: personDTO.fnr,\n        fødselsdato: dayjs.utc(personDTO.fødselsdato).toDate(),\n        ikkeNordiskEøsLand: personDTO.ikkeNordiskEøsLand,\n        kjønn: personDTO.kjønn,\n        bankkonto: personDTO.bankkonto,\n    };\n};\n\nconst mapSøkerinfoDTOBarnToRegistrertBarn = (registrerteBarn: SøkerinfoDTOBarn[] | undefined): RegistrertBarn[] => {\n    if (!registrerteBarn) {\n        return [];\n    }\n\n    return registrerteBarn.map((barn) => {\n        const { annenForelder } = barn;\n        const oppgittAnnenForelder: RegistrertAnnenForelder | undefined = annenForelder\n            ? {\n                  etternavn: annenForelder.etternavn,\n                  fnr: annenForelder.fnr,\n                  fornavn: annenForelder.fornavn,\n              }\n            : undefined;\n\n        return {\n            etternavn: barn.etternavn,\n            fnr: barn.fnr,\n            fornavn: barn.fornavn,\n            mellomnavn: barn.mellomnavn,\n            fødselsdato: dayjs.utc(barn.fødselsdato).toDate(),\n            kjønn: barn.kjønn,\n            annenForelder: oppgittAnnenForelder,\n            dødsdato: ISOStringToDate(barn.dødsdato),\n        };\n    });\n};\n\nconst mapSøkerinfoDTOToSøkerinfo = (søkerinfoDTO: SøkerinfoDTO): Søkerinfo => {\n    const arbeidsforhold = mapArbeidsforholdDTOToArbeidsforhold(søkerinfoDTO.arbeidsforhold);\n    const person = mapSøkerinfoDTOSøkerToPerson(søkerinfoDTO.søker);\n    const registrerteBarn = mapSøkerinfoDTOBarnToRegistrertBarn(søkerinfoDTO.søker.barn);\n\n    return {\n        arbeidsforhold,\n        person,\n        registrerteBarn,\n    };\n};\n\nexport default mapSøkerinfoDTOToSøkerinfo;\n","import { hasValue } from '@navikt/fp-common';\n\nconst onlyNumbersRegExp = /^[0-9]*$/;\n\nconst getMod11 = (strValue: string): number => {\n    let checkNbr = 2;\n    let mod = 0;\n\n    for (let i = strValue.length - 2; i >= 0; --i) {\n        mod += parseInt(strValue.charAt(i), 10) * checkNbr;\n        if (++checkNbr > 7) {\n            checkNbr = 2;\n        }\n    }\n    const result = 11 - (mod % 11);\n    return result === 11 ? 0 : result;\n};\n\nconst er9Tall = (orgnr: string): boolean => {\n    return onlyNumbersRegExp.test(orgnr) && orgnr.length === 9;\n};\n\nconst starterPå8Eller9 = (orgnr: string): boolean => {\n    return orgnr.charAt(0) === '8' || orgnr.charAt(0) === '9';\n};\n\nexport const erGyldigNorskOrgnummer = (orgnr: string): boolean => {\n    if (!orgnr || er9Tall(orgnr) === false || starterPå8Eller9(orgnr) === false || orgnr === '999999999') {\n        return false;\n    }\n    return getMod11(orgnr) === parseInt(orgnr.charAt(8), 10);\n};\n\nexport const numberHasValue = (num: string): boolean => {\n    if (!hasValue(num) || num.trim().length === 0) {\n        return false;\n    }\n\n    return true;\n};\n\nconst numberRegExp = RegExp(/^[-]?[0-9,.\\s]*$/);\n\nexport const trimNumberValue = (value: string): string => {\n    return value.replace(/,/g, '.').replace(/\\s/g, '');\n};\n\nexport const getFloatFromString = (value: string | undefined): number | undefined => {\n    if (value !== undefined && value !== null && value.length > 0 && numberRegExp.test(value)) {\n        const trimmedValue = trimNumberValue(value);\n        const numberOfPoints = (trimmedValue.match(/\\./g) || []).length;\n        if (numberOfPoints > 1) {\n            return undefined;\n        }\n        return parseFloat(trimmedValue);\n    }\n    return undefined;\n};\n","import { usynligeCharsRegex } from './validationUtil';\n\nexport const replaceInvisibleCharsWithSpace = (inputString: string): string => {\n    return inputString.replace(usynligeCharsRegex, '\\u0020');\n};\n\nexport const capitalizeFirstLetter = (s: string): string => {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n};\n","import { hasValue, intlUtils } from '@navikt/fp-common';\nimport { SkjemaelementFeil } from 'app/types/SkjemaelementFeil';\nimport { IntlShape } from 'react-intl';\nimport { isFødselsnummerFormatValid, isSixteenOrOlder } from './validation/fødselsnummer';\n\nconst textRegex =\n    // eslint-disable-next-line no-misleading-character-class\n    /^[\\u034f0-9a-zA-ZÁáĄąÂâĀāĂăßČčĆćÇçĎďĐđÐðĔĕÉéĘęĖėÈèËëÊêĒēĢģİiĮįÍíÎîÏïĪīĶķŁłŊŋŇňŃńŅņÑñÞþŠšŚśŞşŤťŦŧŢţŲųŪūÚúŮůÝýŽžŹźŻżÕõÔôÓóÖöÜüÄäŒœÆæØøÅå .'\\-/\\n\\r%§\\\\!?@_()+:;,=\"&\\t\\u00a0\\u00ad\\u061c\\u115f\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u200b\\u200c\\u200d\\u200e\\u200f\\u202d\\u202f\\u205f\\u2060\\u2061\\u2062\\u2063\\u2064\\u206a\\u206b\\u206c\\u206d\\u206e\\u206f\\u3000\\u2800\\u3164\\ufeff\\uffa0\\u1160]*$/;\nconst textGyldigRegex =\n    // eslint-disable-next-line no-misleading-character-class\n    /[\\u034f0-9a-zA-ZÁáĄąÂâĀāĂăßČčĆćÇçĎďĐđÐðĔĕÉéĘęĖėÈèËëÊêĒēĢģİiĮįÍíÎîÏïĪīĶķŁłŊŋŇňŃńŅņÑñÞþŠšŚśŞşŤťŦŧŢţŲųŪūÚúŮůÝýŽžŹźŻżÕõÔôÓóÖöÜüÄäŒœÆæØøÅå .'\\-/\\n\\r%§\\\\!?@_()+:;,=\"&\\t\\u00a0\\u00ad\\u061c\\u115f\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u200b\\u200c\\u200d\\u200e\\u200f\\u202d\\u202f\\u205f\\u2060\\u2061\\u2062\\u2063\\u2064\\u206a\\u206b\\u206c\\u206d\\u206e\\u206f\\u3000\\u2800\\u3164\\ufeff\\uffa0\\u1160]*/g;\nexport const usynligeCharsRegex =\n    // eslint-disable-next-line no-misleading-character-class\n    /[\\u034f\\t\\u00a0\\u00ad\\u061c\\u115f\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u200b\\u200c\\u200d\\u200e\\u200f\\u202d\\u202f\\u205f\\u2060\\u2061\\u2062\\u2063\\u2064\\u206a\\u206b\\u206c\\u206d\\u206e\\u206f\\u3000\\u2800\\u3164\\ufeff\\uffa0\\u1160]/g;\n\nexport const validateFødselsnummer =\n    (intl: IntlShape, søkersFødselsnummer: string, erUtenlandskFnr?: boolean) =>\n    (fnr: string): string | undefined => {\n        if (erUtenlandskFnr) {\n            if (fnr === undefined || fnr.trim() === '') {\n                return intlUtils(intl, 'valideringsfeil.fødselsnummer.required');\n            }\n\n            return undefined;\n        }\n\n        if (fnr === søkersFødselsnummer) {\n            return intlUtils(intl, 'valideringsfeil.fødselsnummer.ugyldigEgetFødselsnummer');\n        }\n\n        const validFnrResult = isFødselsnummerFormatValid(fnr);\n\n        if (!erUtenlandskFnr && !isSixteenOrOlder(fnr, validFnrResult) && validFnrResult === 'fnr') {\n            return intlUtils(intl, 'valideringsfeil.fødselsnummer.underSeksten');\n        }\n\n        return validFnrResult === 'fnr' || validFnrResult === 'dnr' || validFnrResult === 'hnr'\n            ? undefined\n            : intlUtils(intl, 'valideringsfeil.fødselsnummer.ugyldigFødselsnummer');\n    };\n\nexport const validateRequiredField = (value: any, label: string, intl: IntlShape): SkjemaelementFeil => {\n    if (!hasValue(value) || (typeof value === 'string' && value.trim() === '')) {\n        return intlUtils(intl, 'valideringsfeil.inputfelt.required', { inputFeltLabel: label });\n    }\n    return undefined;\n};\n\nexport const validateRequiredTextInputField =\n    (feltNavn: string, intl: IntlShape) =>\n    (value: string): SkjemaelementFeil => {\n        const requiredFieldIsEmptyError = validateRequiredField(value, feltNavn, intl);\n        if (requiredFieldIsEmptyError) {\n            return requiredFieldIsEmptyError;\n        }\n\n        return validateTextInputField(value, feltNavn, intl);\n    };\n\nexport const getIllegalChars = (value: any): string => {\n    const kunUgyldigeTegn = value.replace(textGyldigRegex, '');\n    const ugyldigStringSet = new Set(kunUgyldigeTegn.split(''));\n    return Array.from(ugyldigStringSet).join('');\n};\n\nexport const getIllegalCharsErrorMessage = (value: any, feltNavn: string, intl: IntlShape): string => {\n    const ugyldigeTegn = getIllegalChars(value).replace(/[\\t]/g, 'Tabulatortegn');\n    return intlUtils(intl, 'valideringsfeil.fritekst.kanIkkeInneholdeTegn', {\n        feltNavn: feltNavn,\n        ugyldigeTegn: ugyldigeTegn,\n    });\n};\n\nexport const validateTextHasLegalChars = (value: any): boolean => textRegex.test(value);\n\nexport const validateTextInputField = (value: any, feltNavn: string, intl: IntlShape): SkjemaelementFeil => {\n    if (!validateTextHasLegalChars(value)) {\n        return getIllegalCharsErrorMessage(value, feltNavn, intl);\n    }\n    return undefined;\n};\n","import dayjs from 'dayjs';\nimport validator from '@navikt/fnrvalidator';\n\ntype FødselsnummerValidationResult = false | 'fnr' | 'dnr' | 'hnr';\nexport const isFødselsnummerFormatValid = (fnr: string): FødselsnummerValidationResult => {\n    const result = validator.idnr(fnr);\n\n    if (result.status !== 'valid') {\n        return false;\n    }\n\n    return result.type;\n};\n\nexport const isSixteenOrOlder = (fnr: string, isFødselsnummerValid: FødselsnummerValidationResult): boolean => {\n    const dato =\n        isFødselsnummerValid === 'dnr' ? `${Number(fnr.substr(0, 1)) - 4}${fnr.substr(1, 1)}` : fnr.substr(0, 2);\n    const mnd = fnr.substr(2, 2);\n    const år = fnr.substr(4, 2);\n\n    let fødselsdato = dayjs(`${dato}-${mnd}-${år}`, 'DD-MM-YY');\n\n    if (fødselsdato.get('year') > dayjs().get('year')) {\n        fødselsdato = fødselsdato.subtract(100, 'year');\n    }\n\n    if (!fødselsdato.isValid()) {\n        return false;\n    }\n\n    return fødselsdato.isBefore(dayjs().subtract(16, 'year'), 'day');\n};\n","import { isValidTidsperiode } from 'app/steps/uttaksplan-info/utils/Tidsperioden';\nimport { Uttaksdagen } from 'app/steps/uttaksplan-info/utils/Uttaksdagen';\nimport { Forelder } from 'app/types/Forelder';\nimport dayjs from 'dayjs';\nimport { isOverføringsperiode, isUttaksperiode, Periode, Periodetype, Uttaksperiode } from 'uttaksplan/types/Periode';\nimport { StønadskontoType } from 'uttaksplan/types/StønadskontoType';\nimport { andreAugust2022ReglerGjelder, tidperiodeOverlapperDato } from './dateUtils';\nimport { intlUtils, TidsperiodeDate } from '@navikt/fp-common';\nimport { finnAntallDagerÅTrekke } from 'app/steps/uttaksplan-info/utils/uttaksPlanStatus';\nimport { Situasjon } from 'app/types/Situasjon';\nimport { IntlShape } from 'react-intl';\n\nexport const ANTALL_UTTAKSDAGER_FAR_MEDMOR_RUNDT_FØDSEL = 10;\nconst ANTALL_DAGER_TO_UKER = 2 * 7;\nconst ANTALL_DAGER_SEKS_UKER = 6 * 7;\n\nexport const gjelderWLBReglerFarMedmorRundtFødsel = (\n    familiehendelsesdato: Date,\n    søkerErFarEllerMedmor: boolean,\n    morHarRett: boolean,\n    situasjon: Situasjon\n) => {\n    const gjelderWLB = andreAugust2022ReglerGjelder(familiehendelsesdato);\n    return gjelderWLB && søkerErFarEllerMedmor && morHarRett && situasjon === 'fødsel';\n};\n\nexport const isUttaksperiodeFarMedmorMedValgForUttakRundtFødsel = (periode: Periode): boolean => {\n    return (\n        isUttaksperiode(periode) &&\n        periode.forelder === Forelder.farMedmor &&\n        periode.konto === StønadskontoType.Fedrekvote &&\n        !!periode.erMorForSyk === false &&\n        periode.morsAktivitetIPerioden === undefined &&\n        !!periode.ønskerFlerbarnsdager === false &&\n        periode.ønskerSamtidigUttak === true\n    );\n};\n\nexport const isUttaksperiodeFarMedmorPgaFødsel = (\n    periode: Periode,\n    familiehendelsesdato: Date,\n    termindato: Date | undefined\n): boolean => {\n    return (\n        isUttaksperiodeFarMedmorMedValgForUttakRundtFødsel(periode) &&\n        starterTidsperiodeInnenforToUkerFørFødselTilSeksUkerEtterFødsel(\n            periode.tidsperiode,\n            familiehendelsesdato,\n            termindato\n        )\n    );\n};\n\nexport const isUttaksperiodeBareFarMedmorHarRett = (periode: Periode, morHarRett: boolean): boolean => {\n    return isUttaksperiode(periode) && periode.forelder === Forelder.farMedmor && !morHarRett;\n};\n\nexport const getFørsteUttaksdag2UkerFørFødsel = (familiehendelsesdato: Date, termindato: Date | undefined): Date => {\n    const terminEllerFamHendelsesdatoMinusToUker =\n        termindato !== undefined\n            ? dayjs(termindato).subtract(ANTALL_DAGER_TO_UKER, 'day')\n            : dayjs(familiehendelsesdato).subtract(ANTALL_DAGER_TO_UKER, 'day');\n    const datoÅRegneFra = dayjs.min(terminEllerFamHendelsesdatoMinusToUker, dayjs(familiehendelsesdato));\n    return Uttaksdagen(datoÅRegneFra.toDate()).denneEllerNeste();\n};\n\nexport const getSisteUttaksdag6UkerEtterFødsel = (familiehendelsesdato: Date): Date => {\n    const førsteUttaksdagForPeriodeEtterFødsel = Uttaksdagen(familiehendelsesdato).denneEllerNeste();\n    return Uttaksdagen(\n        dayjs(førsteUttaksdagForPeriodeEtterFødsel).add(ANTALL_DAGER_SEKS_UKER, 'day').toDate()\n    ).forrige();\n};\n\nexport const starterTidsperiodeEtter2UkerFørFødsel = (\n    tidsperiode: any,\n    familiehendelsesdato: Date,\n    termindato: Date | undefined\n): boolean => {\n    const førsteUttaksdagToUkerFørFødsel = getFørsteUttaksdag2UkerFørFødsel(familiehendelsesdato, termindato);\n    return dayjs(tidsperiode.fom).isSameOrAfter(førsteUttaksdagToUkerFørFødsel, 'day');\n};\n\nexport const starterUttaksperiodeFørFødsel = (periode: Periode, familiehendelsesdato: Date): boolean => {\n    return isUttaksperiode(periode) && dayjs(periode.tidsperiode.fom).isBefore(familiehendelsesdato, 'day');\n};\n\nexport const slutterTidsperiodeInnen6UkerEtterFødsel = (tidsperiode: any, familiehendelsesdato: Date): boolean => {\n    const sisteUttaksdag6UkerEtterFødsel = getSisteUttaksdag6UkerEtterFødsel(familiehendelsesdato);\n    return dayjs(tidsperiode.tom).isSameOrBefore(sisteUttaksdag6UkerEtterFødsel, 'day');\n};\n\nexport const starterTidsperiodeInnenforToUkerFørFødselTilSeksUkerEtterFødsel = (\n    tidsperiode: TidsperiodeDate,\n    familiehendelsesdato: Date,\n    termindato: Date | undefined\n) => {\n    return (\n        starterTidsperiodeEtter2UkerFørFødsel(tidsperiode, familiehendelsesdato, termindato) &&\n        dayjs(tidsperiode.fom).isSameOrBefore(getSisteUttaksdag6UkerEtterFødsel(familiehendelsesdato), 'day')\n    );\n};\n\nexport const getFarMedmorUttakRundtFødsel = (\n    perioder: Periode[],\n    familiehendelsesdato: Date,\n    termindato: Date | undefined\n): Periode[] => {\n    return perioder.filter((p) => isUttaksperiodeFarMedmorPgaFødsel(p, familiehendelsesdato, termindato));\n};\n\nexport const erFarMedmorSinWLBTidsperiodeRundtFødsel = (\n    tidsperiode: TidsperiodeDate,\n    familiehendelsesdato: Date,\n    periodetype: Periodetype,\n    konto: StønadskontoType,\n    erFarEllerMedmor: boolean,\n    termindato: Date | undefined,\n    situasjon: Situasjon\n): boolean => {\n    return (\n        tidsperiode !== undefined &&\n        isValidTidsperiode(tidsperiode) &&\n        erFarEllerMedmor &&\n        situasjon === 'fødsel' &&\n        andreAugust2022ReglerGjelder(familiehendelsesdato) &&\n        periodetype === Periodetype.Uttak &&\n        (konto === StønadskontoType.Fedrekvote ||\n            konto === StønadskontoType.Foreldrepenger ||\n            konto === StønadskontoType.AktivitetsfriKvote) &&\n        starterTidsperiodeInnenforToUkerFørFødselTilSeksUkerEtterFødsel(tidsperiode, familiehendelsesdato, termindato)\n    );\n};\n\nexport const getLengdePåForeslåttWLBUttakFarMedmor = (familiehendelsesdato: Date, startDatoUttak: Date): number => {\n    const sisteUttaksDagFørFødsel = getSisteUttaksdag6UkerEtterFødsel(familiehendelsesdato);\n    const antallUttaksdagerFraStartDato = finnAntallDagerÅTrekke({\n        tidsperiode: { fom: startDatoUttak, tom: sisteUttaksDagFørFødsel },\n    } as Periode);\n    return Math.min(antallUttaksdagerFraStartDato, ANTALL_UTTAKSDAGER_FAR_MEDMOR_RUNDT_FØDSEL);\n};\n\nexport const appendPeriodeNavnHvisUttakRundtFødselFarMedmor = (\n    intl: IntlShape,\n    periodeNavn: string,\n    periode: Periode,\n    situasjon: Situasjon,\n    familiehendelsesdato: Date,\n    termindato: Date | undefined\n): string => {\n    return situasjon === 'fødsel' && isUttaksperiodeFarMedmorPgaFødsel(periode, familiehendelsesdato, termindato)\n        ? periodeNavn + intlUtils(intl, 'rundtFødsel')\n        : periodeNavn;\n};\n\nexport const farMedmorsTidsperiodeSkalSplittesPåFamiliehendelsesdato = (\n    periode: Periode,\n    familiehendelsesdato: Date,\n    morHarRett: boolean,\n    termindato: Date | undefined\n) => {\n    return (\n        (isUttaksperiodeFarMedmorPgaFødsel(periode, familiehendelsesdato, termindato) ||\n            isUttaksperiodeBareFarMedmorHarRett(periode, morHarRett)) &&\n        tidperiodeOverlapperDato(periode.tidsperiode, familiehendelsesdato)\n    );\n};\n\nexport const getPerioderMedUttakRundtFødsel = (\n    uttaksplan: Periode[],\n    familiehendelsesdato: Date,\n    termindato: Date | undefined\n): Uttaksperiode[] => {\n    return uttaksplan.filter(\n        (p) =>\n            (isUttaksperiode(p) || isOverføringsperiode(p)) &&\n            starterTidsperiodeInnenforToUkerFørFødselTilSeksUkerEtterFødsel(\n                p.tidsperiode,\n                familiehendelsesdato,\n                termindato\n            )\n    ) as [];\n};\n\nexport const uttaksperiodeKanJusteresVedFødsel = (\n    ønskerJustertUttakVedFødsel: boolean | undefined,\n    termindato: Date | undefined,\n    uttaksperiodeFom: Date\n) => {\n    return !!ønskerJustertUttakVedFødsel && termindato !== undefined && dayjs(uttaksperiodeFom).isSame(termindato);\n};\n","export enum MorsAktivitet {\n    Arbeid = 'ARBEID',\n    Utdanning = 'UTDANNING',\n    Kvalifiseringsprogrammet = 'KVALPROG',\n    Introduksjonsprogrammet = 'INTROPROG',\n    TrengerHjelp = 'TRENGER_HJELP',\n    Innlagt = 'INNLAGT',\n    ArbeidOgUtdanning = 'ARBEID_OG_UTDANNING',\n    Uføre = 'UFØRE',\n    IkkeOppgitt = 'IKKE_OPPGITT',\n}\n","export enum OppholdÅrsakType {\n    UttakFellesperiodeAnnenForelder = 'UTTAK_FELLESP_ANNEN_FORELDER',\n    UttakFedrekvoteAnnenForelder = 'UTTAK_FEDREKVOTE_ANNEN_FORELDER',\n    UttakMødrekvoteAnnenForelder = 'UTTAK_MØDREKVOTE_ANNEN_FORELDER',\n    UttakForeldrepengerAnnenForelder = 'UTTAK_FORELDREPENGER_ANNEN_FORELDER',\n    ForeldrepengerFørFødsel = 'UTTAK_FORELDREPENGER_FØR_FØDSEL_ANNEN_FORELDER',\n    Ingen = 'INGEN',\n}\n","export enum OverføringÅrsakType {\n    institusjonsoppholdAnnenForelder = 'INSTITUSJONSOPPHOLD_ANNEN_FORELDER',\n    sykdomAnnenForelder = 'SYKDOM_ANNEN_FORELDER',\n    aleneomsorg = 'ALENEOMSORG',\n    ikkeRettAnnenForelder = 'IKKE_RETT_ANNEN_FORELDER',\n}\n","import { TidsperiodeDate } from '@navikt/fp-common';\nimport { Attachment } from 'app/types/Attachment';\nimport { Forelder } from 'app/types/Forelder';\nimport { MorsAktivitet } from './MorsAktivitet';\nimport { OppholdÅrsakType } from './OppholdÅrsakType';\nimport { OverføringÅrsakType } from './OverføringÅrsakType';\nimport { PeriodeHullÅrsak } from './PeriodeHullÅrsak';\nimport { PeriodeInfoType } from './PeriodeInfoType';\nimport { StønadskontoType } from './StønadskontoType';\nimport { UtsettelseÅrsakType } from './UtsettelseÅrsakType';\n\nexport enum Periodetype {\n    Uttak = 'uttak',\n    Utsettelse = 'utsettelse',\n    Opphold = 'opphold',\n    Overføring = 'overføring',\n    Hull = 'ubegrunnetOpphold',\n    Info = 'info',\n    PeriodeUtenUttak = 'periodeUtenUttak',\n}\n\nexport enum Arbeidsform {\n    arbeidstaker = 'ARBEIDSTAKER',\n    frilans = 'FRILANS',\n    selvstendignæringsdrivende = 'SELVSTENDIG_NÆRINGSDRIVENDE',\n}\n\nexport interface PeriodeBase {\n    id: string;\n    type: Periodetype;\n    tidsperiode: TidsperiodeDate;\n    vedlegg?: Attachment[];\n}\n\nexport interface ForeldrepengerFørFødselUttaksperiode extends UttaksperiodeBase {\n    konto: StønadskontoType.ForeldrepengerFørFødsel;\n    skalIkkeHaUttakFørTermin: boolean;\n}\n\nexport interface UttaksperiodeBase extends PeriodeBase {\n    type: Periodetype.Uttak;\n    konto: StønadskontoType;\n    forelder: Forelder;\n    morsAktivitetIPerioden?: MorsAktivitet;\n    ønskerSamtidigUttak?: boolean;\n    samtidigUttakProsent?: string;\n    gradert?: boolean;\n    stillingsprosent?: string;\n    orgnumre?: string[];\n    arbeidsformer?: Arbeidsform[];\n    erArbeidstaker?: boolean;\n    harIkkeAktivitetskrav?: boolean;\n    vedlegg?: Attachment[];\n    ønskerFlerbarnsdager?: boolean;\n    erMorForSyk?: boolean;\n    angittAvAnnenPart?: boolean;\n}\n\nexport type Uttaksperiode = UttaksperiodeBase | ForeldrepengerFørFødselUttaksperiode;\n\nexport type UtsettelseFormPeriodeType = Utsettelsesperiode | Oppholdsperiode;\nexport interface Utsettelsesperiode extends PeriodeBase {\n    type: Periodetype.Utsettelse;\n    årsak: UtsettelseÅrsakType;\n    forelder: Forelder;\n    morsAktivitetIPerioden?: MorsAktivitet;\n    erArbeidstaker: boolean;\n    bekrefterArbeidIPerioden?: boolean;\n}\n\nexport interface Oppholdsperiode extends PeriodeBase {\n    type: Periodetype.Opphold;\n    årsak: OppholdÅrsakType;\n    forelder: Forelder;\n}\n\nexport interface Overføringsperiode extends PeriodeBase {\n    type: Periodetype.Overføring;\n    konto: StønadskontoType;\n    forelder: Forelder;\n    årsak: OverføringÅrsakType;\n}\n\nexport interface PeriodeHull extends PeriodeBase {\n    type: Periodetype.Hull;\n    tidsperiode: TidsperiodeDate;\n    årsak?: PeriodeHullÅrsak;\n}\n\ninterface InfoPeriodeBase extends PeriodeBase {\n    type: Periodetype.Info;\n    infotype: PeriodeInfoType;\n    overskrives: boolean;\n    visPeriodeIPlan: boolean;\n}\n\nexport interface AvslåttPeriode extends InfoPeriodeBase {\n    type: Periodetype.Info;\n    infotype: PeriodeInfoType.avslåttPeriode;\n    avslåttPeriodeType?: Periodetype;\n    kontoType: StønadskontoType | undefined;\n    forelder: Forelder;\n    overskrives: true;\n    visPeriodeIPlan: boolean;\n}\n\nexport interface UttakAnnenPartInfoPeriode extends InfoPeriodeBase {\n    type: Periodetype.Info;\n    infotype: PeriodeInfoType.uttakAnnenPart;\n    årsak: OppholdÅrsakType;\n    forelder: Forelder;\n    overskrives: true;\n    visPeriodeIPlan: boolean;\n    ønskerSamtidigUttak?: boolean;\n    samtidigUttakProsent?: string;\n    gradert?: boolean;\n    stillingsprosent?: string;\n}\n\nexport interface UtsettelseAnnenPartInfoPeriode extends InfoPeriodeBase {\n    type: Periodetype.Info;\n    infotype: PeriodeInfoType.utsettelseAnnenPart;\n    årsak: UtsettelseÅrsakType;\n    forelder: Forelder;\n    overskrives: true;\n    visPeriodeIPlan: boolean;\n}\n\nexport type InfoPeriode = AvslåttPeriode | UttakAnnenPartInfoPeriode | UtsettelseAnnenPartInfoPeriode;\n\nexport interface PeriodeUtenUttak extends PeriodeBase {\n    type: Periodetype.PeriodeUtenUttak;\n}\n\nexport interface PeriodeUtenUttakUtsettelse extends Omit<Utsettelsesperiode, 'forelder'> {\n    type: Periodetype.Utsettelse;\n    morsAktivitetIPerioden?: MorsAktivitet;\n    årsak: UtsettelseÅrsakType.Fri;\n    erArbeidstaker: boolean;\n    forelder: Forelder;\n}\n\nexport type Periode =\n    | Uttaksperiode\n    | Utsettelsesperiode\n    | Oppholdsperiode\n    | Overføringsperiode\n    | PeriodeHull\n    | PeriodeUtenUttakUtsettelse\n    | PeriodeUtenUttak\n    | InfoPeriode;\n\nexport function isUttaksperiode(periode: Periode): periode is Uttaksperiode {\n    return periode.type === Periodetype.Uttak;\n}\n\nexport const isForeldrepengerFørFødselUttaksperiode = (\n    periode: Periode\n): periode is ForeldrepengerFørFødselUttaksperiode => {\n    return periode.type === Periodetype.Uttak && periode.konto === StønadskontoType.ForeldrepengerFørFødsel;\n};\n\nexport const isUttakAvFellesperiode = (periode: Periode): periode is Uttaksperiode => {\n    return periode.type === Periodetype.Uttak && periode.konto === StønadskontoType.Fellesperiode;\n};\n\nexport const isUttakAvForeldrepengerFørFødsel = (periode: Periode): periode is ForeldrepengerFørFødselUttaksperiode => {\n    return periode.type === Periodetype.Uttak && periode.konto === StønadskontoType.ForeldrepengerFørFødsel;\n};\n\nexport const isUtsettelsesperiode = (periode: Periode): periode is Utsettelsesperiode => {\n    return periode.type === Periodetype.Utsettelse;\n};\n\nexport const isUtsettelsePgaFerie = (periode: Periode): periode is Utsettelsesperiode => {\n    return isUtsettelsesperiode(periode) && periode.årsak === UtsettelseÅrsakType.Ferie;\n};\n\nexport const isUtsettelsePgaArbeid = (periode: Periode): periode is Utsettelsesperiode => {\n    return isUtsettelsesperiode(periode) && periode.årsak === UtsettelseÅrsakType.Arbeid;\n};\n\nexport const isOverføringsperiode = (periode: Periode): periode is Overføringsperiode => {\n    return periode.type === Periodetype.Overføring;\n};\n\nexport const isOppholdsperiode = (periode: Periode): periode is Oppholdsperiode => {\n    return periode.type === Periodetype.Opphold;\n};\n\nexport const isInfoPeriode = (periode: Periode): periode is InfoPeriode => {\n    return periode.type === Periodetype.Info && periode.overskrives === true;\n};\n\nexport const isHull = (periode: Periode): periode is PeriodeHull => {\n    return periode.type === Periodetype.Hull;\n};\n\nexport const isUtsettelseAnnenPart = (periode: Periode): periode is UtsettelseAnnenPartInfoPeriode => {\n    return periode.type === Periodetype.Info && periode.infotype === PeriodeInfoType.utsettelseAnnenPart;\n};\n\nexport const isAvslåttPeriode = (periode: Periode): periode is AvslåttPeriode => {\n    return periode.type === Periodetype.Info && periode.infotype === PeriodeInfoType.avslåttPeriode;\n};\n\nexport const isUttakAnnenPart = (periode: Periode): periode is UttakAnnenPartInfoPeriode => {\n    return periode.type === Periodetype.Info && periode.infotype === PeriodeInfoType.uttakAnnenPart;\n};\n\nexport const isPeriodeUtenUttakUtsettelse = (periode: Periode): periode is PeriodeUtenUttakUtsettelse => {\n    return periode.type === Periodetype.Utsettelse && periode.årsak === UtsettelseÅrsakType.Fri;\n};\n\nexport const isPeriodeUtenUttak = (periode: Periode): periode is PeriodeUtenUttak => {\n    return periode.type === Periodetype.PeriodeUtenUttak;\n};\n\nexport const isOverskrivbarPeriode = (periode: Periode): boolean => {\n    return (\n        (periode.type === Periodetype.Info && periode.overskrives === true) ||\n        periode.type === Periodetype.Hull ||\n        isPeriodeUtenUttak(periode) ||\n        isPeriodeUtenUttakUtsettelse(periode)\n    );\n};\n\nconst isAnnenPartInfoPeriodeOppholdUttak = (periode: InfoPeriode) => {\n    return periode.infotype === PeriodeInfoType.uttakAnnenPart;\n};\n\nconst isAnnenPartInfoPeriodeOppholdUtsettelse = (periode: InfoPeriode) => {\n    return periode.infotype === PeriodeInfoType.utsettelseAnnenPart;\n};\n\nexport const isAnnenPartInfoPeriode = (periode: Periode): periode is UttakAnnenPartInfoPeriode => {\n    return (\n        periode.type === Periodetype.Info &&\n        (isAnnenPartInfoPeriodeOppholdUttak(periode) || isAnnenPartInfoPeriodeOppholdUtsettelse(periode))\n    );\n};\n","export enum PeriodeInfoType {\n    avslåttPeriode = 'avslåttPeriode',\n    uttakAnnenPart = 'uttakAnnenPart',\n    utsettelseAnnenPart = 'utsettelseAnnenPart',\n}\n","export enum SenEndringÅrsak {\n    'Sykdom' = 'SYKDOM',\n    'Uttak' = 'UTTAK',\n    'SykdomOgUttak' = 'SYKDOM_OG_UTTAK',\n    'InstitusjonSøker' = 'INSTITUSJONSOPPHOLD_SØKER',\n    'InstitusjonBarnet' = 'INSTITUSJONSOPPHOLD_BARNET',\n    'Arbeid' = 'ARBEID',\n    'ArbeidOgUttak' = 'ARBEID_OG_UTTAK',\n    'Ingen' = 'INGEN',\n}\n","export enum StønadskontoType {\n    Mødrekvote = 'MØDREKVOTE',\n    Fedrekvote = 'FEDREKVOTE',\n    Fellesperiode = 'FELLESPERIODE',\n    Foreldrepenger = 'FORELDREPENGER',\n    ForeldrepengerFørFødsel = 'FORELDREPENGER_FØR_FØDSEL',\n    Flerbarnsdager = 'FLERBARNSDAGER', // Ikke brukt som egen type i periodene\n    AktivitetsfriKvote = 'AKTIVITETSFRI_KVOTE', // Foreldrepenger\n}\n","export enum UtsettelseÅrsakType {\n    Ferie = 'LOVBESTEMT_FERIE',\n    Arbeid = 'ARBEID',\n    Sykdom = 'SYKDOM',\n    InstitusjonSøker = 'INSTITUSJONSOPPHOLD_SØKER',\n    InstitusjonBarnet = 'INSTITUSJONSOPPHOLD_BARNET',\n    HvØvelse = 'HV_OVELSE',\n    NavTiltak = 'NAV_TILTAK',\n    Fri = 'FRI',\n}\n","import { intlUtils, Tidsperiode, TidsperiodeDate } from '@navikt/fp-common';\nimport { IntlShape } from 'react-intl';\nimport { OppholdÅrsakType } from '../types/OppholdÅrsakType';\nimport { PeriodeInfoType } from '../types/PeriodeInfoType';\nimport { StønadskontoType } from '../types/StønadskontoType';\nimport {\n    isAnnenPartInfoPeriode,\n    isHull,\n    isOverføringsperiode,\n    isPeriodeUtenUttak,\n    isUttakAnnenPart,\n    isUttakAvFellesperiode,\n    isUttaksperiode,\n    Periode,\n    Periodetype,\n    Utsettelsesperiode,\n    UttakAnnenPartInfoPeriode,\n} from '../types/Periode';\nimport { NavnPåForeldre } from '../../app/types/NavnPåForeldre';\nimport { Forelder } from '../../app/types/Forelder';\nimport { StønadskontoUttak } from 'uttaksplan/types/StønadskontoUttak';\nimport { Perioden } from 'app/steps/uttaksplan-info/utils/Perioden';\nimport { erTidsperioderLike, Tidsperioden } from 'app/steps/uttaksplan-info/utils/Tidsperioden';\nimport { getFloatFromString } from 'app/utils/numberUtils';\nimport { dateToISOString } from '@navikt/sif-common-formik/lib';\nimport { getStønadskontoNavn, getUttakAnnenPartStønadskontoNavn } from './stønadskontoerUtils';\nimport {\n    convertTidsperiodeToTidsperiodeDate,\n    isDateInTheFuture,\n    isDateTodayOrInTheFuture,\n    ISOStringToDate,\n} from 'app/utils/dateUtils';\nimport dayjs from 'dayjs';\nimport { UtsettelseÅrsakType } from 'uttaksplan/types/UtsettelseÅrsakType';\nimport { MorsAktivitet } from 'uttaksplan/types/MorsAktivitet';\nimport { OverføringÅrsakType } from 'uttaksplan/types/OverføringÅrsakType';\nimport { EksisterendeSak } from 'app/types/EksisterendeSak';\nimport { appendPeriodeNavnHvisUttakRundtFødselFarMedmor } from 'app/utils/wlbUtils';\nimport { Situasjon } from 'app/types/Situasjon';\nimport { capitalizeFirstLetter } from 'app/utils/stringUtils';\n\nexport const mapTidsperiodeStringToTidsperiode = (t: Partial<Tidsperiode>): Partial<TidsperiodeDate> => {\n    return {\n        fom: ISOStringToDate(t.fom),\n        tom: ISOStringToDate(t.tom),\n    };\n};\n\nexport const mapTidsperiodeToTidsperiodeString = (t: Partial<TidsperiodeDate>): Partial<Tidsperiode> => {\n    return {\n        fom: dateToISOString(t.fom),\n        tom: dateToISOString(t.tom),\n    };\n};\n\nexport const stillingsprosentIsMoreThan0 = (stillingsprosent: string): boolean => {\n    const pst = getFloatFromString(stillingsprosent);\n    if (pst) {\n        return pst > 0;\n    }\n    return false;\n};\n\nexport const samtidigUttakProsentIsMax100 = (samtidigUttakProsent: string): boolean => {\n    const pst = getFloatFromString(samtidigUttakProsent);\n\n    if (pst) {\n        return pst <= 100;\n    }\n\n    return false;\n};\n\nexport const stillingsprosentIsLessThan100 = (stillingsprosent: string): boolean => {\n    const pst = getFloatFromString(stillingsprosent);\n    if (pst) {\n        return pst < 100;\n    }\n    return false;\n};\n\nconst isValidStillingsprosent = (pst: string | undefined): boolean =>\n    pst !== undefined && isNaN(parseFloat(pst)) === false;\n\nconst prettifyProsent = (pst: string | undefined): number | undefined => {\n    if (pst === undefined) {\n        return undefined;\n    }\n\n    const nbr = parseFloat(pst);\n    if (isNaN(nbr)) {\n        return undefined;\n    }\n    if (Math.round(nbr) === nbr) {\n        return Math.round(nbr);\n    }\n    return nbr;\n};\n\nexport const getUttaksprosentFromStillingsprosent = (\n    stillingsPst: number | undefined,\n    samtidigUttakPst: number | undefined\n): number | undefined => {\n    if (samtidigUttakPst) {\n        return samtidigUttakPst;\n    }\n    if (stillingsPst) {\n        let prosent = (100 - stillingsPst) * 100;\n        prosent = Math.round(prosent) / 100;\n\n        return prosent;\n    }\n    return undefined;\n};\n\nexport const getOppholdskontoNavn = (\n    intl: IntlShape,\n    årsak: OppholdÅrsakType,\n    foreldernavn: string,\n    erMor: boolean\n) => {\n    const navn = capitalizeFirstLetter(foreldernavn);\n    return erMor\n        ? intlUtils(intl, `uttaksplan.oppholdsårsaktype.foreldernavn.far.${årsak}`, { foreldernavn: navn })\n        : intlUtils(intl, `uttaksplan.oppholdsårsaktype.foreldernavn.mor.${årsak}`, { foreldernavn: navn });\n};\n\nexport const getStønadskontoFromOppholdsårsak = (årsak: OppholdÅrsakType): StønadskontoType => {\n    if (årsak === OppholdÅrsakType.UttakFedrekvoteAnnenForelder) {\n        return StønadskontoType.Fedrekvote;\n    }\n\n    if (årsak === OppholdÅrsakType.UttakMødrekvoteAnnenForelder) {\n        return StønadskontoType.Mødrekvote;\n    }\n\n    if (årsak === OppholdÅrsakType.UttakFellesperiodeAnnenForelder) {\n        return StønadskontoType.Fellesperiode;\n    }\n\n    if (årsak === OppholdÅrsakType.UttakForeldrepengerAnnenForelder) {\n        return StønadskontoType.Foreldrepenger;\n    }\n\n    return StønadskontoType.ForeldrepengerFørFødsel;\n};\n\nexport const getOppholdsÅrsakFromStønadskonto = (konto: StønadskontoType): OppholdÅrsakType | undefined => {\n    switch (konto) {\n        case StønadskontoType.Fedrekvote:\n            return OppholdÅrsakType.UttakFedrekvoteAnnenForelder;\n        case StønadskontoType.Mødrekvote:\n            return OppholdÅrsakType.UttakMødrekvoteAnnenForelder;\n        case StønadskontoType.Fellesperiode:\n            return OppholdÅrsakType.UttakFellesperiodeAnnenForelder;\n        default:\n            return undefined;\n    }\n};\n\nexport const getForelderFromPeriode = (periode: Periode): Forelder | undefined => {\n    if (!isHull(periode) && !isPeriodeUtenUttak(periode)) {\n        return periode.forelder;\n    }\n\n    return undefined;\n};\n\nexport const getForelderNavn = (forelder: Forelder, navnPåForeldre: NavnPåForeldre): string => {\n    if (navnPåForeldre.farMedmor) {\n        return forelder === Forelder.mor ? navnPåForeldre.mor : navnPåForeldre.farMedmor;\n    }\n    return forelder === Forelder.mor ? navnPåForeldre.mor : forelder;\n};\n\nexport const getPeriodeTittel = (\n    intl: IntlShape,\n    periode: Periode,\n    navnPåForeldre: NavnPåForeldre,\n    familiehendelsesdato: Date,\n    termindato: Date | undefined,\n    situasjon: Situasjon,\n    erFarEllerMedmor?: boolean,\n    erAleneOmOmsorg?: boolean\n): string => {\n    switch (periode.type) {\n        case Periodetype.Uttak: {\n            const tittelMedNavn = getStønadskontoNavn(\n                intl,\n                periode.konto,\n                navnPåForeldre,\n                erFarEllerMedmor,\n                erAleneOmOmsorg\n            );\n            const tittel = appendPeriodeNavnHvisUttakRundtFødselFarMedmor(\n                intl,\n                tittelMedNavn,\n                periode,\n                situasjon,\n                familiehendelsesdato,\n                termindato\n            );\n            if (\n                (periode.gradert && isValidStillingsprosent(periode.stillingsprosent)) ||\n                (periode.ønskerSamtidigUttak && isValidStillingsprosent(periode.samtidigUttakProsent))\n            ) {\n                return `${tittel} ${intlUtils(intl, 'gradering.prosent', {\n                    stillingsprosent: getUttaksprosentFromStillingsprosent(\n                        prettifyProsent(periode.stillingsprosent),\n                        periode.samtidigUttakProsent ? prettifyProsent(periode.samtidigUttakProsent) : undefined\n                    ),\n                })}`;\n            }\n\n            return tittel;\n        }\n        case Periodetype.PeriodeUtenUttak:\n            return intlUtils(intl, 'uttaksplan.periodetype.periodeUtenUttak.tittel');\n        case Periodetype.Overføring:\n            return getStønadskontoNavn(intl, periode.konto, navnPåForeldre);\n        case Periodetype.Utsettelse:\n            if (periode.årsak) {\n                return intlUtils(intl, 'uttaksplan.periodeliste.utsettelsesårsak', {\n                    årsak: intlUtils(intl, `uttaksplan.utsettelsesårsak.${periode.årsak}`),\n                });\n            }\n            return intlUtils(intl, 'uttaksplan.periodeliste.utsettelsesårsak.ukjent');\n        case Periodetype.Opphold:\n            return getOppholdskontoNavn(\n                intl,\n                periode.årsak,\n                getForelderNavn(periode.forelder, navnPåForeldre),\n                periode.forelder === 'mor'\n            );\n        case Periodetype.Hull:\n            return intlUtils(intl, 'uttaksplan.periodetype.hull.tittel');\n        case Periodetype.Info:\n            switch (periode.infotype) {\n                case PeriodeInfoType.uttakAnnenPart:\n                    return getUttakAnnenPartStønadskontoNavn(\n                        intl,\n                        getStønadskontoFromOppholdsårsak(periode.årsak),\n                        periode.forelder,\n                        navnPåForeldre,\n                        periode.samtidigUttakProsent\n                    );\n                case PeriodeInfoType.utsettelseAnnenPart:\n                    return intlUtils(intl, `uttaksplan.periodetype.info.utsettelse.${periode.årsak}`, {\n                        navn: getForelderNavn(periode.forelder, navnPåForeldre),\n                    });\n                default:\n                    return intlUtils(intl, `uttaksplan.periodetype.info.${periode.infotype}`);\n            }\n    }\n};\n\nexport const erSentGradertUttak = (periode: Periode) =>\n    periode.type === Periodetype.Uttak &&\n    !isDateTodayOrInTheFuture(dateToISOString(periode.tidsperiode.fom)) &&\n    periode.gradert;\n\nexport const erPeriodeInnvilget = (periode: Periode, eksisterendeSak?: EksisterendeSak): boolean => {\n    if (eksisterendeSak === undefined) {\n        return false;\n    }\n    const saksperiode = getSaksperiode(periode, eksisterendeSak);\n    return saksperiode ? saksperiode.resultat.innvilget : false;\n};\n\nconst getSaksperiode = (periode: Periode, ekisterendeSak: EksisterendeSak) => {\n    return ekisterendeSak.saksperioder.find((saksperiode) =>\n        erTidsperioderLike(convertTidsperiodeToTidsperiodeDate(saksperiode.periode), periode.tidsperiode)\n    );\n};\n\nexport const getPeriodeForelderNavn = (periode: Periode, navnPåForeldre: NavnPåForeldre): string => {\n    if (\n        periode.type === Periodetype.Utsettelse ||\n        periode.type === Periodetype.Uttak ||\n        periode.type === Periodetype.Overføring ||\n        periode.type === Periodetype.Opphold ||\n        periode.type === Periodetype.Info\n    ) {\n        return getForelderNavn(periode.forelder, navnPåForeldre);\n    }\n    return 'Ingen forelder registrert';\n};\n\nexport const getSamtidigUttakEllerGraderingsProsent = (periode: UttakAnnenPartInfoPeriode): number | undefined => {\n    const periodeErGradert = periode.stillingsprosent !== undefined;\n    const periodeErSamtidigUttak = periode.samtidigUttakProsent !== undefined;\n\n    if (periodeErSamtidigUttak) {\n        return (100 - getFloatFromString(periode.samtidigUttakProsent)!) / 100;\n    }\n\n    if (periodeErGradert) {\n        return getFloatFromString(periode.stillingsprosent)! / 100;\n    }\n\n    return undefined;\n};\n\nexport const justerAndrePartsUttakAvFellesperiodeOmMulig = (\n    perioder: Periode[],\n    uttakFellesperiode: StønadskontoUttak | undefined\n): Periode[] => {\n    if (uttakFellesperiode === undefined || uttakFellesperiode.dager >= 0 || perioder.length === 0) {\n        return perioder;\n    }\n\n    const dagerGjenståendeFellesperiode = uttakFellesperiode.dager;\n\n    const sisteFellesperiodeAnnenPart = [...perioder]\n        .reverse()\n        .find((p) => isAnnenPartInfoPeriode(p) && p.årsak === OppholdÅrsakType.UttakFellesperiodeAnnenForelder);\n\n    if (sisteFellesperiodeAnnenPart !== undefined && isAnnenPartInfoPeriode(sisteFellesperiodeAnnenPart)) {\n        const dagerMedFellesperiodeISistePeriode = Perioden(sisteFellesperiodeAnnenPart).getAntallUttaksdager();\n        const justeringsProsent = getSamtidigUttakEllerGraderingsProsent(sisteFellesperiodeAnnenPart) || 1;\n        const diff = dagerGjenståendeFellesperiode / justeringsProsent + dagerMedFellesperiodeISistePeriode;\n        const indexSistePeriode = perioder.findIndex((p) => p.id === sisteFellesperiodeAnnenPart.id);\n\n        if (dagerGjenståendeFellesperiode < 0 && diff > 0) {\n            perioder[indexSistePeriode] = {\n                ...sisteFellesperiodeAnnenPart,\n                tidsperiode: Tidsperioden(sisteFellesperiodeAnnenPart.tidsperiode).setUttaksdager(diff),\n            };\n            return perioder;\n        }\n\n        if (dagerGjenståendeFellesperiode < 0 && diff === 0) {\n            return perioder.splice(indexSistePeriode, 1);\n        }\n    }\n\n    return perioder;\n};\n\nexport const getSlettPeriodeTekst = (periodetype: Periodetype): string => {\n    switch (periodetype) {\n        case Periodetype.Uttak:\n            return 'uttaksplan.slettPeriode.uttak';\n        case Periodetype.Overføring:\n            return 'uttaksplan.slettPeriode.overføring';\n        case Periodetype.Opphold:\n            return 'uttaksplan.slettPeriode.opphold';\n        case Periodetype.Utsettelse:\n            return 'uttaksplan.slettPeriode.utsettelse';\n        default:\n            return '';\n    }\n};\n\nconst erPeriodeFomEllerEtterDato = (periode: Periode, dato: Date): boolean => {\n    return (\n        periode.tidsperiode.fom !== undefined &&\n        periode.tidsperiode.tom !== undefined &&\n        dayjs(periode.tidsperiode.fom).isSameOrAfter(dato, 'day') &&\n        dayjs(periode.tidsperiode.tom).isSameOrAfter(dato, 'day')\n    );\n};\n\nexport const erPeriodeFørDato = (periode: Periode, dato: Date) => {\n    return erPeriodeFomEllerEtterDato(periode, dato) === false;\n};\n\nexport const erGradering = (periode: Periode) => periode.type === Periodetype.Uttak && periode.gradert === true;\n\nexport const erUttakEllerOppholdMerEnnTreMånederSiden = (periode: Periode) =>\n    (periode.type === Periodetype.Uttak || periode.type === Periodetype.Opphold) &&\n    dayjs(periode.tidsperiode.fom).isBefore(dayjs().startOf('day').subtract(3, 'months'), 'day');\n\nexport const erUtsettelsePgaSykdom = (periode: Utsettelsesperiode) =>\n    periode.årsak === UtsettelseÅrsakType.Sykdom ||\n    periode.årsak === UtsettelseÅrsakType.InstitusjonSøker ||\n    periode.årsak === UtsettelseÅrsakType.InstitusjonBarnet;\n\nexport const erUttakGrunnetSykdom = (periode: Periode) => {\n    if (\n        isOverføringsperiode(periode) &&\n        (periode.årsak === OverføringÅrsakType.institusjonsoppholdAnnenForelder ||\n            periode.årsak === OverføringÅrsakType.sykdomAnnenForelder)\n    ) {\n        return true;\n    }\n\n    if (isUttaksperiode(periode)) {\n        if (\n            periode.erMorForSyk === true ||\n            periode.morsAktivitetIPerioden === MorsAktivitet.TrengerHjelp ||\n            periode.morsAktivitetIPerioden === MorsAktivitet.Innlagt\n        ) {\n            return true;\n        }\n    }\n\n    if (\n        isUttakAvFellesperiode(periode) &&\n        (periode.morsAktivitetIPerioden === MorsAktivitet.Innlagt ||\n            periode.morsAktivitetIPerioden === MorsAktivitet.TrengerHjelp)\n    ) {\n        return true;\n    }\n\n    return false;\n};\n\nexport const erUttakTilbakeITid = (periode: Periode) =>\n    isUttaksperiode(periode) && !isDateInTheFuture(dateToISOString(periode.tidsperiode.fom));\n\nexport const erUtsettelseTilbakeITid = (periode: Periode) =>\n    periode.type === Periodetype.Utsettelse && !isDateInTheFuture(dateToISOString(periode.tidsperiode.fom));\n\nexport const erUtsettelseGrunnetPgaArbeid = (periode: Utsettelsesperiode) =>\n    periode.årsak === UtsettelseÅrsakType.Arbeid;\n\nexport const erUtsettelse = (periode: Periode) => periode.type === Periodetype.Utsettelse;\n\nconst erUtsettelsePgaFerieEllerArbeid = (periode: Periode) =>\n    periode.type === Periodetype.Utsettelse &&\n    (periode.årsak === UtsettelseÅrsakType.Ferie || periode.årsak === UtsettelseÅrsakType.Arbeid);\n\nexport const erSenUtsettelsePgaFerieEllerArbeid = (periode: Periode) =>\n    erUtsettelseTilbakeITid(periode) && erUtsettelsePgaFerieEllerArbeid(periode);\n\nexport const erÅrsakSykdomEllerInstitusjonsopphold = (årsak: UtsettelseÅrsakType | OverføringÅrsakType) =>\n    årsak === UtsettelseÅrsakType.Sykdom ||\n    årsak === UtsettelseÅrsakType.InstitusjonBarnet ||\n    årsak === UtsettelseÅrsakType.InstitusjonSøker ||\n    årsak === OverføringÅrsakType.institusjonsoppholdAnnenForelder ||\n    årsak === OverføringÅrsakType.sykdomAnnenForelder;\n\nexport const finnesPeriodeIOpprinneligPlan = (periode: Periode, opprinneligPlan: Periode[]): boolean => {\n    return opprinneligPlan.some((op) => Perioden(periode).erLik(op, true, true));\n};\n\nexport const getAnnenForelderSamtidigUttakPeriode = (periode: Periode, perioder: Periode[]): Periode | undefined => {\n    if (isUttaksperiode(periode)) {\n        const samtidigUttak = perioder\n            .filter((p) => isUttakAnnenPart(p))\n            .find(\n                (p) =>\n                    isUttakAnnenPart(p) &&\n                    dayjs(periode.tidsperiode.fom).isSame(p.tidsperiode.fom) &&\n                    p.ønskerSamtidigUttak === true &&\n                    p.id !== periode.id\n            );\n\n        return samtidigUttak !== undefined ? samtidigUttak : undefined;\n    }\n\n    return undefined;\n};\n","import { intlUtils } from '@navikt/fp-common';\nimport { Forelder } from 'app/types/Forelder';\nimport { NavnPåForeldre } from 'app/types/NavnPåForeldre';\nimport { TilgjengeligStønadskonto } from 'app/types/TilgjengeligStønadskonto';\nimport { capitalizeFirstLetter } from 'app/utils/stringUtils';\nimport { IntlShape } from 'react-intl';\nimport { StønadskontoType } from 'uttaksplan/types/StønadskontoType';\nimport { getForelderNavn } from './periodeUtils';\n\nexport const getVelgbareStønadskontotyper = (stønadskontoTyper: TilgjengeligStønadskonto[]): StønadskontoType[] =>\n    stønadskontoTyper\n        .filter(\n            (kontoType) =>\n                kontoType.konto === StønadskontoType.Fellesperiode ||\n                kontoType.konto === StønadskontoType.Fedrekvote ||\n                kontoType.konto === StønadskontoType.Mødrekvote ||\n                kontoType.konto === StønadskontoType.Foreldrepenger ||\n                kontoType.konto === StønadskontoType.AktivitetsfriKvote\n        )\n        .map((kontoType) => kontoType.konto);\n\nexport const getStønadskontoNavn = (\n    intl: IntlShape,\n    konto: StønadskontoType,\n    navnPåForeldre: NavnPåForeldre,\n    erFarEllerMedmor?: boolean,\n    erAleneOmOmsorg?: boolean\n) => {\n    let navn;\n\n    switch (konto) {\n        case StønadskontoType.Mødrekvote:\n            navn = navnPåForeldre.mor;\n            break;\n        case StønadskontoType.Fedrekvote:\n            navn = navnPåForeldre.farMedmor;\n            break;\n        default:\n            navn = undefined;\n    }\n\n    if (navn) {\n        return intl.formatMessage(\n            { id: 'uttaksplan.stønadskontotype.foreldernavn.kvote' },\n            { navn: getNavnGenitivEierform(capitalizeFirstLetter(navn), intl.locale) }\n        );\n    }\n\n    if (erFarEllerMedmor === true && erAleneOmOmsorg === false) {\n        if (konto === StønadskontoType.AktivitetsfriKvote) {\n            return intl.formatMessage({ id: 'uttaksplan.stønadskontotype.AKTIVITETSFRI_KVOTE_BFHR' });\n        }\n        if (konto === StønadskontoType.Foreldrepenger) {\n            return intl.formatMessage({ id: 'uttaksplan.stønadskontotype.AKTIVITETSKRAV_KVOTE_BFHR' });\n        }\n    }\n    return intl.formatMessage({ id: `uttaksplan.stønadskontotype.${konto}` });\n};\n\nexport const getUttakAnnenPartStønadskontoNavn = (\n    intl: IntlShape,\n    konto: StønadskontoType,\n    periodeForelder: Forelder,\n    navnPåForeldre: NavnPåForeldre,\n    samtidigUttakProsent: string | undefined,\n    erFarEllerMedmor?: boolean,\n    erAleneOmOmsorg?: boolean\n) => {\n    const forelderNavn = getForelderNavn(periodeForelder, navnPåForeldre);\n    if (samtidigUttakProsent !== undefined) {\n        const navn = getNavnGenitivEierform(forelderNavn, intl.locale);\n        const intlTekst =\n            konto === StønadskontoType.Fellesperiode\n                ? 'uttaksplan.periodeAnnenPart.tittel.gradertEllerSamtidigUttakFellesperiode'\n                : 'uttaksplan.periodeAnnenPart.tittel.gradertEllerSamtidigUttak';\n        return intlUtils(intl, intlTekst, {\n            navn: capitalizeFirstLetter(navn),\n            prosent: samtidigUttakProsent,\n        });\n    }\n    return getStønadskontoNavn(intl, konto, navnPåForeldre, erFarEllerMedmor, erAleneOmOmsorg);\n};\n\nconst navnSlutterPåSLyd = (navn: string): boolean => {\n    const sisteBokstav = navn.charAt(navn.length - 1).toLowerCase();\n    return sisteBokstav === 's' || sisteBokstav === 'x' || sisteBokstav === 'z';\n};\n\nexport const getNavnGenitivEierform = (navn: string, locale: string): string => {\n    if (locale !== 'nb') {\n        return navn;\n    }\n    if (navnSlutterPåSLyd(navn)) {\n        return `${navn}'`;\n    }\n    return `${navn}s`;\n};\n","var map = {\n\t\"./af\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/af.js\",\n\t\"./ar\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ar.js\",\n\t\"./az\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/az.js\",\n\t\"./be\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/be.js\",\n\t\"./bg\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/bo.js\",\n\t\"./br\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/br.js\",\n\t\"./bs\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/cy.js\",\n\t\"./da\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/da.js\",\n\t\"./de\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/de.js\",\n\t\"./dv\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/dv.js\",\n\t\"./el\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/eo.js\",\n\t\"./es\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/es.js\",\n\t\"./et\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/et.js\",\n\t\"./eu\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/gu.js\",\n\t\"./he\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/he.js\",\n\t\"./hi\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/id.js\",\n\t\"./is\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/is.js\",\n\t\"./it\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/it.js\",\n\t\"./ja\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/kk.js\",\n\t\"./km\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/km.js\",\n\t\"./kn\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/lv.js\",\n\t\"./me\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/me.js\",\n\t\"./mi\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/mt.js\",\n\t\"./my\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/my.js\",\n\t\"./nb\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/sd.js\",\n\t\"./se\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/se.js\",\n\t\"./si\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/si.js\",\n\t\"./sk\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ta.js\",\n\t\"./te\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/te.js\",\n\t\"./tet\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/tg.js\",\n\t\"./th\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/th.js\",\n\t\"./tk\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";"],"names":["Environment","_ref","appSettings","window","_defineProperty","REST_API_URL","UTTAK_API_URL","LOGIN_URL","APP_VERSION","FAMILIE","FeatureToggle","foreldrepengesøknadInitialState","version","currentRoute","SøknadRoutes","søknad","type","harGodkjentVilkår","søkersituasjon","rolle","situasjon","barn","undefined","annenForelder","kanIkkeOppgis","søker","harHattAnnenInntektSiste10Mnd","harJobbetSomFrilansSiste10Mnd","harJobbetSomSelvstendigNæringsdrivendeSiste10Mnd","erAleneOmOmsorg","språkkode","informasjonOmUtenlandsopphold","iNorgeNeste12Mnd","iNorgeSiste12Mnd","tidligereOpphold","senereOpphold","erEndringssøknad","dekningsgrad","uttaksplan","harGodkjentOppsummering","vedlegg","tilleggsopplysninger","begrunnelseForSenEndring","saksnummer","ønskerJustertUttakVedFødsel","søkerinfo","saker","uttaksplanInfo","antallUkerIUttaksplan","kvittering","endringstidspunkt","perioderSomSkalSendesInn","harUttaksplanBlittSlettet","brukerSvarteJaPåAutoJustering","søknadGjelderEtNyttBarn","barnFraNesteSak","annenPartsUttakErLagtTilIPlan","finnVedleggAvType","alleVedlegg","vedleggAvType","filter","v","length","foreldrepengesøknadReducer","state","action","ForeldrepengesøknadContextActionKeys","_objectSpread","payload","_toConsumableArray","eksisterendeSak","dokumentasjonAvAleneomsorg","AttachmentType","uttaksplanHarBlittSlettet","ForeldrepengesøknadContext","createContext","ForeldrepengesøknadContextProvider","children","_useReducer2","_slicedToArray","useReducer","dispatch","contextValue","useMemo","React","Provider","value","setVelkommen","SET_HARGODKJENTVILKÅR","setErEndringssøknad","SET_ER_ENDRINGSSØKNAD","setSøkersituasjon","SET_SØKERSITUASJON","setOmBarnet","SET_OMBARNET","avbrytSøknad","AVBRYT_SØKNAD","updateCurrentRoute","UPDATE_CURRENT_ROUTE","applyStoredState","APPLY_STORED_STATE","setAnnenForelder","SET_ANNENFORELDER","setSøkerinfo","SET_SØKERINFO","setSøker","SET_SØKER","setInformasjonOmUtenlandsopphold","SET_INFORMASJON_OM_UTENLANDSOPPHOLD","setSaker","SET_SAKER","setUttaksplanInfo","SET_UTTAKSPLAN_INFO","setTilleggsopplysninger","SET_TILLEGGSOPPLYSNINGER","setDekningsgrad","SET_DEKNINGSGRAD","setVedlegg","SET_VEDLEGG","lagUttaksplanforslag","LAG_UTTAKSPLANFORSLAG","setUttaksplan","SET_UTTAKSPLAN","setSøknad","SET_SØKNAD","setSøknadGjelderEtNyttBarn","SET_SØKNAD_GJELDER_ET_NYTT_BARN","setEksisterendeSak","SET_EKSISTERENDE_SAK","setGodkjentOppsummering","SET_GODKJENT_OPPSUMMERING","setKvittering","SET_KVITTERING","setAntallUkerIUttaksplan","SET_ANTALL_UKER_I_UTTAKSPLAN","setEndringstidspunkt","SET_ENDRINGSTIDSPUNKT","setSpråkkode","SET_SPRÅKKODE","setPerioderSomSkalSendesInn","SET_PERIODER_SOM_SKAL_SENDES_INN","slettUttaksplan","SLETT_UTTAKSPLAN","setUttaksplanSlettet","SET_UTTAKSPLAN_SLETTET","setØnskerJustertUttakVedFødsel","SET_ØNSKER_JUSTERT_UTTAK_VED_FØDSEL","setBrukerSvarteJaPåAutoJustering","SET_BRUKER_SVARTE_JA_PÅ_AUTO_JUSTERING","setBarnFraNesteSak","SET_BARN_FRA_NESTE_SAK","setAnnenPartsUttakErLagtTilIPlan","SET_ANNEN_PARTS_UTTAK_ER_LAGT_TIL_I_PLAN","useForeldrepengesøknadContext","useContext","Perioden","periode","setStartdato","fom","flyttPeriode","tidsperiode","Tidsperioden","tom","setUttaksdager","uttaksdager","getTidsperiode","getAntallUttaksdager","getAntallFridager","erLik","periode2","erPerioderLike","p1","p2","inkluderTidsperiode","arguments","inkluderUtsettelser","Periodetype","isForeldrepengerFørFødselUttaksperiode","getPeriodeFootprint","skalIkkeHaUttakFørTermin","k1","k2","erSammenhengende","erPerioderSammenhengende","p1NesteUttaksdato","Uttaksdagen","dayjs","toDate","neste","p2Startdato","isSame","inneholderFridager","starterFør","dato","isBefore","slutterEtter","isAfter","slutterSammeDagEllerEtter","isSameOrAfter","rest","id","_objectWithoutProperties","_excluded","sortedPeriode","Object","keys","sort","key","forEach","formaterDatoKompakt","JSON","stringify","Periodene","perioder","getPeriode","_getPeriode","find","p","getOpphold","_getOpphold","isOppholdsperiode","getUttak","getUttaksperioder","isUttaksperiode","getOverføringer","_getOverføringer","isOverføringsperiode","getHull","_getHull","isHull","getHullOgInfoOgPerioderUtenUttak","_getHullOgInfoOgPerioderUtenUttak","isInfoPeriode","isPeriodeUtenUttak","getInfoperioder","_getInfoperioder","getUtsettelser","_getUtsettelser","isUtsettelsesperiode","getPerioderEtterFamiliehendelsesdato","_getPerioderEtterFamiliehendelsesdato","getPerioderFørFamiliehendelsesdato","_getPerioderFørFamiliehendelsesdato","familiehendelsesdato","isValidTidsperiode","getPerioderMedUgyldigTidsperiode","getPeriodeMedUgyldigTidsperiode","getPerioderMedFerieForForelder","forelder","_getPerioderMedFerieForForelder","erPeriodeMedFerieForForelder","getFørstePerioderEtterFamiliehendelsesdato","getFørstePeriodeEtterFamiliehendelsesdato","aktuellePerioder","sorterPerioder","getForeldrepengerFørTermin","_getForeldrepengerFørTermin","konto","StønadskontoType","getFørsteUttaksdag","_getFørsteUttaksdag","førstePeriode","shift","getFørsteUttaksdagEtterSistePeriode","_getFørsteUttaksdagEtterSistePeriode","getFørsteUttaksdagEksluderInfoperioderOgFrittUttak","_getFørsteUttaksdagEksluderInfoperioderOgFrittUttak","isPeriodeUtenUttakUtsettelse","_getAntallUttaksdager","reduce","dager","getAntallFeriedager","_getAntallFeriedager","getFerieUtsettelser","isUtsettelsePgaFerie","map","finnOverlappendePerioder","_finnOverlappendePerioder","_p$tidsperiode","fomEllerTomErInnenforTidsperiode","datoErInnenforTidsperiode","fomTomOmkranserTidsperiode","isSameOrBefore","finnPeriodeMedDato","_finnPeriodeMedDato","isBetween","finnFørstePeriodeEtterDato","_finnFørstePeriodeEtterDato","finnAlleForegåendePerioder","finnPerioderFørPeriode","finnAllePåfølgendePerioder","finnPerioderEtterPeriode","finnDenForegåendePerioden","finnForrigePeriode","foregåendePerioder","pop","finnPåfølgendePeriode","_finnPåfølgendePeriode","påfølgendePerioder","forskyvPerioder","_forskyvPerioder","uttaksdagerCurrent","result","push","dagerIPerioden","_dagerIPerioden","forskyvetStartdato","denneEllerNeste","leggTil","justertPeriode","forskyvPeriode","finnSisteInfoperiode","_finnSisteInfoperiode","reverse","erOmsluttetAv","getSeneEndringerSomKreverBegrunnelse","utsettelsesPerioder","erUtsettelse","utsettelseSykdomKreverBegrunnelse","some","erUtsettelsePgaSykdom","uttakSykdomKreverBegrunnelse","erUttakGrunnetSykdom","utsettelseSykdomKreverBegrunnelsePgaSøktSent","erUtsettelseTilbakeITid","uttakSykdomKreverBegrunnelsePgaSøktSent","erUttakTilbakeITid","utsettelseArbeidKreverBegrunnelsePgaSøktSent","erUtsettelseGrunnetPgaArbeid","uttakKreverBegrunnelsePgaSøktSent","erUttakEllerOppholdMerEnnTreMånederSiden","SenEndringÅrsak","uttaksplanErBareOpphold","perioderUtenInfoPerioder","every","uttaksplanSlutterMedOpphold","slice","findIndex","uttaksplanStarterMedOpphold","getSumUttaksdagerÅTrekkeIPeriodene","Math","floor","finnAntallDagerÅTrekke","prev","curr","holidays","DateHolidays","getOffentligeFridager","fraÅr","getFullYear","tilÅr","days","getHolidays","år","concat","start","subtract","slutt","add","d","date","Date","tidsperiode2","erTidsperioderLike","overlapper","overlapperTidsperioder","erTidsperiodeOmsluttetAvTidsperiode","tidsperiode1","dateIsSameOrAfter","dateIsSameOrBefore","erUtenfor","erTidsperiodeUtenforTidsperiode","getAntallUttaksdagerITidsperiode","getUttaksdagerSomErFridager","dag","erUttaksdag","flyttTidsperiode","formaterString","intl","tidsperiodeToString","formaterDatoUtenDag","formatMessage","formaterStringKort","tidsperiodeToStringKort","erFomEllerEtterDato","erTidsperiodeFomEllerEtterDato","erFørDato","inneholderDato","inneholderTidsperiodeDato","erInnenforFørsteSeksUker","erTidsperiodeInnenforFørsteSeksUker","t1","t2","førsteUttaksdagFamiliehendelsesdato","førsteUttaksdagEtterSeksUker","getValidTidsperiode","Error","antall","isoWeek","_erUttaksdag","forrige","getUttaksdagFørDato","getUttaksdagTilOgMedDato","getUttaksdagEtterDato","getUttaksdagFraOgMedDato","denneEllerForrige","getUttaksdagerFremTilDato","tildato","_getUttaksdagerFremTilDato","trekkUttaksdagerFraDato","leggUttaksdagerTilDato","nyDato","dagteller","uttaksdageteller","tellerdato","trekkFra","getUkedag","isoWeekday","abs","periodeErGradert","stillingsprosent","periodeErSamtidigUttak","samtidigUttakProsent","getFloatFromString","Forelder","utc","minMax","timezone","advanced","date4YearsAgo","startOf","ISOStringToDate","dateString","isISODateString","isValid","dateIsWithinRange","minDate","maxDate","validateDateInRange","isFomDate","intlUtils","formatDateExtended","getMeldingOmOverlappendeUtsettelser","utsettelserIPlan","periodeId","overlappendeUtsettelsesPerioder","up","formatDate","dateRangeValidation","validateToDateInRange","_ref2","errorKey","disableWeekend","fromDate","error","day","validateFromDateInRange","isDateABeforeDateB","a","b","hasValue","isDateInTheFuture","getEldsteRegistrerteBarn","registrerteBarn","dateToISOString","fødselsdato","getEldsteDato","getUkerOgDagerFromDager","uker","getVarighetString","antallDager","format","_getUkerOgDagerFromDa","dagerStr","ukerStr","formaterDato","datoformat","otherDate","findEldsteDato","dateArray","måned","måned3bokstaver","substr","convertTidsperiodeToTidsperiodeDate","getRelevantFamiliehendelseDato","termindato","omsorgsovertakelsesdato","førsteOktober2021ReglerGjelder","førsteOktober2021","andreAugust2022ReglerGjelder","andreAugust2022","førsteJanuar2022","isFeatureEnabled","feature","toLowerCase","getToTetteReglerGjelder","familiehendelsesdatoNesteBarn","familiehendelsePlus48Uker","skalFarUtsetteEtterMorSinSisteUttaksdag","farSinFørsteUttaksdag","morsSisteUttaksdag","getEndringstidspunkt","opprinneligPlan","updatedPlan","endringstidspunktNyPlan","endringstidspunktOpprinneligPlan","søkerensOpprinneligePlan","søkerensUpdatedPlan","index","opprinneligPeriodeMedSammeFom","opprinneligPeriode","perioderErLikeUtenTidSjekk","førsteUttakEllerUtsettelseEtterEndring","nyPeriodeMedSammeFom","nyPeriode","getOldestDate","getMorsSisteDag","isFarMedmorFødselBeggeHarRettUttaksplanInfo","morsSisteDag","dateIsBetween","tidperiodeOverlapperDato","mapSøkerinfoDTOToSøkerinfo","søkerinfoDTO","arbeidsforhold","mapArbeidsforholdDTOToArbeidsforhold","arbforhold","arbeidsgiverId","arbeidsgiverIdType","arbeidsgiverNavn","person","mapSøkerinfoDTOSøkerToPerson","personDTO","erMyndig","etternavn","fornavn","fnr","ikkeNordiskEøsLand","kjønn","bankkonto","mapSøkerinfoDTOBarnToRegistrertBarn","oppgittAnnenForelder","mellomnavn","dødsdato","onlyNumbersRegExp","erGyldigNorskOrgnummer","orgnr","er9Tall","test","starterPå8Eller9","charAt","getMod11","strValue","checkNbr","mod","i","parseInt","numberRegExp","RegExp","trimNumberValue","replace","trimmedValue","match","parseFloat","replaceInvisibleCharsWithSpace","inputString","usynligeCharsRegex","capitalizeFirstLetter","s","toUpperCase","textRegex","textGyldigRegex","validateFødselsnummer","søkersFødselsnummer","erUtenlandskFnr","trim","validFnrResult","isFødselsnummerFormatValid","validator","idnr","status","isSixteenOrOlder","isFødselsnummerValid","Number","mnd","get","validateRequiredTextInputField","feltNavn","requiredFieldIsEmptyError","validateRequiredField","label","inputFeltLabel","validateTextInputField","getIllegalChars","kunUgyldigeTegn","ugyldigStringSet","Set","split","Array","from","join","validateTextHasLegalChars","getIllegalCharsErrorMessage","ugyldigeTegn","ANTALL_UTTAKSDAGER_FAR_MEDMOR_RUNDT_FØDSEL","gjelderWLBReglerFarMedmorRundtFødsel","søkerErFarEllerMedmor","morHarRett","isUttaksperiodeFarMedmorMedValgForUttakRundtFødsel","erMorForSyk","morsAktivitetIPerioden","ønskerFlerbarnsdager","ønskerSamtidigUttak","isUttaksperiodeFarMedmorPgaFødsel","starterTidsperiodeInnenforToUkerFørFødselTilSeksUkerEtterFødsel","isUttaksperiodeBareFarMedmorHarRett","getFørsteUttaksdag2UkerFørFødsel","terminEllerFamHendelsesdatoMinusToUker","datoÅRegneFra","getSisteUttaksdag6UkerEtterFødsel","førsteUttaksdagForPeriodeEtterFødsel","starterTidsperiodeEtter2UkerFørFødsel","førsteUttaksdagToUkerFørFødsel","starterUttaksperiodeFørFødsel","slutterTidsperiodeInnen6UkerEtterFødsel","sisteUttaksdag6UkerEtterFødsel","getFarMedmorUttakRundtFødsel","erFarMedmorSinWLBTidsperiodeRundtFødsel","periodetype","erFarEllerMedmor","getLengdePåForeslåttWLBUttakFarMedmor","startDatoUttak","sisteUttaksDagFørFødsel","antallUttaksdagerFraStartDato","min","appendPeriodeNavnHvisUttakRundtFødselFarMedmor","periodeNavn","farMedmorsTidsperiodeSkalSplittesPåFamiliehendelsesdato","getPerioderMedUttakRundtFødsel","uttaksperiodeKanJusteresVedFødsel","uttaksperiodeFom","MorsAktivitet","OppholdÅrsakType","OverføringÅrsakType","Arbeidsform","Uttak","isUttakAvFellesperiode","isUttakAvForeldrepengerFørFødsel","Utsettelse","årsak","UtsettelseÅrsakType","isUtsettelsePgaArbeid","Overføring","Opphold","Info","overskrives","Hull","isUtsettelseAnnenPart","infotype","PeriodeInfoType","isAvslåttPeriode","isUttakAnnenPart","PeriodeUtenUttak","isOverskrivbarPeriode","mapTidsperiodeStringToTidsperiode","t","stillingsprosentIsMoreThan0","pst","samtidigUttakProsentIsMax100","stillingsprosentIsLessThan100","isValidStillingsprosent","isNaN","prettifyProsent","nbr","round","getUttaksprosentFromStillingsprosent","stillingsPst","samtidigUttakPst","prosent","getOppholdskontoNavn","foreldernavn","erMor","navn","getStønadskontoFromOppholdsårsak","getOppholdsÅrsakFromStønadskonto","getForelderNavn","navnPåForeldre","farMedmor","mor","getPeriodeTittel","tittelMedNavn","getStønadskontoNavn","tittel","gradert","getUttakAnnenPartStønadskontoNavn","erPeriodeInnvilget","saksperiode","getSaksperiode","resultat","innvilget","ekisterendeSak","saksperioder","getPeriodeForelderNavn","getSlettPeriodeTekst","erPeriodeFørDato","erPeriodeFomEllerEtterDato","erSenUtsettelsePgaFerieEllerArbeid","erUtsettelsePgaFerieEllerArbeid","erÅrsakSykdomEllerInstitusjonsopphold","finnesPeriodeIOpprinneligPlan","op","getAnnenForelderSamtidigUttakPeriode","samtidigUttak","getVelgbareStønadskontotyper","stønadskontoTyper","kontoType","getNavnGenitivEierform","locale","periodeForelder","forelderNavn","intlTekst","navnSlutterPåSLyd","sisteBokstav","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","code","webpackContextKeys","resolve","module","exports"],"sourceRoot":""}