{"version":3,"file":"6660.e8126726.iframe.bundle.js","mappings":"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","sources":["webpack://foreldrepengesoknad/./src/app/assets/CheckmarkIkon.tsx","webpack://foreldrepengesoknad/./src/app/utils/pdfUtils.ts","webpack://foreldrepengesoknad/./src/app/assets/SpotlightLetter.tsx","webpack://foreldrepengesoknad/./src/app/pages/søknadSendt/components/KvitteringHeader.tsx","webpack://foreldrepengesoknad/./src/app/pages/søknadSendt/components/KvitteringSuksess.tsx","webpack://foreldrepengesoknad/./src/app/pages/søknadSendt/components/StatusBoks.tsx","webpack://foreldrepengesoknad/./src/app/assets/CashIkon.tsx","webpack://foreldrepengesoknad/./src/app/assets/KalenderIkon.tsx","webpack://foreldrepengesoknad/./src/app/assets/KoffertIkon.tsx","webpack://foreldrepengesoknad/./src/app/pages/søknadSendt/components/SendSøknadIkon.tsx","webpack://foreldrepengesoknad/./src/app/pages/søknadSendt/components/SøknadSendtSectionHeader.tsx","webpack://foreldrepengesoknad/./src/app/pages/søknadSendt/components/SøknadSendtTittel.tsx","webpack://foreldrepengesoknad/./src/app/pages/søknadSendt/SøknadSendt.tsx","webpack://foreldrepengesoknad/./src/app/steps/manglende-vedlegg/util.ts"],"sourcesContent":["import * as React from 'react';\n\nconst CheckmarkIkon = (props: any) => (\n    <svg focusable=\"false\" role=\"img\" aria-hidden=\"true\" width={24} height={24} {...props}>\n        <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n                fill=\"#1C6937\"\n                d=\"M12 .5C18.34.5 23.5 5.66 23.5 12S18.34 23.5 12 23.5C5.659 23.5.5 18.341.5 12S5.659.5 12 .5z\"\n            />\n            <path\n                fill=\"#FFF\"\n                d=\"M16.329 7.76a1 1 0 1 1 1.363 1.464l-7.52 7.007a1 1 0 0 1-1.388-.024L6.28 13.709a1 1 0 0 1 1.413-1.416l1.82 1.817 6.816-6.35z\"\n            />\n        </g>\n    </svg>\n);\n\nexport default CheckmarkIkon;\n","import { detect } from 'detect-browser';\n\nconst base64ToArrayBuffer = (base64: string) => {\n    const binaryString = window.atob(base64);\n    const bytes = new Uint8Array(binaryString.length);\n    for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n    }\n    return bytes;\n};\n\nexport const openPdfPreview = (base64: string) => {\n    const browserInfo = detect();\n    const pdfBlob = new Blob([base64ToArrayBuffer(base64)], {\n        type: 'application/pdf',\n    });\n\n    if (\n        browserInfo &&\n        (browserInfo.name === 'edge' || browserInfo.name === 'ie') &&\n        window.navigator &&\n        (window.navigator as any).msSaveOrOpenBlob\n    ) {\n        (window.navigator as any).msSaveOrOpenBlob(pdfBlob);\n    } else {\n        window.open(URL.createObjectURL(pdfBlob));\n    }\n};\n","import * as React from 'react';\n\nconst SpotlightLetter = (props: any) => (\n    <svg width={120} height={120} viewBox=\"0 0 120 120\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n        <title>Søknad sendt illustrasjon</title>\n        <defs>\n            <circle id=\"path-1\" cx=\"60\" cy=\"60\" r=\"60\" />\n            <circle id=\"path-3\" cx=\"8\" cy=\"8\" r=\"8\" />\n        </defs>\n        <g id=\"Spotlight/letter\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n            <use id=\"Background\" fill=\"#9BD0B0\" xlinkHref=\"#path-1\" />\n            <g id=\"Letter\" transform=\"translate(32.000000, 30.000000)\">\n                <path\n                    d=\"M4.385,30.26975 C3.693,29.57675 0.418,27.19775 1.111,26.50475 L0,22.99075 L26.227,0.51975 C26.92,-0.17325 28.042,-0.17325 28.736,0.51975 L54.961,22.99075 L49.021,35.84775 C49.712,36.53975 27.301,48.01175 26.609,48.70575 L4.385,30.26975 Z\"\n                    id=\"Back\"\n                    fill=\"#0C576F\"\n                />\n                <g transform=\"translate(4.000000, 16.000000)\">\n                    <path\n                        d=\"M45.7388018,30.9845992 L1.50880182,30.9845992 C1.20380182,30.9845992 0.957801819,30.7355992 0.957801819,30.4345992 L0.957801819,0.606599213 C0.957801819,0.302599213 1.20380182,0.0555992126 1.50880182,0.0555992126 L45.7388018,0.0555992126 C46.0418018,0.0555992126 46.2878018,0.302599213 46.2878018,0.606599213 L46.2878018,30.4345992 C46.2878018,30.7355992 46.0418018,30.9845992 45.7388018,30.9845992\"\n                        id=\"Paper\"\n                        fill=\"#DCDCD2\"\n                    />\n                    <g id=\"Checkmark\" transform=\"translate(16.000000, 5.000000)\">\n                        <use id=\"Circle\" fill=\"#0C5EA8\" xlinkHref=\"#path-3\" />\n                        <path\n                            d=\"M6.56203584,9.48462091 L11.2605404,4.94732782 C11.6578208,4.5636786 12.2908893,4.57472885 12.6745385,4.97200925 C13.0581878,5.36928965 13.0471375,6.0023582 12.6498571,6.38600742 L7.19332991,11.6553145 C6.79622485,12.0387944 6.16353973,12.0279231 5.77983986,11.6311589 C5.72674155,11.5893288 5.6771113,11.5414566 5.63194475,11.4876292 L3.56731217,9.02709588 C3.21231038,8.60402121 3.26749434,7.97326562 3.69056901,7.61826382 C4.11364367,7.26326203 4.74439926,7.31844599 5.09940106,7.74152066 L6.56203584,9.48462091 Z\"\n                            id=\"Mark\"\n                            fill=\"#FFFFFF\"\n                        />\n                    </g>\n                </g>\n                <path\n                    d=\"M2.21639938,59.6589001 L46.9593994,59.6589001 C48.1063994,59.6589001 0.141399384,23.0289001 0.141399384,23.0289001 L0.141399384,57.5839001 C0.141399384,58.7289001 1.07039938,59.6589001 2.21639938,59.6589001\"\n                    id=\"Front-left\"\n                    fill=\"#4C92D9\"\n                />\n                <path\n                    d=\"M53.0298,59.6589001 L8.28679997,59.6589001 C7.14079997,59.6589001 55.1048,23.0289001 55.1048,23.0289001 L55.1048,57.5839001 C55.1048,58.7289001 54.1758,59.6589001 53.0298,59.6589001\"\n                    id=\"Front-right\"\n                    fill=\"#2C79C5\"\n                />\n            </g>\n        </g>\n    </svg>\n);\n\nexport default SpotlightLetter;\n","import React from 'react';\nimport Lenke from 'nav-frontend-lenker';\nimport { Normaltekst, Sidetittel } from 'nav-frontend-typografi';\nimport { FormattedMessage } from 'react-intl';\nimport dayjs from 'dayjs';\nimport Person from 'app/types/Person';\nimport { Kvittering } from 'app/types/Kvittering';\nimport { bemUtils, Block, VedleggIkon } from '@navikt/fp-common';\nimport { openPdfPreview } from 'app/utils/pdfUtils';\nimport SpotlightLetter from 'app/assets/SpotlightLetter';\n\nimport './kvitteringHeader.less';\n\ninterface Props {\n    søker: Person;\n    kvittering: Kvittering;\n}\n\nconst KvitteringHeader: React.FunctionComponent<Props> = ({ søker, kvittering }) => {\n    const bem = bemUtils('kvitteringHeader');\n    const { pdf, mottattDato } = kvittering;\n\n    return (\n        <div className={bem.block}>\n            <Block padBottom=\"l\">\n                <SpotlightLetter className={bem.element('spotlightLetter')} />\n            </Block>\n\n            <Block padBottom=\"l\">\n                <Sidetittel tag=\"h1\">\n                    <FormattedMessage\n                        id=\"søknadSendt.tittel\"\n                        values={{\n                            name: `${søker.fornavn} ${søker.etternavn}`,\n                        }}\n                    />\n                </Sidetittel>\n            </Block>\n\n            <Block padBottom=\"l\" visible={pdf !== undefined}>\n                <div className={bem.element('vedleggWrapper')}>\n                    <VedleggIkon className={bem.element('vedleggIkon')} width={20} height={20} />\n                    <Lenke\n                        className={bem.element('vedleggLink')}\n                        href={'#'}\n                        onClick={(e) => {\n                            e.preventDefault();\n                            openPdfPreview(pdf);\n                        }}\n                    >\n                        <FormattedMessage id={'søknadSendt.pdf'} />\n                    </Lenke>\n                </div>\n            </Block>\n\n            <Block padBottom=\"l\">\n                <div className={bem.element('sendtInnTid')}>\n                    <Normaltekst>\n                        <FormattedMessage id=\"søknadSendt.sendtInn\" />\n                    </Normaltekst>\n                    <span style={{ width: '0.25rem' }} />\n                    {dayjs(mottattDato).format('D. MMMM YYYY')}, kl. {dayjs(mottattDato).format('HH:mm')}\n                </div>\n            </Block>\n        </div>\n    );\n};\n\nexport default KvitteringHeader;\n","import React, { FunctionComponent } from 'react';\nimport { Undertittel, Normaltekst } from 'nav-frontend-typografi';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { MissingAttachment } from 'app/types/MissingAttachment';\nimport { guid } from 'nav-frontend-js-utils';\nimport { AdvarselIkon, bemUtils, Block, intlUtils, UtvidetInformasjon } from '@navikt/fp-common';\nimport CheckmarkIkon from 'app/assets/CheckmarkIkon';\n\nimport './kvitteringSuksess.less';\n\ninterface Props {\n    missingAttachments: MissingAttachment[];\n}\n\nconst KvitteringSuksess: FunctionComponent<Props> = ({ missingAttachments }) => {\n    const intl = useIntl();\n    const bem = bemUtils('kvittering');\n    const isMissingAttachments = missingAttachments.length > 0;\n\n    return (\n        <div className={bem.block}>\n            <div\n                className={bem.classNames(\n                    bem.element('suksess'),\n                    bem.modifierConditional('mangler-vedlegg', isMissingAttachments)\n                )}\n            >\n                <div className={bem.element('ikon')}>{isMissingAttachments ? <AdvarselIkon /> : <CheckmarkIkon />}</div>\n                <div className={bem.element('tekst')}>\n                    <Block padBottom=\"l\">\n                        <Undertittel>\n                            <FormattedMessage\n                                id={\n                                    isMissingAttachments\n                                        ? 'søknadSendt.info.tittel.isMissingAttachments'\n                                        : 'søknadSendt.info.tittel'\n                                }\n                            />\n                        </Undertittel>\n                    </Block>\n                    <div>\n                        <Normaltekst>\n                            <FormattedMessage\n                                id={\n                                    isMissingAttachments\n                                        ? 'søknadSendt.info.innhold.isMissingAttachments'\n                                        : 'søknadSendt.info.innhold'\n                                }\n                            />\n                        </Normaltekst>\n                        {isMissingAttachments && (\n                            <>\n                                <ul>\n                                    {missingAttachments.map((a) => (\n                                        <li key={guid()}>\n                                            <Normaltekst>\n                                                <FormattedMessage\n                                                    id={`søknadSendt.info.missingAttachment.${a.skjemanummer}`}\n                                                />\n                                            </Normaltekst>\n                                        </li>\n                                    ))}\n                                </ul>\n\n                                <UtvidetInformasjon\n                                    apneLabel={intlUtils(intl, 'søknadSendt.info.missingAttachment.lesMer')}\n                                >\n                                    <Normaltekst>\n                                        <FormattedMessage id=\"søknadSendt.info.missingAttachment.lesMer.content\" />\n                                    </Normaltekst>\n                                </UtvidetInformasjon>\n                            </>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default KvitteringSuksess;\n","import React, { FunctionComponent } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport EtikettBase from 'nav-frontend-etiketter';\nimport { LenkepanelBase } from 'nav-frontend-lenkepanel';\nimport { Undertittel, Ingress, Systemtittel, Normaltekst } from 'nav-frontend-typografi';\nimport links from 'app/links/links';\nimport { bemUtils, Block } from '@navikt/fp-common';\n\nimport './statusBoks.less';\n\ninterface Props {\n    saksNr: string;\n}\n\nconst StatusBoks: FunctionComponent<Props> = ({ saksNr }) => {\n    const bem = bemUtils('statusBoks');\n\n    return (\n        <Block>\n            <Block padBottom=\"l\">\n                <Systemtittel>\n                    <FormattedMessage id=\"søknadSendt.status.tittel\" />\n                </Systemtittel>\n            </Block>\n            <LenkepanelBase href={links.innsyn} border={true} className=\"statusBoks__lenkepanel\">\n                <div className={bem.block}>\n                    <div className={bem.element('left')}>\n                        <Block padBottom=\"l\">\n                            <Undertittel tag=\"h3\">\n                                <FormattedMessage id=\"søknadSendt.status.undertittel\" />\n                            </Undertittel>\n                        </Block>\n                        <EtikettBase type=\"fokus\">\n                            <FormattedMessage id=\"søknadSendt.status.status\" />\n                        </EtikettBase>\n                    </div>\n                    {saksNr && (\n                        <div className={bem.element('right')}>\n                            <Normaltekst>\n                                <FormattedMessage id=\"søknadSendt.status.saksnummer\" />\n                            </Normaltekst>\n                            <Ingress>{saksNr}</Ingress>\n                        </div>\n                    )}\n                </div>\n            </LenkepanelBase>\n        </Block>\n    );\n};\n\nexport default StatusBoks;\n","import * as React from 'react';\n\nconst UtbetalingerIkon = (props: any) => {\n    const { title, ...rest } = props;\n    return (\n        <svg focusable=\"false\" role=\"img\" aria-hidden=\"true\" width={46} height={37} {...rest}>\n            <g transform=\"translate(0 -6)\" fill=\"none\" fillRule=\"evenodd\">\n                <path fill=\"#E3B0A8\" d=\"M3.538 6.708H46v23.048H3.538z\" />\n                <path fill=\"#F1D8D4\" d=\"M37.153 6.708h5.308v23.048h-5.308z\" />\n                <path fill=\"#C2EAF7\" d=\"M1.77 8.481H44.23V31.53H1.77z\" />\n                <path fill=\"#E0F5FB\" d=\"M35.384 8.481h5.308V31.53h-5.308z\" />\n                <path fill=\"#9BD0B0\" d=\"M0 10.254h42.462v23.048H0z\" />\n                <path fill=\"#CDE7D8\" d=\"M33.615 10.254h5.308v23.048h-5.308z\" />\n                <path\n                    d=\"M5.308 20.775v-6.853h1.07l4.14 5.38v-5.38h1v6.853h-1.07l-4.14-5.386v5.386h-1zm7.645-3.338c0-1.138.351-2.028 1.054-2.672.702-.643 1.609-.965 2.72-.965.728 0 1.384.151 1.968.453.584.303 1.03.724 1.336 1.265.306.54.46 1.154.46 1.84 0 .695-.162 1.316-.484 1.865-.323.548-.78.964-1.371 1.246a4.389 4.389 0 0 1-1.914.423c-.742 0-1.405-.156-1.99-.468a3.205 3.205 0 0 1-1.328-1.276 3.457 3.457 0 0 1-.451-1.711zm1.075.014c0 .826.255 1.476.766 1.952.511.475 1.152.713 1.922.713.785 0 1.431-.24 1.938-.72.508-.48.761-1.161.761-2.043 0-.558-.108-1.045-.325-1.461a2.29 2.29 0 0 0-.952-.968 2.874 2.874 0 0 0-1.406-.343c-.738 0-1.373.22-1.905.661-.533.441-.799 1.177-.799 2.209zm7.764 3.324v-6.853h1.043v3.398l3.914-3.398h1.414l-3.307 2.776 3.452 4.077H26.93l-2.806-3.469-1.29 1.094v2.375h-1.043z\"\n                    fill=\"#117938\"\n                />\n                <ellipse fill=\"#FECB86\" fillRule=\"nonzero\" cx={8.846} cy={35.075} rx={7.077} ry={7.092} />\n                <path\n                    d=\"M19.462 42.167a5.313 5.313 0 0 1-5.308-5.32 5.313 5.313 0 0 1 5.308-5.318 5.313 5.313 0 0 1 5.307 5.319 5.313 5.313 0 0 1-5.307 5.319zm0-3.546c.977 0 1.769-.794 1.769-1.773 0-.98-.792-1.773-1.77-1.773-.977 0-1.769.794-1.769 1.773 0 .98.792 1.773 1.77 1.773z\"\n                    fill=\"#F0F2F2\"\n                    fillRule=\"nonzero\"\n                />\n            </g>\n        </svg>\n    );\n};\n\nexport default UtbetalingerIkon;\n","import * as React from 'react';\n\nconst KalenderIkon = (props: any) => (\n    <svg focusable=\"false\" role=\"img\" aria-hidden=\"true\" width={34} height={31} {...props}>\n        <title>{'Group'}</title>\n        <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n                d=\"M25.185 4.428c0-.698.564-1.265 1.26-1.265.694 0 1.259.567 1.259 1.265 0 .7-.565 1.266-1.26 1.266-.695 0-1.259-.567-1.259-1.266zm-18.889 0c0-.698.564-1.265 1.26-1.265.695 0 1.259.567 1.259 1.265 0 .7-.564 1.266-1.26 1.266a1.262 1.262 0 0 1-1.259-1.266zM31.79 0H2.21A2.2 2.2 0 0 0 0 2.191v6.033h34V2.191c0-.907-.557-1.686-1.35-2.02A2.224 2.224 0 0 0 31.79 0z\"\n                fill=\"#C42229\"\n            />\n            <path d=\"M0 8.224v20.522C0 29.99.99 31 2.21 31h29.58c1.22 0 2.21-1.01 2.21-2.254V8.224H0z\" fill=\"#E3E3DA\" />\n            <g fillRule=\"nonzero\">\n                <path\n                    d=\"M6.93 13.918a.633.633 0 1 1 0-1.265h20.14a.633.633 0 1 1 0 1.265H6.93zM6.93 18.347a.633.633 0 1 1 0-1.265h20.14a.633.633 0 1 1 0 1.265H6.93z\"\n                    fill=\"#78706A\"\n                />\n                <path\n                    d=\"M21.407 20.878a3.156 3.156 0 0 1-3.148-3.164 3.156 3.156 0 0 1 3.148-3.163 3.156 3.156 0 0 1 3.149 3.163 3.156 3.156 0 0 1-3.149 3.164zm0-1.266c1.044 0 1.89-.85 1.89-1.898a1.893 1.893 0 0 0-1.89-1.898c-1.043 0-1.888.85-1.888 1.898s.845 1.898 1.888 1.898z\"\n                    fill=\"#06893A\"\n                />\n                <path\n                    d=\"M6.93 22.776a.633.633 0 1 1 0-1.266h20.14a.633.633 0 1 1 0 1.266H6.93zM6.93 27.204a.633.633 0 1 1 0-1.265h20.14a.633.633 0 1 1 0 1.265H6.93z\"\n                    fill=\"#78706A\"\n                />\n            </g>\n        </g>\n    </svg>\n);\n\nexport default KalenderIkon;\n","import * as React from 'react';\n\nconst KoffertIkon = (props: any) => (\n    <svg focusable=\"false\" role=\"img\" aria-hidden=\"true\" width={36} height={36} viewBox=\"0 0 48 48\" {...props}>\n        <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n                fill=\"#593A32\"\n                d=\"M45.646 42H2.354a.811.811 0 0 1-.806-.816V22.468c0-.45.361-.816.806-.816h43.292c.445 0 .806.366.806.816v18.716c0 .45-.361.816-.806.816\"\n            />\n            <path\n                fill=\"#333\"\n                d=\"M1.548 27.913h44.904V24H1.548zm28.646-18H28.65V8.786c0-.624-.47-1.13-1.052-1.13h-7.197c-.582 0-1.054.506-1.054 1.13v1.127h-1.542V8.626C17.805 7.176 18.9 6 20.251 6h7.496c1.351 0 2.446 1.176 2.446 2.626v1.287z\"\n            />\n            <path\n                fill=\"#723B30\"\n                d=\"M47.206 27.02a.79.79 0 0 0 .794-.783V10.696a.789.789 0 0 0-.794-.783H.794a.789.789 0 0 0-.794.783v15.54c0 .433.356.783.794.783h46.412z\"\n            />\n            <path\n                fill=\"#333\"\n                d=\"M21.61 30.26c-1.243 0-2.255-.945-2.255-2.108V26.89c0-1.162 1.012-2.107 2.255-2.107h4.78c1.244 0 2.255.945 2.255 2.107v1.262c0 1.163-1.011 2.109-2.255 2.109h-4.78z\"\n            />\n            <path\n                fill=\"#F79221\"\n                d=\"M26.432 25.565h-4.864c-.794 0-1.439.594-1.439 1.325v1.264c0 .732.645 1.324 1.44 1.324h4.863c.794 0 1.439-.592 1.439-1.324V26.89c0-.731-.645-1.325-1.44-1.325\"\n            />\n        </g>\n    </svg>\n);\n\nexport default KoffertIkon;\n","import React, { FunctionComponent } from 'react';\nimport UtbetalingerIkon from 'app/assets/CashIkon';\nimport KalenderIkon from 'app/assets/KalenderIkon';\nimport KoffertIkon from 'app/assets/KoffertIkon';\n\ninterface Props {\n    type: OppsummeringIkonType;\n    className?: string;\n}\n\nexport type OppsummeringIkonType = 'koffert' | 'kalender' | 'cash';\n\nconst SendSøknadIkon: FunctionComponent<Props> = ({ type, className }) => {\n    switch (type) {\n        case 'cash':\n            return <UtbetalingerIkon className={className} width={48} height={48} />;\n        case 'koffert':\n            return <KoffertIkon className={className} width={48} height={48} />;\n        case 'kalender':\n            return <KalenderIkon className={className} width={48} height={48} />;\n        default:\n            return null;\n    }\n};\nexport default SendSøknadIkon;\n","import React, { FunctionComponent, ReactNode } from 'react';\n\nimport SendSøknadIkon, { OppsummeringIkonType } from './SendSøknadIkon';\nimport { bemUtils, UtvidetInformasjon } from '@navikt/fp-common';\nimport { Normaltekst, Undertittel } from 'nav-frontend-typografi';\n\nimport './søknadSendtSectionHeader.less';\n\ninterface Props {\n    title: ReactNode;\n    info?: ReactNode;\n    infoApneLabel?: ReactNode;\n    type: OppsummeringIkonType;\n    children?: ReactNode;\n}\n\nconst SøknadSendtSectionHeader: FunctionComponent<Props> = ({ title, info, type, infoApneLabel, children }) => {\n    const bem = bemUtils('søknadSendtSectionHeader');\n\n    return (\n        <section className={bem.block}>\n            <div className={bem.element('punkt')}>\n                <div className={bem.element('ikon')}>\n                    <SendSøknadIkon type={type} />\n                </div>\n                <div className={bem.element('content')}>\n                    <Undertittel>{title}</Undertittel>\n                    <UtvidetInformasjon apneLabel={infoApneLabel}>\n                        <Normaltekst>{info}</Normaltekst>\n                    </UtvidetInformasjon>\n                    {children}\n                </div>\n            </div>\n        </section>\n    );\n};\n\nexport default SøknadSendtSectionHeader;\n","import React from 'react';\nimport { Undertittel } from 'nav-frontend-typografi';\n\nimport './søknadSendtTittel.less';\n\nconst SøknadSendtTittel = () => (\n    <div className=\"søknadSendtTittel\" role=\"main\" aria-label=\"Foreldrepengesøknaden\">\n        <Undertittel>Foreldrepengesøknaden</Undertittel>\n    </div>\n);\n\nexport default SøknadSendtTittel;\n","import React, { useEffect } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Lenke from 'nav-frontend-lenker';\nimport { Ingress, Normaltekst } from 'nav-frontend-typografi';\n\nimport KvitteringHeader from './components/KvitteringHeader';\nimport KvitteringSuksess from './components/KvitteringSuksess';\nimport StatusBoks from './components/StatusBoks';\nimport SøknadSendtSectionHeader from './components/SøknadSendtSectionHeader';\nimport { bemUtils, Block, intlUtils, useDocumentTitle } from '@navikt/fp-common';\nimport { openPdfPreview } from 'app/utils/pdfUtils';\nimport links from 'app/links/links';\nimport { logAmplitudeEvent, PageKeys } from 'app/amplitude/amplitude';\nimport dayjs from 'dayjs';\nimport NavFrontendSpinner from 'nav-frontend-spinner';\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\nimport { Periodene } from 'app/steps/uttaksplan-info/utils/Periodene';\nimport SøknadSendtTittel from './components/SøknadSendtTittel';\nimport { useForeldrepengesøknadContext } from 'app/context/hooks/useForeldrepengesøknadContext';\nimport { Periode } from 'uttaksplan/types/Periode';\n\nimport './søknadSendt.less';\nimport { formaterDato } from 'app/utils/dateUtils';\nimport { finnSendSenereVedlegg } from 'app/steps/manglende-vedlegg/util';\n\nconst getBehandlingsFrist = (uttaksplan: Periode[]): string => {\n    const førsteUttaksdag = dayjs(Periodene(uttaksplan).getFørsteUttaksdagEksluderInfoperioderOgFrittUttak()).subtract(\n        4,\n        'weeks'\n    );\n\n    const førsteMuligeBehandlingsfrist = dayjs(new Date()).isSameOrAfter(førsteUttaksdag, 'day')\n        ? new Date()\n        : førsteUttaksdag.toDate();\n\n    return formaterDato(førsteMuligeBehandlingsfrist);\n};\n\nconst SøknadSendt = () => {\n    const søkerinfo = useSøkerinfo();\n    const { state } = useForeldrepengesøknadContext();\n    const { kvittering, søknad } = state;\n    const { uttaksplan } = søknad;\n    const alleSendSenereVedlegg = finnSendSenereVedlegg(søknad);\n    const missingAttachments = Array.from(alleSendSenereVedlegg.values());\n    const { erEndringssøknad } = søknad;\n    const behandlingsFrist = getBehandlingsFrist(uttaksplan);\n    const intl = useIntl();\n    const { person, arbeidsforhold } = søkerinfo;\n    const bem = bemUtils('søknadSendt');\n    useDocumentTitle(intlUtils(intl, 'søknad.søknadSendt'));\n\n    useEffect(() => {\n        logAmplitudeEvent('sidevisning', {\n            app: 'foreldrepengesoknad',\n            team: 'foreldrepenger',\n            pageKey: PageKeys.SøknadSendt,\n        });\n    }, []);\n\n    if (!kvittering) {\n        return (\n            <div style={{ textAlign: 'center', padding: '12rem 0' }}>\n                <NavFrontendSpinner type=\"XXL\" />\n            </div>\n        );\n    }\n\n    return (\n        <>\n            <SøknadSendtTittel />\n            <div className={bem.block}>\n                <KvitteringHeader søker={person} kvittering={kvittering} />\n\n                <Block padBottom=\"l\">\n                    <KvitteringSuksess missingAttachments={missingAttachments} />\n                </Block>\n\n                {!erEndringssøknad && (\n                    <>\n                        <Block padBottom=\"l\">\n                            <SøknadSendtSectionHeader\n                                title={intlUtils(intl, 'søknadSendt.når.tittel')}\n                                type=\"kalender\"\n                                info={intlUtils(intl, 'søknadSendt.når.infoBox')}\n                                infoApneLabel={intlUtils(intl, 'søknadSendt.når.infoBox.apneLabel')}\n                            >\n                                <Normaltekst>{behandlingsFrist}</Normaltekst>\n                            </SøknadSendtSectionHeader>\n                        </Block>\n\n                        {arbeidsforhold && arbeidsforhold.length > 0 && (\n                            <Block padBottom=\"l\">\n                                <SøknadSendtSectionHeader\n                                    title={intlUtils(intl, 'søknadSendt.infoFraArbeidsgiver.tittel')}\n                                    type=\"koffert\"\n                                    info={intlUtils(intl, 'søknadSendt.infoFraArbeidsgiver.infoBox')}\n                                    infoApneLabel={intlUtils(intl, 'søknadSendt.infoFraArbeidsgiver.infoBox.apneLabel')}\n                                >\n                                    <Block padBottom=\"l\">\n                                        <Normaltekst>\n                                            <FormattedMessage id={'søknadSendt.infoFraArbeidsgiver.del1'} />\n                                        </Normaltekst>\n                                    </Block>\n                                    <Normaltekst>\n                                        <Lenke\n                                            href={'#'}\n                                            onClick={(e) => {\n                                                e.preventDefault();\n                                                openPdfPreview(kvittering.infoskrivPdf);\n                                            }}\n                                        >\n                                            <FormattedMessage id={'søknadSendt.infoFraArbeidsgiver.del2'} />\n                                        </Lenke>\n                                    </Normaltekst>\n                                </SøknadSendtSectionHeader>\n                            </Block>\n                        )}\n\n                        <Block padBottom=\"l\">\n                            <SøknadSendtSectionHeader\n                                title={intlUtils(intl, 'søknadSendt.pengene.tittel')}\n                                type=\"cash\"\n                                info={intlUtils(intl, 'søknadSendt.pengene.infoBox')}\n                                infoApneLabel={intlUtils(intl, 'søknadSendt.pengene.infoBox.apneLabel')}\n                            >\n                                {person.bankkonto && person.bankkonto.kontonummer ? (\n                                    <>\n                                        <Block padBottom=\"l\">\n                                            <Normaltekst>\n                                                <FormattedMessage id=\"søknadSendt.pengene.kontonummer\" />\n                                            </Normaltekst>\n                                        </Block>\n                                        <Block padBottom=\"l\">\n                                            <Ingress>{person.bankkonto && person.bankkonto.kontonummer}</Ingress>\n                                        </Block>\n                                        <Block padBottom=\"l\">\n                                            <Normaltekst>\n                                                <Lenke href={links.brukerprofil}>\n                                                    <FormattedMessage id=\"søknadSendt.pengene.kontonummer.endre\" />\n                                                </Lenke>\n                                            </Normaltekst>\n                                        </Block>\n                                    </>\n                                ) : (\n                                    <>\n                                        <Block padBottom=\"l\">\n                                            <Normaltekst>\n                                                <FormattedMessage id=\"søknadSendt.pengene.ingenKontonummer\" />\n                                            </Normaltekst>\n                                        </Block>\n                                        <Block padBottom=\"l\">\n                                            <Normaltekst>\n                                                <Lenke href={links.brukerprofil}>\n                                                    <FormattedMessage id=\"søknadSendt.pengene.kontonummer.leggTil\" />\n                                                </Lenke>\n                                            </Normaltekst>\n                                        </Block>\n                                    </>\n                                )}\n                            </SøknadSendtSectionHeader>\n                        </Block>\n                    </>\n                )}\n\n                <StatusBoks saksNr={kvittering.saksNr} />\n            </div>\n        </>\n    );\n};\n\nexport default SøknadSendt;\n","import { Attachment, InnsendingsType } from 'app/types/Attachment';\nimport { AttachmentType } from 'app/types/AttachmentType';\n\nconst isArrayOfAttachments = (object: any) => {\n    return (\n        Array.isArray(object) &&\n        object[0] !== null &&\n        object.some((element) => element && element.innsendingsType === InnsendingsType.SEND_SENERE)\n    );\n};\n\nexport const isAttachmentForPeriode = (type: AttachmentType) =>\n    type === AttachmentType.UTSETTELSE_SYKDOM ||\n    type === AttachmentType.MORS_AKTIVITET_DOKUMENTASJON ||\n    type === AttachmentType.HV_ØVELSE ||\n    type === AttachmentType.NAV_TILTAK ||\n    type === AttachmentType.OVERFØRING_KVOTE;\n\nexport const finnSendSenereVedlegg = (\n    object: any,\n    currentKey?: string,\n    previousEntries?: Map<string, Attachment[]>\n): Map<string, Attachment> => {\n    if (object === null || object === undefined) {\n        return new Map();\n    }\n\n    const path: string = currentKey || 'søknad';\n    let foundAttachments = previousEntries || new Map();\n    Object.keys(object).forEach((key: string) => {\n        if (typeof object[key] === 'object') {\n            if (isArrayOfAttachments(object[key])) {\n                foundAttachments.set(path + '.' + key, object[key][0]);\n            } else {\n                foundAttachments = finnSendSenereVedlegg(object[key], path + '.' + key, foundAttachments);\n            }\n        }\n    });\n    return foundAttachments;\n};\n"],"names":["CheckmarkIkon","props","React","_extends","focusable","role","width","height","fill","fillRule","d","base64ToArrayBuffer","base64","binaryString","window","atob","bytes","Uint8Array","length","i","charCodeAt","openPdfPreview","browserInfo","detect","pdfBlob","Blob","type","name","navigator","msSaveOrOpenBlob","open","URL","createObjectURL","SpotlightLetter","viewBox","version","xmlns","id","cx","cy","r","stroke","strokeWidth","xlinkHref","transform","KvitteringHeader","_ref","søker","kvittering","bem","bemUtils","pdf","mottattDato","className","block","Block","padBottom","element","Sidetittel","tag","FormattedMessage","values","concat","fornavn","etternavn","visible","undefined","VedleggIkon","Lenke","href","onClick","e","preventDefault","Normaltekst","style","dayjs","format","KvitteringSuksess","missingAttachments","intl","useIntl","isMissingAttachments","classNames","modifierConditional","AdvarselIkon","Undertittel","map","a","key","guid","skjemanummer","UtvidetInformasjon","apneLabel","intlUtils","StatusBoks","saksNr","Systemtittel","LenkepanelBase","links","border","EtikettBase","Ingress","UtbetalingerIkon","title","rest","_objectWithoutProperties","_excluded","rx","ry","KalenderIkon","KoffertIkon","SendSøknadIkon","SøknadSendtSectionHeader","info","infoApneLabel","children","SøknadSendtTittel","SøknadSendt","søkerinfo","useSøkerinfo","state","useForeldrepengesøknadContext","søknad","uttaksplan","alleSendSenereVedlegg","finnSendSenereVedlegg","Array","from","erEndringssøknad","behandlingsFrist","getBehandlingsFrist","førsteUttaksdag","Periodene","getFørsteUttaksdagEksluderInfoperioderOgFrittUttak","subtract","førsteMuligeBehandlingsfrist","Date","isSameOrAfter","toDate","formaterDato","person","arbeidsforhold","useDocumentTitle","useEffect","logAmplitudeEvent","app","team","pageKey","PageKeys","infoskrivPdf","bankkonto","kontonummer","textAlign","padding","NavFrontendSpinner","isAttachmentForPeriode","AttachmentType","object","currentKey","previousEntries","Map","path","foundAttachments","Object","keys","forEach","_typeof","isArrayOfAttachments","isArray","some","innsendingsType","InnsendingsType","set"],"sourceRoot":""}