{"version":3,"file":"7120.94c3699b.iframe.bundle.js","mappings":"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","sources":["webpack://foreldrepengesoknad/../../node_modules/.pnpm/@sentry+utils@7.45.0/node_modules/@sentry/utils/esm/misc.js","webpack://foreldrepengesoknad/../../node_modules/.pnpm/@sentry+utils@7.45.0/node_modules/@sentry/utils/esm/logger.js","webpack://foreldrepengesoknad/../../node_modules/.pnpm/@sentry+core@7.45.0/node_modules/@sentry/core/esm/constants.js","webpack://foreldrepengesoknad/../../node_modules/.pnpm/@sentry+utils@7.45.0/node_modules/@sentry/utils/esm/is.js","webpack://foreldrepengesoknad/../../node_modules/.pnpm/@sentry+utils@7.45.0/node_modules/@sentry/utils/esm/syncpromise.js","webpack://foreldrepengesoknad/../../node_modules/.pnpm/@sentry+utils@7.45.0/node_modules/@sentry/utils/esm/object.js","webpack://foreldrepengesoknad/../../node_modules/.pnpm/@sentry+core@7.45.0/node_modules/@sentry/core/esm/session.js","webpack://foreldrepengesoknad/../../node_modules/.pnpm/@sentry+core@7.45.0/node_modules/@sentry/core/esm/scope.js","webpack://foreldrepengesoknad/../../node_modules/.pnpm/@sentry+core@7.45.0/node_modules/@sentry/core/esm/hub.js","webpack://foreldrepengesoknad/../../node_modules/.pnpm/@sentry+core@7.45.0/node_modules/@sentry/core/esm/exports.js","webpack://foreldrepengesoknad/../../node_modules/.pnpm/@sentry+utils@7.45.0/node_modules/@sentry/utils/esm/node.js","webpack://foreldrepengesoknad/../../node_modules/.pnpm/@sentry+utils@7.45.0/node_modules/@sentry/utils/esm/env.js","webpack://foreldrepengesoknad/../../node_modules/.pnpm/@sentry+utils@7.45.0/node_modules/@sentry/utils/esm/time.js","webpack://foreldrepengesoknad/../../node_modules/.pnpm/@sentry+utils@7.45.0/node_modules/@sentry/utils/esm/worldwide.js"],"sourcesContent":["import { addNonEnumerableProperty } from './object.js';\nimport { snipLine } from './string.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  const gbl = GLOBAL_OBJ ;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  if (crypto && crypto.randomUUID) {\n    return crypto.randomUUID().replace(/-/g, '');\n  }\n\n  const getRandomByte =\n    crypto && crypto.getRandomValues ? () => crypto.getRandomValues(new Uint8Array(1))[0] : () => Math.random() * 16;\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c ) ^ ((getRandomByte() & 15) >> ((c ) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception ).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nfunction arrayify(maybeArray) {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n\nexport { addContextToFrame, addExceptionMechanism, addExceptionTypeValue, arrayify, checkOrSetAlreadyCaught, getEventDescription, parseSemver, uuid4 };\n//# sourceMappingURL=misc.js.map\n","import { getGlobalSingleton, GLOBAL_OBJ } from './worldwide.js';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nconst CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert', 'trace'] ;\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const originalConsole = GLOBAL_OBJ.console ;\n  const wrappedLevels = {};\n\n  // Restore all wrapped console methods\n  CONSOLE_LEVELS.forEach(level => {\n    // TODO(v7): Remove this check as it's only needed for Node 6\n    const originalWrappedFunc =\n      originalConsole[level] && (originalConsole[level] ).__sentry_original__;\n    if (level in originalConsole && originalWrappedFunc) {\n      wrappedLevels[level] = originalConsole[level] ;\n      originalConsole[level] = originalWrappedFunc ;\n    }\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(level => {\n      originalConsole[level] = wrappedLevels[level ];\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  const logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n  };\n\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nlet logger;\nif ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n  logger = getGlobalSingleton('logger', makeLogger);\n} else {\n  logger = makeLogger();\n}\n\nexport { CONSOLE_LEVELS, consoleSandbox, logger };\n//# sourceMappingURL=logger.js.map\n","const DEFAULT_ENVIRONMENT = 'production';\n\nexport { DEFAULT_ENVIRONMENT };\n//# sourceMappingURL=constants.js.map\n","// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat, className) {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\nexport { isDOMError, isDOMException, isElement, isError, isErrorEvent, isEvent, isInstanceOf, isNaN, isPlainObject, isPrimitive, isRegExp, isString, isSyntheticEvent, isThenable };\n//# sourceMappingURL=is.js.map\n","import { isThenable } from './is.js';\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  const PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  const RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  const REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n   __init() {this._state = States.PENDING;}\n   __init2() {this._handlers = [];}\n\n   constructor(\n    executor,\n  ) {SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);SyncPromise.prototype.__init5.call(this);SyncPromise.prototype.__init6.call(this);\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init3() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init4() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init5() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init6() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\nexport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise };\n//# sourceMappingURL=syncpromise.js.map\n","import { htmlTreeAsString } from './browser.js';\nimport { isError, isEvent, isInstanceOf, isElement, isPlainObject, isPrimitive } from './is.js';\nimport { truncate } from './string.js';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] ;\n  const wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      markFunctionWrapped(wrapped, original);\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  Object.defineProperty(obj, name, {\n    // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n    value: value,\n    writable: true,\n    configurable: true,\n  });\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  const proto = original.prototype || {};\n  wrapped.prototype = original.prototype = proto;\n  addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(value)\n\n {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if (isPlainObject(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\nexport { addNonEnumerableProperty, convertToPlainObject, dropUndefinedKeys, extractExceptionKeysForMessage, fill, getOriginalFunction, markFunctionWrapped, objectify, urlEncode };\n//# sourceMappingURL=object.js.map\n","import { timestampInSeconds, uuid4, dropUndefinedKeys } from '@sentry/utils';\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nfunction makeSession(context) {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nfunction updateSession(session, context = {}) {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nfunction closeSession(session, status) {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session) {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n\nexport { closeSession, makeSession, updateSession };\n//# sourceMappingURL=session.js.map\n","import { isPlainObject, dateTimestampInSeconds, SyncPromise, logger, isThenable, arrayify, getGlobalSingleton } from '@sentry/utils';\nimport { updateSession } from './session.js';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nclass Scope  {\n  /** Flag if notifying is happening. */\n\n  /** Callback for client to receive scope changes. */\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n\n  /** Array of breadcrumbs. */\n\n  /** User */\n\n  /** Tags */\n\n  /** Extra */\n\n  /** Contexts */\n\n  /** Attachments */\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n\n  /** Fingerprint */\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n\n  /** Transaction Name */\n\n  /** Span */\n\n  /** Session */\n\n  /** Request Mode Session Status */\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n   constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n   static clone(scope) {\n    const newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n      newScope._requestSession = scope._requestSession;\n      newScope._attachments = [...scope._attachments];\n      newScope._sdkProcessingMetadata = { ...scope._sdkProcessingMetadata };\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n   addScopeListener(callback) {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addEventProcessor(callback) {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this._user = user || {};\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getUser() {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getRequestSession() {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setRequestSession(requestSession) {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setFingerprint(fingerprint) {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n  ) {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTransactionName(name) {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSpan(span) {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSpan() {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransaction() {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this.getSpan();\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSession(session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSession() {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   update(captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      const updatedScope = (captureContext )(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n      if (captureContext._requestSession) {\n        this._requestSession = captureContext._requestSession;\n      }\n    } else if (isPlainObject(captureContext)) {\n      // eslint-disable-next-line no-param-reassign\n      captureContext = captureContext ;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n      if (captureContext.requestSession) {\n        this._requestSession = captureContext.requestSession;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clear() {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, maxBreadcrumbs) {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n    this._breadcrumbs = [...this._breadcrumbs, mergedBreadcrumb].slice(-maxCrumbs);\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getLastBreadcrumb() {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearBreadcrumbs() {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addAttachment(attachment) {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getAttachments() {\n    return this._attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearAttachments() {\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   */\n   applyToEvent(event, hint = {}) {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relies on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      const transactionName = this._span.transaction && this._span.transaction.name;\n      if (transactionName) {\n        event.tags = { transaction: transactionName, ...event.tags };\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    event.sdkProcessingMetadata = { ...event.sdkProcessingMetadata, ...this._sdkProcessingMetadata };\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n   setSDKProcessingMetadata(newData) {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n   _notifyEventProcessors(\n    processors,\n    event,\n    hint,\n    index = 0,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      const processor = processors[index];\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        const result = processor({ ...event }, hint) ;\n\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          processor.id &&\n          result === null &&\n          logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n        if (isThenable(result)) {\n          void result\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          void this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n   _notifyScopeListeners() {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n   _applyFingerprint(event) {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint ? arrayify(event.fingerprint) : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\n/**\n * Returns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n  return getGlobalSingleton('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nfunction addGlobalEventProcessor(callback) {\n  getGlobalEventProcessors().push(callback);\n}\n\nexport { Scope, addGlobalEventProcessor };\n//# sourceMappingURL=scope.js.map\n","import { uuid4, dateTimestampInSeconds, consoleSandbox, logger, GLOBAL_OBJ, isNodeEnv, getGlobalSingleton } from '@sentry/utils';\nimport { DEFAULT_ENVIRONMENT } from './constants.js';\nimport { Scope } from './scope.js';\nimport { closeSession, makeSession, updateSession } from './session.js';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nconst API_VERSION = 4;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * A layer in the process stack.\n * @hidden\n */\n\n/**\n * @inheritDoc\n */\nclass Hub  {\n  /** Is a {@link Layer}[] containing the client and scope */\n\n  /** Contains the last event id of a captured event.  */\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n   constructor(client, scope = new Scope(),   _version = API_VERSION) {this._version = _version;\n    this._stack = [{ scope }];\n    if (client) {\n      this.bindClient(client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isOlderThan(version) {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   bindClient(client) {\n    const top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   pushScope() {\n    // We want to clone the content of prev scope\n    const scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   popScope() {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   withScope(callback) {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getClient() {\n    return this.getStackTop().client ;\n  }\n\n  /** Returns the scope of the top stack. */\n   getScope() {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n   getStack() {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n   getStackTop() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureException(exception, hint) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error('Sentry syntheticException');\n    this._withClient((client, scope) => {\n      client.captureException(\n        exception,\n        {\n          originalException: exception,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n  ) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error(message);\n    this._withClient((client, scope) => {\n      client.captureMessage(\n        message,\n        level,\n        {\n          originalException: message,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (!event.type) {\n      this._lastEventId = eventId;\n    }\n\n    this._withClient((client, scope) => {\n      client.captureEvent(event, { ...hint, event_id: eventId }, scope);\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, hint) {\n    const { scope, client } = this.getStackTop();\n\n    if (!client) return;\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    if (client.emit) {\n      client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n    }\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this.getScope().setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this.getScope().setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this.getScope().setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this.getScope().setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this.getScope().setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   setContext(name, context) {\n    this.getScope().setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   configureScope(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   run(callback) {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startTransaction(context, customSamplingContext) {\n    return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   traceHeaders() {\n    return this._callExtensionMethod('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(endSession = false) {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   endSession() {\n    const layer = this.getStackTop();\n    const scope = layer.scope;\n    const session = scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    scope.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startSession(context) {\n    const { scope, client } = this.getStackTop();\n    const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n    const session = makeSession({\n      release,\n      environment,\n      user: scope.getUser(),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    // End existing session if there's one\n    const currentSession = scope.getSession && scope.getSession();\n    if (currentSession && currentSession.status === 'ok') {\n      updateSession(currentSession, { status: 'exited' });\n    }\n    this.endSession();\n\n    // Afterwards we set the new session on the scope\n    scope.setSession(session);\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   */\n   shouldSendDefaultPii() {\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n   _sendSessionUpdate() {\n    const { scope, client } = this.getStackTop();\n    if (!scope) return;\n\n    const session = scope.getSession();\n    if (session) {\n      if (client && client.captureSession) {\n        client.captureSession(session);\n      }\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n   _withClient(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(client, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   _callExtensionMethod(method, ...args) {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  GLOBAL_OBJ.__SENTRY__ = GLOBAL_OBJ.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return GLOBAL_OBJ;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nfunction makeMain(hub) {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nfunction getCurrentHub() {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry) {\n  try {\n    const sentry = getMainCarrier().__SENTRY__;\n    const activeDomain = sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n\n    // If there's no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or it's an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      const registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nfunction getHubFromCarrier(carrier) {\n  return getGlobalSingleton('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nfunction setHubOnCarrier(carrier, hub) {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n\nexport { API_VERSION, Hub, getCurrentHub, getHubFromCarrier, getMainCarrier, makeMain, setHubOnCarrier };\n//# sourceMappingURL=hub.js.map\n","import { getCurrentHub } from './hub.js';\n\n// Note: All functions in this file are typed with a return value of `ReturnType<Hub[HUB_FUNCTION]>`,\n// where HUB_FUNCTION is some method on the Hub class.\n//\n// This is done to make sure the top level SDK methods stay in sync with the hub methods.\n// Although every method here has an explicit return type, some of them (that map to void returns) do not\n// contain `return` keywords. This is done to save on bundle size, as `return` is not minifiable.\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @param captureContext Additional scope data to apply to exception event.\n * @returns The generated eventId.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nfunction captureException(exception, captureContext) {\n  return getCurrentHub().captureException(exception, { captureContext });\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param Severity Define the level of the message.\n * @returns The generated eventId.\n */\nfunction captureMessage(\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext,\n) {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nfunction captureEvent(event, hint) {\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nfunction configureScope(callback) {\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nfunction addBreadcrumb(breadcrumb) {\n  getCurrentHub().addBreadcrumb(breadcrumb);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setContext(name, context) {\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nfunction setExtras(extras) {\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nfunction setExtra(key, extra) {\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nfunction setTags(tags) {\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nfunction setTag(key, value) {\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nfunction setUser(user) {\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nfunction withScope(callback) {\n  getCurrentHub().withScope(callback);\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nfunction startTransaction(\n  context,\n  customSamplingContext,\n) {\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n\nexport { addBreadcrumb, captureEvent, captureException, captureMessage, configureScope, setContext, setExtra, setExtras, setTag, setTags, setUser, startTransaction, withScope };\n//# sourceMappingURL=exports.js.map\n","import { isBrowserBundle } from './env.js';\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nfunction dynamicRequire(mod, request) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  let mod;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) ;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n\nexport { dynamicRequire, isNodeEnv, loadModule };\n//# sourceMappingURL=node.js.map\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nfunction getSDKSource() {\n  // @ts-ignore \"npm\" is injected by rollup during build process\n  return \"npm\";\n}\n\nexport { getSDKSource, isBrowserBundle };\n//# sourceMappingURL=env.js.map\n","import { isNodeEnv, dynamicRequire } from './node.js';\nimport { getGlobalObject } from './worldwide.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nconst dateTimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance() {\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  const timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance() {\n  try {\n    const perfHooks = dynamicRequire(module, 'perf_hooks') ;\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nconst platformPerformance = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nconst timestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nconst dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nconst timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n\n// Re-exported with an old name for backwards-compatibility.\nconst timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nconst usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nconst browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\nexport { _browserPerformanceTimeOriginMode, browserPerformanceTimeOrigin, dateTimestampInSeconds, timestampInSeconds, timestampWithMs, usingPerformanceAPI };\n//# sourceMappingURL=time.js.map\n","/** Internal global with common properties and Sentry extensions  */\n\n// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj) {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\n/** Get's the global object for the current JavaScript runtime */\nconst GLOBAL_OBJ =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof global == 'object' && isGlobalObj(global)) ||\n  (function () {\n    return this;\n  })() ||\n  {};\n\n/**\n * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8\n */\nfunction getGlobalObject() {\n  return GLOBAL_OBJ ;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  const gbl = (obj || GLOBAL_OBJ) ;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n\nexport { GLOBAL_OBJ, getGlobalObject, getGlobalSingleton };\n//# sourceMappingURL=worldwide.js.map\n"],"names":["uuid4","gbl","crypto","msCrypto","randomUUID","replace","getRandomByte","getRandomValues","Uint8Array","Math","random","c","toString","PREFIX","CONSOLE_LEVELS","consoleSandbox","callback","originalConsole","wrappedLevels","forEach","level","originalWrappedFunc","__sentry_original__","Object","keys","makeLogger","enabled","logger","enable","disable","__SENTRY_DEBUG__","name","args","DEFAULT_ENVIRONMENT","objectToString","prototype","isBuiltin","wat","className","call","isPlainObject","isThenable","Boolean","then","States","SyncPromise","__init","this","_state","PENDING","__init2","_handlers","constructor","executor","__init3","__init4","__init5","__init6","_resolve","_reject","e","onfulfilled","onrejected","resolve","reject","push","result","reason","_executeHandlers","catch","val","finally","onfinally","isRejected","value","_setResult","RESOLVED","REJECTED","state","_value","cachedHandlers","slice","handler","dropUndefinedKeys","inputValue","_dropUndefinedKeys","Map","memoizationMap","memoVal","get","undefined","returnValue","set","key","Array","isArray","item","makeSession","context","startingTime","time","session","sid","init","timestamp","started","duration","status","errors","ignoreDuration","toJSON","sessionToJSON","Date","toISOString","did","attrs","release","environment","ip_address","ipAddress","user_agent","userAgent","updateSession","user","id","email","username","length","Scope","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_attachments","_user","_tags","_extra","_contexts","_sdkProcessingMetadata","static","scope","newScope","_level","_span","_session","_transactionName","_fingerprint","_requestSession","addScopeListener","addEventProcessor","setUser","_notifyScopeListeners","getUser","getRequestSession","setRequestSession","requestSession","setTags","tags","setTag","setExtras","extras","setExtra","extra","setFingerprint","fingerprint","setLevel","setTransactionName","setContext","setSpan","span","getSpan","getTransaction","transaction","setSession","getSession","update","captureContext","updatedScope","contexts","clear","addBreadcrumb","breadcrumb","maxBreadcrumbs","maxCrumbs","mergedBreadcrumb","getLastBreadcrumb","clearBreadcrumbs","addAttachment","attachment","getAttachments","clearAttachments","applyToEvent","event","hint","trace","getTraceContext","transactionName","_applyFingerprint","breadcrumbs","sdkProcessingMetadata","_notifyEventProcessors","getGlobalEventProcessors","setSDKProcessingMetadata","newData","processors","index","processor","log","final","arrayify","maybeArray","concat","API_VERSION","DEFAULT_BREADCRUMBS","Hub","client","_version","_stack","bindClient","isOlderThan","version","getStackTop","setupIntegrations","pushScope","clone","getScope","getStack","getClient","popScope","pop","withScope","captureException","exception","eventId","_lastEventId","event_id","syntheticException","Error","_withClient","originalException","captureMessage","message","captureEvent","type","lastEventId","getOptions","finalBreadcrumb","beforeBreadcrumb","emit","configureScope","run","oldHub","makeMain","getIntegration","integration","_oO","warn","startTransaction","customSamplingContext","_callExtensionMethod","traceHeaders","captureSession","endSession","_sendSessionUpdate","closeSession","startSession","currentSession","shouldSendDefaultPii","options","sendDefaultPii","method","sentry","getMainCarrier","__SENTRY__","extensions","apply","hub","registry","getHubFromCarrier","setHubOnCarrier","hasHubOnCarrier","getHubFromActiveDomain","activeDomain","domain","active","registryHubTopStack","_Oo","carrier","isNodeEnv","isBrowserBundle","__SENTRY_BROWSER_BUNDLE__","process","dynamicRequire","mod","request","require","WINDOW","dateTimestampSource","nowSeconds","now","platformPerformance","getNodePerformance","module","performance","_","getBrowserPerformance","timeOrigin","timestampSource","dateTimestampInSeconds","bind","timestampInSeconds","_browserPerformanceTimeOriginMode","performanceNow","dateNow","timeOriginDelta","abs","timeOriginIsReliable","navigationStart","timing","navigationStartDelta","isGlobalObj","obj","GLOBAL_OBJ","globalThis","window","self","g","getGlobalObject","getGlobalSingleton","creator"],"sourceRoot":""}