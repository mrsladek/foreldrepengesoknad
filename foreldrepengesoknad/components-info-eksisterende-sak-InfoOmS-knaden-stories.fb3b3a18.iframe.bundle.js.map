{"version":3,"file":"components-info-eksisterende-sak-InfoOmS-knaden-stories.fb3b3a18.iframe.bundle.js","mappings":"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","sources":["webpack://foreldrepengesoknad/./src/app/components/info-eksisterende-sak/InfoOmSøknaden.stories.tsx","webpack://foreldrepengesoknad/./src/app/context/types/AnnenForelder.ts","webpack://foreldrepengesoknad/./src/app/context/types/Barn.ts","webpack://foreldrepengesoknad/./src/app/links/links.ts","webpack://foreldrepengesoknad/./src/app/utils/barnUtils.ts","webpack://foreldrepengesoknad/./src/app/utils/hooks/useSøkerinfo.ts","webpack://foreldrepengesoknad/./src/app/utils/hooks/useSøknad.ts","webpack://foreldrepengesoknad/./src/app/utils/isFarEllerMedmor.ts","webpack://foreldrepengesoknad/./src/app/utils/personUtils.ts","webpack://foreldrepengesoknad/./src/storybook/decorators/withForeldrepengersøknadContext.tsx","webpack://foreldrepengesoknad/./src/storybook/decorators/withIntl.tsx","webpack://foreldrepengesoknad/./src/storybook/decorators/withRouter.tsx","webpack://foreldrepengesoknad/./src/storybook/utils/ForeldrepengerStateMock.ts"],"sourcesContent":["import React from 'react';\nimport { Story } from '@storybook/react';\n\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\nimport withIntlProvider from 'storybook/decorators/withIntl';\nimport withRouter from 'storybook/decorators/withRouter';\nimport withForeldrepengersøknadContext from 'storybook/decorators/withForeldrepengersøknadContext';\nimport ForeldrepengerStateMock from 'storybook/utils/ForeldrepengerStateMock';\nimport Søker from 'app/context/types/Søker';\nimport InformasjonOmUtenlandsopphold from 'app/context/types/InformasjonOmUtenlandsopphold';\nimport { Søkerinfo } from 'app/types/Søkerinfo';\nimport { StønadskontoType } from 'uttaksplan/types/StønadskontoType';\nimport dayjs from 'dayjs';\nimport { Periode, Periodetype } from 'uttaksplan/types/Periode';\nimport { EksisterendeSak } from 'app/types/EksisterendeSak';\nimport InfoOmSøknaden from './InfoOmSøknaden';\n\nconst context = {\n    søknad: {\n        saksnummer: undefined,\n        type: 'foreldrepenger',\n        harGodkjentVilkår: true,\n        søkersituasjon: {\n            situasjon: 'fødsel',\n            rolle: 'mor',\n        },\n        barn: {\n            type: 'født',\n            fødselsdatoer: [new Date('2021-03-15')],\n            antallBarn: 1,\n            datoForAleneomsorg: undefined,\n            dokumentasjonAvAleneomsorg: [],\n        },\n        annenForelder: {\n            kanIkkeOppgis: true,\n        },\n        søker: {} as Søker,\n        informasjonOmUtenlandsopphold: {} as InformasjonOmUtenlandsopphold,\n        erEndringssøknad: false,\n        dekningsgrad: '100',\n        uttaksplan: [],\n        harGodkjentOppsummering: false,\n        vedlegg: [],\n        tilleggsopplysninger: undefined!,\n        ønskerJustertUttakVedFødsel: undefined,\n    },\n    version: 5,\n    currentRoute: '/soknad/uttaksplan-info',\n    søkerinfo: {} as Søkerinfo,\n    saker: [],\n    kvittering: undefined!,\n    antallUkerIUttaksplan: undefined!,\n    endringstidspunkt: undefined!,\n    perioderSomSkalSendesInn: [],\n    harUttaksplanBlittSlettet: false,\n    brukerSvarteJaPåAutoJustering: undefined,\n    søknadGjelderEtNyttBarn: undefined!,\n    familieHendelseDatoNesteSak: undefined!,\n    annenPartsUttakErLagtTilIPlan: undefined,\n} as ForeldrepengesøknadContextState;\nconst søkerinfo = {\n    søker: {\n        fnr: '19047815714',\n        fornavn: 'TALENTFULL',\n        etternavn: 'MYGG',\n        kjønn: 'K',\n        fødselsdato: '1978-04-19',\n        ikkeNordiskEøsLand: false,\n        barn: [\n            {\n                fnr: '21091981146',\n                fødselsdato: '2021-03-15',\n                annenForelder: {\n                    fnr: '12038517080',\n                    fødselsdato: '1985-03-12',\n                    fornavn: 'LEALAUS',\n                    etternavn: 'BÆREPOSE',\n                },\n                fornavn: 'KLØKTIG',\n                etternavn: 'MIDTPUNKT',\n                kjønn: 'M',\n            },\n        ],\n    },\n} as SøkerinfoDTO;\n\nexport default {\n    title: 'components/InfoOmSøknaden',\n    component: InfoOmSøknaden,\n    decorators: [withRouter, withIntlProvider, withForeldrepengersøknadContext],\n};\n\ninterface Props {\n    context: ForeldrepengesøknadContextState;\n    søkerinfo: SøkerinfoDTO;\n    erIUttaksplanenSteg: boolean;\n    ekisterendeSak?: EksisterendeSak;\n}\n\nconst Template: Story<Props> = ({ context, søkerinfo, erIUttaksplanenSteg = true, ekisterendeSak }) => {\n    return (\n        <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\n            <InfoOmSøknaden\n                tilgjengeligeStønadskontoer={[\n                    {\n                        konto: StønadskontoType.Mødrekvote,\n                        dager: 50,\n                    },\n                ]}\n                eksisterendeSak={ekisterendeSak}\n                erIUttaksplanenSteg={erIUttaksplanenSteg}\n            />\n        </ForeldrepengerStateMock>\n    );\n};\n\nexport const Default = Template.bind({});\nDefault.args = {\n    context,\n    søkerinfo,\n};\n\nexport const AnnenForelder = Template.bind({});\nAnnenForelder.args = {\n    context: {\n        ...context,\n        søknad: {\n            ...context.søknad,\n            søker: {\n                ...context.søknad.søker,\n                erAleneOmOmsorg: false,\n            },\n            annenForelder: {\n                fornavn: 'Espen',\n                etternavn: 'Utvikler',\n                fnr: '1212121313',\n                harRettPåForeldrepengerINorge: true,\n                kanIkkeOppgis: false,\n            },\n        },\n    } as ForeldrepengesøknadContextState,\n    søkerinfo,\n};\n\nexport const InfoOmMorsSak = Template.bind({});\nInfoOmMorsSak.args = {\n    context: {\n        ...context,\n        søknad: {\n            ...context.søknad,\n            søker: {\n                ...context.søknad.søker,\n                erAleneOmOmsorg: false,\n            },\n            søkersituasjon: {\n                situasjon: 'fødsel',\n                rolle: 'far',\n            },\n            annenForelder: {\n                fornavn: 'Olga',\n                etternavn: 'Utvikler',\n                fnr: '1212121313',\n                harRettPåForeldrepengerINorge: true,\n                kanIkkeOppgis: false,\n            },\n        },\n    } as ForeldrepengesøknadContextState,\n    søkerinfo,\n    ekisterendeSak: {\n        erAnnenPartsSak: true,\n        uttaksplan: [\n            {\n                type: Periodetype.Uttak,\n                gradert: true,\n                stillingsprosent: '100',\n                ønskerSamtidigUttak: true,\n                samtidigUttakProsent: '50',\n                tidsperiode: {\n                    fom: dayjs('2021-01-01').toDate(),\n                    tom: dayjs('2021-01-10').toDate(),\n                },\n            } as Periode,\n        ],\n    } as EksisterendeSak,\n    erIUttaksplanenSteg: false,\n};\n","interface Common {\n    kanIkkeOppgis: boolean;\n}\n\nexport interface AnnenForelderOppgitt extends Common {\n    fornavn: string;\n    etternavn: string;\n    fnr: string;\n    utenlandskFnr?: boolean;\n    bostedsland?: string;\n    harRettPåForeldrepengerINorge?: boolean;\n    harOppholdtSegIEØS?: boolean;\n    harRettPåForeldrepengerIEØS?: boolean;\n    erInformertOmSøknaden?: boolean;\n    erForSyk?: boolean;\n    erUfør?: boolean;\n}\n\nexport type AnnenForelderIkkeOppgitt = Common;\n\ntype AnnenForelder = AnnenForelderIkkeOppgitt | AnnenForelderOppgitt;\n\nexport const isAnnenForelderOppgitt = (annenForelder: AnnenForelder): annenForelder is AnnenForelderOppgitt => {\n    return annenForelder.kanIkkeOppgis === false;\n};\n\nexport const isAnnenForelderIkkeOppgitt = (annenForelder: AnnenForelder): annenForelder is AnnenForelderIkkeOppgitt => {\n    return annenForelder.kanIkkeOppgis === true;\n};\n\nexport default AnnenForelder;\n","import { Attachment } from 'app/types/Attachment';\n\nexport enum BarnType {\n    FØDT = 'født',\n    UFØDT = 'ufødt',\n    ADOPTERT_STEBARN = 'adoptertStebarn',\n    ADOPTERT_ANNET_BARN = 'adoptertAnnetBarn',\n    IKKE_UTFYLT = 'ikkeUtfylt',\n}\n\ninterface Common {\n    type: BarnType;\n    antallBarn: number;\n    dokumentasjonAvAleneomsorg?: Attachment[];\n    datoForAleneomsorg?: Date;\n}\n\nexport interface IkkeUtfyltTypeBarn extends Common {\n    type: BarnType.IKKE_UTFYLT;\n    fødselsdatoer: Date[];\n    fnr?: string[];\n}\n\nexport interface FødtBarn extends Common {\n    type: BarnType.FØDT;\n    fødselsdatoer: Date[];\n    termindato?: Date;\n    fnr?: string[];\n}\n\nexport interface UfødtBarn extends Common {\n    type: BarnType.UFØDT;\n    termindato: Date;\n    terminbekreftelse?: Attachment[];\n    terminbekreftelsedato?: Date;\n}\n\nexport interface AdoptertBarn extends Common {\n    type: BarnType.ADOPTERT_STEBARN | BarnType.ADOPTERT_ANNET_BARN;\n    adopsjonsdato: Date;\n    fødselsdatoer: Date[];\n    omsorgsovertakelse: Attachment[];\n    fnr?: string[];\n}\n\nexport interface AdoptertStebarn extends AdoptertBarn {\n    type: BarnType.ADOPTERT_STEBARN;\n}\n\nexport interface AdoptertAnnetBarn extends AdoptertBarn {\n    type: BarnType.ADOPTERT_ANNET_BARN;\n    adoptertIUtlandet: boolean;\n    ankomstdato?: Date;\n}\n\nexport type Barn = FødtBarn | UfødtBarn | AdoptertBarn | AdoptertStebarn | AdoptertAnnetBarn | IkkeUtfyltTypeBarn;\n\nexport interface BarnFraNesteSak {\n    familiehendelsesdato: Date;\n    startdatoFørsteStønadsperiode: Date;\n    fnr: string[] | undefined;\n    annenForelderFnr: string | undefined;\n}\n\nexport const isIkkeUtfyltTypeBarn = (barn: Barn): barn is IkkeUtfyltTypeBarn => {\n    return barn.type === BarnType.IKKE_UTFYLT;\n};\n\nexport const isFødtBarn = (barn: Barn): barn is FødtBarn => {\n    return barn.type === BarnType.FØDT;\n};\n\nexport const isUfødtBarn = (barn: Barn): barn is UfødtBarn => {\n    return barn.type === BarnType.UFØDT;\n};\n\nexport const isAdoptertBarn = (barn: Barn): barn is AdoptertBarn => {\n    return barn.type === BarnType.ADOPTERT_STEBARN || barn.type === BarnType.ADOPTERT_ANNET_BARN;\n};\n\nexport const isAdoptertStebarn = (barn: Barn): barn is AdoptertStebarn => {\n    return barn.type === BarnType.ADOPTERT_STEBARN;\n};\n\nexport const isAdoptertAnnetBarn = (barn: Barn): barn is AdoptertAnnetBarn => {\n    return barn.type === BarnType.ADOPTERT_ANNET_BARN;\n};\n\nexport default Barn;\n","export default {\n    adoptere: 'https://www.nav.no/no/person/familie/foreldrepenger/foreldrepenger#adoptere',\n    rettOgPlikt: 'https://nav.no/rettOgPlikt',\n    fleksibeltuttak: 'https://www.nav.no/no/person/familie/foreldrepenger/foreldrepenger#samtidig',\n    papirsøknad: 'https://www.nav.no/soknader/nb/person/familie/foreldrepenger-og-engangsstonad',\n    viktigeFrister: 'https://www.nav.no/no/person/familie/foreldrepenger/foreldrepenger#soknadsfrister',\n    nav_aktivitetskrav: 'https://www.nav.no/no/person/familie/foreldrepenger/foreldrepenger#hvor-lenge',\n    brukerstøtte:\n        'https://www.nav.no/no/NAV+og+samfunn/Kontakt+NAV/Teknisk+brukerstotte/hjelp-til-personbruker?kap=398749',\n    innsyn: 'https://foreldrepenger.nav.no',\n    morsAktivitetskrav: 'https://www.nav.no/no/person/familie/foreldrepenger/foreldrepenger#hvor-lenge',\n    frilanserInfoBoks:\n        'https://www.skatteetaten.no/bedrift-og-organisasjon/arbeidsgiver/a-meldingen/veiledning/arbeidsforholdet/type-arbeidsforhold/frilanser-oppdragstaker-og-personer-som-mottar-honorarer/',\n    næringsdrivendeInfoBoks:\n        'https://www.skatteetaten.no/bedrift-og-organisasjon/starte-og-drive/er-jeg-naringsdrivende/',\n    brukerprofil: 'https://tjenester.nav.no/brukerprofil/',\n    familie: 'https://familie.nav.no/',\n    graderingInfo: 'https://www.nav.no/no/person/familie/foreldrepenger/foreldrepenger#arbeid',\n    aktivitetsfriUttakInfo: 'https://www.nav.no/foreldrepenger#hvor-lenge',\n    hvordanSendeInntektsmelding:\n        'https://www.nav.no/no/bedrift/tjenester-og-skjemaer/nav-og-altinn-tjenester/foreldrepenger-og-svangerskapspenger2',\n    omLottOgHyre: 'https://www.skatteetaten.no/rettskilder/type/handboker/skatte-abc/2019/fiske/F-14.014/F-14.048/',\n};\n","import { formatDate, intlUtils } from '@navikt/fp-common';\nimport { dateToISOString } from '@navikt/sif-common-formik/lib';\nimport Barn, { isFødtBarn, isIkkeUtfyltTypeBarn, isUfødtBarn } from 'app/context/types/Barn';\nimport { RegistrertBarn } from 'app/types/Person';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport { IntlShape } from 'react-intl';\n\ndayjs.extend(utc);\n\nexport const getFamiliehendelsedato = (barn: Barn): string => {\n    if (isFødtBarn(barn) || isIkkeUtfyltTypeBarn(barn)) {\n        return dateToISOString(barn.fødselsdatoer[0]);\n    }\n    if (isUfødtBarn(barn)) {\n        return dateToISOString(barn.termindato);\n    }\n\n    return dateToISOString(barn.adopsjonsdato);\n};\n\nconst barnFødselsdatoLikSakFødselsdato = (fødselsdatoer: Date[] | undefined, regBarnFødselsdato: Date | undefined) => {\n    return fødselsdatoer !== undefined && regBarnFødselsdato !== undefined\n        ? fødselsdatoer.find((fødselsdato) => dayjs(fødselsdato).isSame(regBarnFødselsdato)) !== undefined\n        : false;\n};\n\nexport const getRegistrerteBarnOmDeFinnes = (\n    barn: Barn,\n    registrerteBarn: RegistrertBarn[]\n): RegistrertBarn[] | undefined => {\n    return registrerteBarn.length > 0 && !isUfødtBarn(barn)\n        ? registrerteBarn.filter(\n              (regBarn) =>\n                  barn.fnr?.includes(regBarn.fnr) ||\n                  barnFødselsdatoLikSakFødselsdato(barn.fødselsdatoer, regBarn.fødselsdato)\n          )\n        : undefined;\n};\n\nexport const getTermindato = (barn: Barn): Date | undefined => {\n    return isFødtBarn(barn) || isUfødtBarn(barn) ? barn.termindato : undefined;\n};\n\nexport const getFødselsdato = (barn: Barn): Date | undefined => {\n    return isFødtBarn(barn) ? barn.fødselsdatoer[0] : undefined;\n};\n\nexport const getDødeBarnetForMerEnn3MånederSiden = (registrerteBarn: RegistrertBarn) => {\n    const dato3MånederTilbake = dayjs(new Date()).subtract(3, 'month');\n    return (\n        registrerteBarn.dødsdato !== undefined && dayjs(registrerteBarn.dødsdato).isBefore(dato3MånederTilbake, 'day')\n    );\n};\n\nexport const getTekstForAntallBarn = (antallBarn: number, intl: IntlShape): string => {\n    if (antallBarn === 1) {\n        return intlUtils(intl, 'barn');\n    } else if (antallBarn === 2) {\n        return intlUtils(intl, 'tvillinger');\n    } else if (antallBarn === 3) {\n        return intlUtils(intl, 'trillinger');\n    }\n    return intlUtils(intl, 'flerlinger');\n};\n\nexport const getLeverBarnet = (barn: RegistrertBarn) => {\n    return !barn.dødsdato;\n};\n\nexport const getAndreBarnFødtSammenMedBarnet = (\n    barnFnr: string | undefined,\n    barnFødselsdato: Date,\n    registrerteBarn: RegistrertBarn[]\n) => {\n    const dagenFørFødsel = dayjs(barnFødselsdato).subtract(1, 'day');\n    const dagenEtterFødsel = dayjs(barnFødselsdato).add(1, 'day');\n    return registrerteBarn.filter(\n        (b) =>\n            b.fnr !== barnFnr &&\n            dayjs(b.fødselsdato).isSameOrAfter(dagenFørFødsel, 'day') &&\n            dayjs(b.fødselsdato).isSameOrBefore(dagenEtterFødsel, 'day')\n    );\n};\n\nexport const getTittelBarnNårNavnSkalIkkeVises = (\n    omsorgsovertagelsesdato: Date | undefined,\n    fødselsdatoer: Date[] | undefined,\n    antallBarn: number,\n    intl: IntlShape\n): string => {\n    if (omsorgsovertagelsesdato !== undefined) {\n        return intlUtils(intl, 'velkommen.barnVelger.adoptertBarn', {\n            adopsjonsdato: formatDate(omsorgsovertagelsesdato),\n        });\n    } else {\n        const fødselsdatoTekst = formaterFødselsdatoerPåBarn(fødselsdatoer);\n        const barnTekst = getTekstForAntallBarn(antallBarn, intl);\n\n        return fødselsdatoer !== undefined && fødselsdatoer.length > 0\n            ? intlUtils(intl, 'velkommen.barnVelger.fødtBarn.barn', {\n                  barnTekst,\n                  fødselsdato: fødselsdatoTekst,\n              })\n            : '';\n    }\n};\n\nexport const formaterNavnPåBarn = (\n    fornavn: string[] | undefined,\n    fødselsdatoer: Date[] | undefined,\n    omsorgsovertagelsesdato: Date | undefined,\n    alleBarnaLever: boolean,\n    antallBarn: number,\n    intl: IntlShape\n): string => {\n    if (fornavn === undefined || fornavn.length === 0 || !alleBarnaLever) {\n        return getTittelBarnNårNavnSkalIkkeVises(omsorgsovertagelsesdato, fødselsdatoer, antallBarn, intl);\n    }\n\n    if (fornavn.length > 1) {\n        const fornavnene = fornavn.slice(0, -1).join(', ');\n        const sisteFornavn = fornavn[fornavn.length - 1];\n        return `${fornavnene} og ${sisteFornavn}`;\n    }\n    return `${fornavn[0]}`;\n};\n\nexport const formaterFødselsdatoerPåBarn = (fødselsdatoer: Date[] | undefined): string | undefined => {\n    if (fødselsdatoer === undefined) {\n        return undefined;\n    }\n    const unikeFødselsdatoer = [] as Date[];\n    fødselsdatoer.forEach((f) => {\n        const finnesIUnikeFødselsdatoer = unikeFødselsdatoer.find((dato) => dayjs(dato).isSame(f, 'day'));\n        if (finnesIUnikeFødselsdatoer === undefined) {\n            unikeFødselsdatoer.push(f);\n        }\n    });\n\n    if (unikeFødselsdatoer.length > 1) {\n        const fødselsdatoerTekst = unikeFødselsdatoer.map((fd) => formatDate(fd));\n        const førsteFødselsdaoer = fødselsdatoerTekst.slice(0, -1).join(', ');\n        const sisteFødselsdato = fødselsdatoerTekst[fødselsdatoerTekst.length - 1];\n        return `${førsteFødselsdaoer} og ${sisteFødselsdato}`;\n    }\n    return formatDate(unikeFødselsdatoer[0]);\n};\n","import { useForeldrepengesøknadContext } from 'app/context/hooks/useForeldrepengesøknadContext';\nimport { Søkerinfo } from 'app/types/Søkerinfo';\n\nconst useSøkerinfo = (): Søkerinfo => {\n    const { state } = useForeldrepengesøknadContext();\n    return state.søkerinfo;\n};\n\nexport default useSøkerinfo;\n","import { useForeldrepengesøknadContext } from 'app/context/hooks/useForeldrepengesøknadContext';\nimport { Søknad } from 'app/context/types/Søknad';\n\nconst useSøknad = (): Søknad => {\n    const { state } = useForeldrepengesøknadContext();\n    return state.søknad;\n};\n\nexport default useSøknad;\n","import { Søkerrolle } from 'app/types/Søkerrolle';\n\nconst isFarEllerMedmor = (rolle: Søkerrolle) => {\n    if (rolle === 'far' || rolle === 'medmor') {\n        return true;\n    }\n\n    return false;\n};\n\nexport default isFarEllerMedmor;\n","import { intlUtils, Kjønn } from '@navikt/fp-common';\nimport AnnenForelder, { isAnnenForelderOppgitt } from 'app/context/types/AnnenForelder';\nimport { NavnPåForeldre } from 'app/types/NavnPåForeldre';\nimport Person from 'app/types/Person';\nimport { Søkerrolle } from 'app/types/Søkerrolle';\nimport dayjs from 'dayjs';\nimport { IntlShape } from 'react-intl';\n\nexport const formaterNavn = (fornavn: string, etternavn: string, visEtternavn: boolean, mellomnavn?: string) => {\n    if (visEtternavn) {\n        return mellomnavn ? `${fornavn} ${mellomnavn} ${etternavn}` : `${fornavn} ${etternavn}`;\n    }\n    return mellomnavn ? `${fornavn} ${mellomnavn}` : `${fornavn}`;\n};\n\nconst navnSlutterPåSLyd = (navn: string): boolean => {\n    const sisteBokstav = navn.charAt(navn.length - 1).toLowerCase();\n    return sisteBokstav === 's' || sisteBokstav === 'x' || sisteBokstav === 'z';\n};\n\nexport const getNavnGenitivEierform = (navn: string, locale: string): string => {\n    if (locale !== 'nb') {\n        return navn;\n    }\n    if (navnSlutterPåSLyd(navn)) {\n        return `${navn}'`;\n    }\n    return `${navn}s`;\n};\n\nexport const getKjønnFromFnr = (annenForelder: AnnenForelder): Kjønn | undefined => {\n    if (isAnnenForelderOppgitt(annenForelder)) {\n        const { fnr } = annenForelder;\n\n        if (fnr === undefined || fnr.length !== 11) {\n            return undefined;\n        }\n        return parseInt(fnr.charAt(8), 10) % 2 === 0 ? 'K' : 'M';\n    }\n\n    return undefined;\n};\n\nexport const getKjønnFromFnrString = (fnr: string): Kjønn | undefined => {\n    if (fnr.length !== 11) {\n        return undefined;\n    }\n    return parseInt(fnr.charAt(8), 10) % 2 === 0 ? 'K' : 'M';\n};\n\nexport const getMorErAleneOmOmsorg = (\n    søkerErMor: boolean,\n    søkerErAleneOmOmsorg: boolean,\n    annenForelder: AnnenForelder\n) => {\n    return søkerErMor && (søkerErAleneOmOmsorg || annenForelder.kanIkkeOppgis === true);\n};\n\nexport const getMorHarRettPåForeldrepengerINorgeEllerEØS = (\n    rolle: Søkerrolle,\n    søkerErFarEllerMedmor: boolean,\n    annenForelder: AnnenForelder\n) => {\n    if (søkerErFarEllerMedmor === true && isAnnenForelderOppgitt(annenForelder)) {\n        return (\n            annenForelder.harRettPåForeldrepengerINorge === true || annenForelder.harRettPåForeldrepengerIEØS === true\n        );\n    }\n    return rolle === 'mor';\n};\n\nexport const getMorHarRettPåForeldrepengerIEØS = (\n    rolle: Søkerrolle,\n    søkerErFarEllerMedmor: boolean,\n    annenForelder: AnnenForelder\n) => {\n    if (søkerErFarEllerMedmor === true && isAnnenForelderOppgitt(annenForelder)) {\n        return annenForelder.harRettPåForeldrepengerINorge === true;\n    }\n    return rolle === 'mor';\n};\n\nexport const getFarMedmorErAleneOmOmsorg = (\n    søkerErFarMedmor: boolean,\n    søkerErAleneOmOmsorg: boolean,\n    annenForelder: AnnenForelder\n) => {\n    return søkerErFarMedmor && (søkerErAleneOmOmsorg || annenForelder.kanIkkeOppgis === true);\n};\n\nexport const getNavnPåForeldre = (\n    person: Person,\n    annenForelder: AnnenForelder,\n    erFarEllerMedmor: boolean,\n    intl: IntlShape\n): NavnPåForeldre => {\n    const navnSøker = person.fornavn;\n    const navnAnnenForelder =\n        isAnnenForelderOppgitt(annenForelder) && annenForelder.fornavn !== undefined && annenForelder.fornavn !== ''\n            ? annenForelder.fornavn\n            : intlUtils(intl, 'annen.forelder');\n    const navnMor = erFarEllerMedmor ? navnAnnenForelder : navnSøker;\n    const navnFarMedmor = erFarEllerMedmor ? navnSøker : navnAnnenForelder;\n\n    return {\n        mor: navnMor,\n        farMedmor: navnFarMedmor,\n    };\n};\n\nexport const getErSøkerFarEllerMedmor = (søkerRolle: Søkerrolle): boolean =>\n    søkerRolle === 'far' || søkerRolle === 'medmor';\n\nexport const erEldreEnn3ÅrOg3Måneder = (fødselsdato: Date) => {\n    return dayjs(fødselsdato).add(3, 'year').add(3, 'month').isBefore(dayjs(), 'day');\n};\n","import React from 'react';\nimport ForeldrepengesøknadContextProvider from '../../app/context/ForeldrepengesøknadContext';\n\nconst withForeldrepengersøknadContextProvider = (Story: any) => (\n    <ForeldrepengesøknadContextProvider>\n        <Story />\n    </ForeldrepengesøknadContextProvider>\n);\n\nexport default withForeldrepengersøknadContextProvider;\n","import React from 'react';\n\nimport IntlProvider from '../../app/intl/IntlProvider';\n\nconst withIntlProvider = (Story: any) => (\n    <IntlProvider locale=\"nb\">\n        <Story />\n    </IntlProvider>\n);\n\nexport default withIntlProvider;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst withRouterProvider = (Story: any) => (\n    <BrowserRouter>\n        <Story />\n    </BrowserRouter>\n);\n\nexport default withRouterProvider;\n","import { FunctionComponent, useEffect, useState } from 'react';\n\nimport actionCreator from '../../app/context/action/actionCreator';\nimport { useForeldrepengesøknadContext } from '../../app/context/hooks/useForeldrepengesøknadContext';\nimport { ForeldrepengesøknadContextState } from '../../app/context/ForeldrepengesøknadContextConfig';\nimport { SøkerinfoDTO } from '../../app/types/SøkerinfoDTO';\nimport mapSøkerinfoDTOToSøkerinfo from '../../app/utils/mapSøkerinfoDTO';\n\ninterface Props {\n    children: any;\n    søknad: ForeldrepengesøknadContextState;\n    søkerinfo: SøkerinfoDTO;\n}\n\nconst ForeldrepengerStateMock: FunctionComponent<Props> = ({ children, søknad, søkerinfo }) => {\n    const [erFerdig, setFerdig] = useState(false);\n    const { dispatch } = useForeldrepengesøknadContext();\n\n    useEffect(() => {\n        if (!erFerdig) {\n            Promise.all([\n                dispatch(actionCreator.applyStoredState(søknad)),\n                dispatch(actionCreator.setSøkerinfo(mapSøkerinfoDTOToSøkerinfo(søkerinfo))),\n            ]).then(() => setFerdig(true));\n        }\n    }, [dispatch, søknad, søkerinfo, erFerdig]);\n\n    return erFerdig ? children : null;\n};\n\nexport default ForeldrepengerStateMock;\n"],"names":["context","søknad","saksnummer","undefined","type","harGodkjentVilkår","søkersituasjon","situasjon","rolle","barn","fødselsdatoer","Date","antallBarn","datoForAleneomsorg","dokumentasjonAvAleneomsorg","annenForelder","kanIkkeOppgis","søker","informasjonOmUtenlandsopphold","erEndringssøknad","dekningsgrad","uttaksplan","harGodkjentOppsummering","vedlegg","tilleggsopplysninger","ønskerJustertUttakVedFødsel","version","currentRoute","søkerinfo","saker","kvittering","antallUkerIUttaksplan","endringstidspunkt","perioderSomSkalSendesInn","harUttaksplanBlittSlettet","brukerSvarteJaPåAutoJustering","søknadGjelderEtNyttBarn","familieHendelseDatoNesteSak","annenPartsUttakErLagtTilIPlan","fnr","fornavn","etternavn","kjønn","fødselsdato","ikkeNordiskEøsLand","title","component","InfoOmSøknaden","decorators","withRouter","withIntlProvider","withForeldrepengersøknadContext","Template","_ref","_ref$erIUttaksplanenS","erIUttaksplanenSteg","ekisterendeSak","React","ForeldrepengerStateMock","tilgjengeligeStønadskontoer","konto","StønadskontoType","dager","eksisterendeSak","Default","bind","args","AnnenForelder","_objectSpread","erAleneOmOmsorg","harRettPåForeldrepengerINorge","InfoOmMorsSak","erAnnenPartsSak","Periodetype","gradert","stillingsprosent","ønskerSamtidigUttak","samtidigUttakProsent","tidsperiode","fom","dayjs","toDate","tom","__namedExportsOrder","isAnnenForelderOppgitt","isAnnenForelderIkkeOppgitt","BarnType","isIkkeUtfyltTypeBarn","IKKE_UTFYLT","isFødtBarn","FØDT","isUfødtBarn","UFØDT","isAdoptertBarn","ADOPTERT_STEBARN","ADOPTERT_ANNET_BARN","isAdoptertStebarn","isAdoptertAnnetBarn","adoptere","rettOgPlikt","fleksibeltuttak","papirsøknad","viktigeFrister","nav_aktivitetskrav","brukerstøtte","innsyn","morsAktivitetskrav","frilanserInfoBoks","næringsdrivendeInfoBoks","brukerprofil","familie","graderingInfo","aktivitetsfriUttakInfo","hvordanSendeInntektsmelding","omLottOgHyre","utc","getFamiliehendelsedato","dateToISOString","termindato","adopsjonsdato","getRegistrerteBarnOmDeFinnes","registrerteBarn","length","filter","regBarn","_barn$fnr","includes","barnFødselsdatoLikSakFødselsdato","regBarnFødselsdato","find","isSame","getTermindato","getFødselsdato","getDødeBarnetForMerEnn3MånederSiden","dato3MånederTilbake","subtract","dødsdato","isBefore","getTekstForAntallBarn","intl","intlUtils","getLeverBarnet","getAndreBarnFødtSammenMedBarnet","barnFnr","barnFødselsdato","dagenFørFødsel","dagenEtterFødsel","add","b","isSameOrAfter","isSameOrBefore","getTittelBarnNårNavnSkalIkkeVises","omsorgsovertagelsesdato","formatDate","fødselsdatoTekst","formaterFødselsdatoerPåBarn","barnTekst","formaterNavnPåBarn","alleBarnaLever","fornavnene","slice","join","sisteFornavn","concat","unikeFødselsdatoer","forEach","f","dato","push","fødselsdatoerTekst","map","fd","førsteFødselsdaoer","sisteFødselsdato","useSøkerinfo","useForeldrepengesøknadContext","state","useSøknad","isFarEllerMedmor","formaterNavn","visEtternavn","mellomnavn","getNavnGenitivEierform","navn","locale","navnSlutterPåSLyd","sisteBokstav","charAt","toLowerCase","getKjønnFromFnr","parseInt","getKjønnFromFnrString","getMorErAleneOmOmsorg","søkerErMor","søkerErAleneOmOmsorg","getMorHarRettPåForeldrepengerINorgeEllerEØS","søkerErFarEllerMedmor","harRettPåForeldrepengerIEØS","getFarMedmorErAleneOmOmsorg","søkerErFarMedmor","getNavnPåForeldre","person","erFarEllerMedmor","navnSøker","navnAnnenForelder","mor","farMedmor","getErSøkerFarEllerMedmor","søkerRolle","erEldreEnn3ÅrOg3Måneder","withForeldrepengersøknadContextProvider","Story","ForeldrepengesøknadContextProvider","IntlProvider","withRouterProvider","BrowserRouter","children","_useState2","_slicedToArray","useState","erFerdig","setFerdig","dispatch","useEffect","Promise","all","actionCreator","mapSøkerinfoDTOToSøkerinfo","then"],"sourceRoot":""}