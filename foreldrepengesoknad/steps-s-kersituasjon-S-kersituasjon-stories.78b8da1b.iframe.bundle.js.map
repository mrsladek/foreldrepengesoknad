{"version":3,"file":"steps-s-kersituasjon-S-kersituasjon-stories.78b8da1b.iframe.bundle.js","mappings":"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","sources":["webpack://foreldrepengesoknad/../../node_modules/.pnpm/@navikt+sif-common-question-config@0.0.7/node_modules/@navikt/sif-common-question-config/lib/index.js","webpack://foreldrepengesoknad/./src/app/amplitude/amplitude.ts","webpack://foreldrepengesoknad/./src/app/steps/stepsConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/søkersituasjon/søkersituasjonFormConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/søkersituasjon/components/VelgRolle.tsx","webpack://foreldrepengesoknad/./src/app/steps/søkersituasjon/søkersituasjonQuestionsConfig.ts","webpack://foreldrepengesoknad/./src/app/steps/søkersituasjon/søkersituasjonUtils.ts","webpack://foreldrepengesoknad/./src/app/steps/søkersituasjon/Søkersituasjon.tsx","webpack://foreldrepengesoknad/./src/app/utils/hooks/useAvbrytSøknad.ts","webpack://foreldrepengesoknad/./src/app/utils/hooks/useFortsettSøknadSenere.ts","webpack://foreldrepengesoknad/./src/app/utils/hooks/useOnValidSubmit.ts","webpack://foreldrepengesoknad/./src/app/utils/hooks/useSøkerinfo.ts","webpack://foreldrepengesoknad/./src/storybook/decorators/withForeldrepengersøknadContext.tsx","webpack://foreldrepengesoknad/./src/storybook/decorators/withIntl.tsx","webpack://foreldrepengesoknad/./src/storybook/decorators/withRouter.tsx","webpack://foreldrepengesoknad/./src/storybook/stories/steps/søkersituasjon/Søkersituasjon.stories.tsx","webpack://foreldrepengesoknad/./src/storybook/utils/AxiosMock.tsx","webpack://foreldrepengesoknad/./src/storybook/utils/ForeldrepengerStateMock.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.questionValueIsOk = (value) => {\n    return value !== undefined && value !== '';\n};\nconst isQuestionVisible = (questions, question, payload) => {\n    const config = questions[question];\n    if (!config) {\n        return false;\n    }\n    if (config.isIncluded && config.isIncluded(payload) === false) {\n        return false;\n    }\n    if (config.visibilityFilter && config.visibilityFilter(payload) === false) {\n        return false;\n    }\n    if (config.parentQuestion !== undefined) {\n        const parentQuestion = questions[config.parentQuestion];\n        return isQuestionVisible(questions, config.parentQuestion, payload) && parentQuestion.isAnswered(payload);\n    }\n    return true;\n};\nconst isQuestionAnswered = (questions, question, payload) => {\n    const config = questions[question];\n    if (!config || !config.isAnswered) {\n        return false;\n    }\n    return config.isAnswered(payload);\n};\nconst isQuestionIncluded = (questions, question, payload) => {\n    const config = questions[question];\n    if (!config) {\n        return false;\n    }\n    return config.isIncluded ? config.isIncluded(payload) : true;\n};\nconst areAllQuestionsAnswered = (questions, payload) => {\n    let allQuestionsHasAnswers = true;\n    Object.keys(questions).forEach((key) => {\n        const question = questions[key];\n        if (isQuestionVisible(questions, key, payload)) {\n            const isOptional = question.isOptional !== undefined ? question.isOptional(payload) === true : false;\n            allQuestionsHasAnswers = allQuestionsHasAnswers === true && (question.isAnswered(payload) || isOptional);\n        }\n    });\n    return allQuestionsHasAnswers;\n};\nconst getIncludedQuestions = (questions, payload) => {\n    const keys = Object.keys(questions).filter((key) => {\n        return isQuestionIncluded(questions, key, payload);\n    });\n    return keys;\n};\nconst validateQuestion = (value, questions, question, payload) => {\n    const config = questions[question];\n    if (!config || !config.validate) {\n        return undefined;\n    }\n    return config.validate(payload);\n};\nexports.Questions = (questions) => ({\n    getVisbility: (payload) => ({\n        validate: (key) => (value) => validateQuestion(value, questions, key, payload),\n        isVisible: (key) => isQuestionVisible(questions, key, payload),\n        isAnswered: (key) => isQuestionAnswered(questions, key, payload),\n        isIncluded: (key) => isQuestionIncluded(questions, key, payload),\n        areAllQuestionsAnswered: () => areAllQuestionsAnswered(questions, payload),\n        getIncludedQuestions: () => getIncludedQuestions(questions, payload),\n    }),\n    getQuestionVisbilityInfo: (key, payload) => {\n        const info = {\n            validate: (value) => validateQuestion(value, questions, key, payload),\n            isVisible: () => isQuestionVisible(questions, key, payload),\n            isAnswered: () => isQuestionAnswered(questions, key, payload),\n        };\n        return info;\n    },\n});\n","import amplitude from 'amplitude-js';\n\nexport enum PageKeys {\n    Velkommen = 'velkommen',\n    Situasjon = 'situasjon',\n    OmBarnetFødsel = 'om-barnet-fødsel',\n    OmBarnetAdopsjon = 'om-barnet-adopsjon',\n    AnnenForelder = 'annen-forelder',\n    ManglendeVedlegg = 'manglende-vedlegg',\n    UttaksplanSkjema = 'uttaksplan-skjema',\n    Uttaksplan = 'uttaksplan',\n    AndreInntekter = 'andre-inntekter',\n    Utenlandsopphold = 'utenlandsopphold',\n    Oppsummering = 'oppsummering',\n    SøknadSendt = 'søknad-sendt',\n    Umyndig = 'umyndig',\n}\n\nexport const initAmplitude = () => {\n    if (amplitude) {\n        amplitude.getInstance().init('default', '', {\n            apiEndpoint: 'amplitude.nav.no/collect-auto',\n            saveEvents: false,\n            includeUtm: true,\n            includeReferrer: true,\n            platform: window.location.toString(),\n            onError: () => console.log('Amplitude klarte ikke å starte opp'),\n        });\n    }\n};\n\nexport const logAmplitudeEvent = (eventName: string, eventData?: any, logToConsoleOnly = true) => {\n    if (logToConsoleOnly) {\n        if (process.env.NODE_ENV !== 'test') {\n            console.log({ eventName, eventData });\n        }\n        return;\n    }\n\n    setTimeout(() => {\n        try {\n            if (amplitude) {\n                amplitude.getInstance().logEvent(eventName, eventData);\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    });\n};\n","import { intlUtils } from '@navikt/fp-common';\nimport { assertUnreachable } from 'app/utils/globalUtil';\nimport { IntlShape } from 'react-intl';\n\ntype SøkersituasjonStepId = 'søkersituasjon';\ntype OmBarnetStepId = 'omBarnet';\ntype AnnenForelderId = 'annenForelder';\ntype UttaksplanInfo = 'uttaksplanInfo';\ntype Uttaksplan = 'uttaksplan';\ntype UtenlandsoppholdStepId = 'utenlandsopphold';\ntype Inntektsinformasjon = 'inntektsinformasjon';\ntype PåkrevdDokumentasjonStepId = 'dokumentasjon';\ntype OppsummeringStepId = 'oppsummering';\n\ntype StepIdWithBackHref =\n    | OmBarnetStepId\n    | AnnenForelderId\n    | UttaksplanInfo\n    | Uttaksplan\n    | UtenlandsoppholdStepId\n    | Inntektsinformasjon\n    | PåkrevdDokumentasjonStepId\n    | OppsummeringStepId;\n\ntype StepIdWithBackHrefEndringssøknad = PåkrevdDokumentasjonStepId | OppsummeringStepId;\n\nexport type StepId = SøkersituasjonStepId | StepIdWithBackHref;\n\ninterface StepConfig {\n    id: StepId;\n    index: number;\n    label: string;\n}\n\nconst stepConfig = (intl: IntlShape): StepConfig[] => [\n    {\n        id: 'søkersituasjon',\n        index: 0,\n        label: intlUtils(intl, 'steps.label.søkersituasjon'),\n    },\n    {\n        id: 'omBarnet',\n        index: 1,\n        label: intlUtils(intl, 'steps.label.omBarnet'),\n    },\n    {\n        id: 'annenForelder',\n        index: 2,\n        label: intlUtils(intl, 'steps.label.annenForelder'),\n    },\n    {\n        id: 'uttaksplanInfo',\n        index: 3,\n        label: intlUtils(intl, 'steps.label.uttaksplanInfo'),\n    },\n    {\n        id: 'uttaksplan',\n        index: 4,\n        label: intlUtils(intl, 'steps.label.uttaksplan'),\n    },\n    {\n        id: 'utenlandsopphold',\n        index: 5,\n        label: intlUtils(intl, 'steps.label.utenlandsopphold'),\n    },\n    {\n        id: 'inntektsinformasjon',\n        index: 6,\n        label: intlUtils(intl, 'steps.label.inntektsinformasjon'),\n    },\n    {\n        id: 'dokumentasjon',\n        index: 7,\n        label: intlUtils(intl, 'steps.label.dokumentasjon'),\n    },\n    {\n        id: 'oppsummering',\n        index: 8,\n        label: intlUtils(intl, 'steps.label.oppsummering'),\n    },\n];\n\nexport const getPreviousStepHrefEndringssøknad = (id: StepIdWithBackHrefEndringssøknad): string => {\n    let href;\n\n    switch (id) {\n        case 'dokumentasjon':\n            href = '/soknad/dokumentasjon';\n            break;\n        case 'oppsummering':\n            href = '/soknad/uttaksplan';\n            break;\n        default:\n            return assertUnreachable(id, `Forsøkt å nå en side som ikke er tilgjengelig i endringssøknaden: ${id}`);\n    }\n\n    return href;\n};\n\nexport const getPreviousStepHref = (id: StepIdWithBackHref): string => {\n    let href;\n\n    switch (id) {\n        case 'omBarnet':\n            href = '/soknad/sokersituasjon';\n            break;\n        case 'annenForelder':\n            href = '/soknad/om-barnet';\n            break;\n        case 'uttaksplanInfo':\n            href = '/soknad/annen-forelder';\n            break;\n        case 'uttaksplan':\n            href = '/soknad/uttaksplan-info';\n            break;\n        case 'utenlandsopphold':\n            href = '/soknad/uttaksplan';\n            break;\n        case 'inntektsinformasjon':\n            href = '/soknad/utenlandsopphold';\n            break;\n        case 'dokumentasjon':\n            href = '/soknad/dokumentasjon';\n            break;\n        case 'oppsummering':\n            href = '/soknad/inntektsinformasjon';\n            break;\n        default:\n            return assertUnreachable(id, `Forsøkt å nå en side som ikke er tilgjengelig i søknaden: ${id}`);\n    }\n\n    return href;\n};\n\nexport default stepConfig;\n","import { hasValue } from '@navikt/fp-common';\nimport { getTypedFormComponents } from '@navikt/sif-common-formik/lib';\nimport Søkersituasjon from 'app/context/types/Søkersituasjon';\nimport { Situasjon } from 'app/types/Situasjon';\nimport { Søkerrolle } from 'app/types/Søkerrolle';\n\nexport enum SøkersituasjonFormField {\n    situasjon = 'situasjon',\n    rolle = 'rolle',\n}\n\nexport interface SøkersituasjonFormData {\n    [SøkersituasjonFormField.situasjon]: Situasjon | '';\n    [SøkersituasjonFormField.rolle]: Søkerrolle | '';\n}\n\nconst initialSøkersituasjonValues: SøkersituasjonFormData = {\n    [SøkersituasjonFormField.situasjon]: '',\n    [SøkersituasjonFormField.rolle]: '',\n};\n\nexport const getInitialSøkerSituasjonValues = (stateValues: Søkersituasjon): SøkersituasjonFormData => {\n    if (stateValues) {\n        return {\n            rolle: hasValue(stateValues.rolle) ? stateValues.rolle : initialSøkersituasjonValues.rolle,\n            situasjon: hasValue(stateValues.situasjon) ? stateValues.situasjon : initialSøkersituasjonValues.situasjon,\n        };\n    }\n    return initialSøkersituasjonValues;\n};\n\nexport const SøkersituasjonFormComponents = getTypedFormComponents<\n    SøkersituasjonFormField,\n    SøkersituasjonFormData,\n    string\n>();\n","import React, { FunctionComponent } from 'react';\nimport { Block, intlUtils, Kjønn } from '@navikt/fp-common';\nimport { SøkersituasjonFormComponents, SøkersituasjonFormField } from '../søkersituasjonFormConfig';\nimport { useIntl } from 'react-intl';\n\ninterface Props {\n    kjønn: Kjønn;\n}\n\nconst VelgRolle: FunctionComponent<Props> = ({ kjønn }) => {\n    const intl = useIntl();\n\n    if (kjønn === 'M') {\n        return null;\n    }\n\n    return (\n        <Block margin=\"xl\">\n            <SøkersituasjonFormComponents.RadioPanelGroup\n                name={SøkersituasjonFormField.rolle}\n                radios={[\n                    {\n                        label: intlUtils(intl, 'søkersituasjon.radioButton.mor'),\n                        value: 'mor',\n                    },\n                    {\n                        label: intlUtils(intl, 'søkersituasjon.radioButton.medmor'),\n                        value: 'medmor',\n                    },\n                ]}\n                useTwoColumns={true}\n                legend={intlUtils(intl, 'søkersituasjon.text.rolle')}\n            />\n        </Block>\n    );\n};\n\nexport default VelgRolle;\n","import { hasValue, Kjønn } from '@navikt/fp-common';\nimport { QuestionConfig, Questions } from '@navikt/sif-common-question-config/lib';\nimport { SøkersituasjonFormData, SøkersituasjonFormField } from './søkersituasjonFormConfig';\n\ninterface SøkersituasjonQuestionsPayload extends SøkersituasjonFormData {\n    søkerKjønn: Kjønn;\n}\n\nconst SøkersituasjonFormConfig: QuestionConfig<SøkersituasjonQuestionsPayload, SøkersituasjonFormField> = {\n    [SøkersituasjonFormField.situasjon]: {\n        isIncluded: () => true,\n        isAnswered: ({ situasjon }) => hasValue(situasjon),\n    },\n    [SøkersituasjonFormField.rolle]: {\n        isIncluded: ({ søkerKjønn }) => søkerKjønn === 'K',\n        isAnswered: ({ rolle }) => hasValue(rolle),\n        visibilityFilter: ({ situasjon }) => hasValue(situasjon),\n    },\n};\n\nconst søkersituasjonQuestionsConfig = Questions<SøkersituasjonQuestionsPayload, SøkersituasjonFormField>(\n    SøkersituasjonFormConfig\n);\n\nexport default søkersituasjonQuestionsConfig;\n","import { hasValue } from '@navikt/fp-common';\nimport Søkersituasjon from 'app/context/types/Søkersituasjon';\nimport { Situasjon } from 'app/types/Situasjon';\nimport { Søkerrolle } from 'app/types/Søkerrolle';\nimport { SøkersituasjonFormData } from './søkersituasjonFormConfig';\n\nexport const mapSøkersituasjonFormDataToState = (formData: Partial<SøkersituasjonFormData>): Søkersituasjon => {\n    return {\n        situasjon: formData.situasjon as Situasjon,\n        rolle: hasValue(formData.rolle) ? (formData.rolle as Søkerrolle) : 'far',\n    };\n};\n","import { Block, intlUtils, Step } from '@navikt/fp-common';\nimport actionCreator from 'app/context/action/actionCreator';\nimport SøknadRoutes from 'app/routes/routes';\nimport { Hovedknapp } from 'nav-frontend-knapper';\nimport React from 'react';\nimport useOnValidSubmit from 'app/utils/hooks/useOnValidSubmit';\nimport useSøknad from 'app/utils/hooks/useSøknad';\nimport useAvbrytSøknad from 'app/utils/hooks/useAvbrytSøknad';\nimport { useIntl } from 'react-intl';\nimport stepConfig from '../stepsConfig';\nimport VelgRolle from './components/VelgRolle';\nimport {\n    getInitialSøkerSituasjonValues,\n    SøkersituasjonFormComponents,\n    SøkersituasjonFormData,\n    SøkersituasjonFormField,\n} from './søkersituasjonFormConfig';\nimport søkersituasjonQuestionsConfig from './søkersituasjonQuestionsConfig';\nimport { mapSøkersituasjonFormDataToState } from './søkersituasjonUtils';\nimport useSøkerinfo from 'app/utils/hooks/useSøkerinfo';\nimport { storeAppState } from 'app/utils/submitUtils';\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\nimport useFortsettSøknadSenere from 'app/utils/hooks/useFortsettSøknadSenere';\nimport useSaveLoadedRoute from 'app/utils/hooks/useSaveLoadedRoute';\n\nconst Søkersituasjon = () => {\n    const intl = useIntl();\n    const søknad = useSøknad();\n    const søkerinfo = useSøkerinfo();\n    const { kjønn } = søkerinfo.person;\n\n    const onValidSubmitHandler = (values: Partial<SøkersituasjonFormData>) => {\n        const søkersituasjon = mapSøkersituasjonFormDataToState(values);\n        return [actionCreator.setSøkersituasjon(søkersituasjon)];\n    };\n\n    const { handleSubmit, isSubmitting } = useOnValidSubmit(\n        onValidSubmitHandler,\n        SøknadRoutes.OM_BARNET,\n        (state: ForeldrepengesøknadContextState) => storeAppState(state)\n    );\n    const onAvbrytSøknad = useAvbrytSøknad();\n    const onFortsettSøknadSenere = useFortsettSøknadSenere();\n    useSaveLoadedRoute(SøknadRoutes.SØKERSITUASJON);\n\n    return (\n        <SøkersituasjonFormComponents.FormikWrapper\n            initialValues={getInitialSøkerSituasjonValues(søknad.søkersituasjon)}\n            onSubmit={handleSubmit}\n            renderForm={({ values: formValues }) => {\n                const visibility = søkersituasjonQuestionsConfig.getVisbility({\n                    ...formValues,\n                    søkerKjønn: kjønn,\n                });\n                const allQuestionsAnswered = visibility.areAllQuestionsAnswered();\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 'søknad.pageheading')}\n                        activeStepId=\"søkersituasjon\"\n                        pageTitle={intlUtils(intl, 'søknad.søkersituasjon')}\n                        stepTitle={intlUtils(intl, 'søknad.søkersituasjon')}\n                        onCancel={onAvbrytSøknad}\n                        onContinueLater={onFortsettSøknadSenere}\n                        steps={stepConfig(intl)}\n                        kompakt={true}\n                    >\n                        <SøkersituasjonFormComponents.Form includeButtons={false}>\n                            <div>\n                                <Block>\n                                    <SøkersituasjonFormComponents.RadioPanelGroup\n                                        name={SøkersituasjonFormField.situasjon}\n                                        radios={[\n                                            {\n                                                label: intlUtils(intl, 'søkersituasjon.radioButton.fødsel'),\n                                                value: 'fødsel',\n                                            },\n                                            {\n                                                label: intlUtils(intl, 'søkersituasjon.radioButton.adopsjon'),\n                                                value: 'adopsjon',\n                                            },\n                                        ]}\n                                        useTwoColumns={true}\n                                        legend={intlUtils(intl, 'søkersituasjon.text.situasjon')}\n                                    />\n                                </Block>\n                                <Block visible={visibility.isVisible(SøkersituasjonFormField.rolle)}>\n                                    <VelgRolle kjønn={kjønn} />\n                                </Block>\n                                {allQuestionsAnswered && (\n                                    <Block textAlignCenter={true} margin=\"l\">\n                                        <Hovedknapp disabled={isSubmitting} spinner={isSubmitting}>\n                                            {intlUtils(intl, 'søknad.gåVidere')}\n                                        </Hovedknapp>\n                                    </Block>\n                                )}\n                            </div>\n                        </SøkersituasjonFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default Søkersituasjon;\n","import { useNavigate } from 'react-router-dom';\nimport { useForeldrepengesøknadContext } from 'app/context/hooks/useForeldrepengesøknadContext';\nimport { logAmplitudeEvent } from 'app/amplitude/amplitude';\nimport Api from 'app/api/api';\nimport actionCreator from 'app/context/action/actionCreator';\nimport { useCallback } from 'react';\n\nconst useAvbrytSøknad = () => {\n    const navigate = useNavigate();\n    const { dispatch, state } = useForeldrepengesøknadContext();\n    const { søkerinfo } = state;\n\n    const avbrytSøknadHandler = useCallback(() => {\n        logAmplitudeEvent('applikasjon-hendelse', {\n            app: 'foreldrepengesoknad',\n            team: 'foreldrepenger',\n            hendelse: 'avbrutt',\n        });\n\n        dispatch(actionCreator.avbrytSøknad());\n        Api.deleteStoredAppState(søkerinfo.person.fnr);\n        navigate('/');\n    }, [navigate, dispatch, søkerinfo.person.fnr]);\n\n    return avbrytSøknadHandler;\n};\n\nexport default useAvbrytSøknad;\n","import { logAmplitudeEvent } from 'app/amplitude/amplitude';\nimport { useCallback } from 'react';\nimport Environment from 'app/Environment';\n\nconst useFortsettSøknadSenere = () => {\n    const useFortsettSøknadSenere = useCallback(() => {\n        logAmplitudeEvent('applikasjon-hendelse', {\n            app: 'foreldrepengesoknad',\n            team: 'foreldrepenger',\n            hendelse: 'fortsettSenere',\n        });\n\n        (window as any).location = Environment.FAMILIE;\n    }, []);\n\n    return useFortsettSøknadSenere;\n};\n\nexport default useFortsettSøknadSenere;\n","import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport actionCreator from 'app/context/action/actionCreator';\nimport SøknadRoutes from 'app/routes/routes';\nimport { useForeldrepengesøknadContext } from 'app/context/hooks/useForeldrepengesøknadContext';\nimport { ForeldrepengesøknadContextAction } from 'app/context/action/actionCreator';\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\nimport { redirectToLogin } from '../redirectToLogin';\nimport { sendErrorMessageToSentry } from 'app/api/apiUtils';\n\nconst useOnValidSubmit = <T>(\n    submitHandler: (values: T) => ForeldrepengesøknadContextAction[],\n    nextRoute: SøknadRoutes,\n    postSubmit: (state: ForeldrepengesøknadContextState) => Promise<any>\n) => {\n    const { dispatch, state } = useForeldrepengesøknadContext();\n    const navigate = useNavigate();\n    const [harSubmitted, setSubmitted] = useState(false);\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [submitError, setSubmitError] = useState(undefined);\n\n    useEffect(() => {\n        if (harSubmitted) {\n            postSubmit(state)\n                .then(() => {\n                    if (nextRoute === SøknadRoutes.SØKNAD_SENDT) {\n                        navigate(nextRoute);\n                    } else {\n                        navigate(state.currentRoute);\n                    }\n                })\n                .catch((error) => {\n                    if (error.response && (error.response.status === 401 || error.response.status === 403)) {\n                        redirectToLogin();\n                    } else {\n                        setSubmitError(error);\n                    }\n                });\n        }\n    }, [harSubmitted, navigate, nextRoute, state, postSubmit]);\n\n    useEffect(() => {\n        if (submitError) {\n            sendErrorMessageToSentry(submitError);\n            throw new Error(submitError);\n        }\n    }, [submitError]);\n\n    const handleSubmit = (values: T) => {\n        setIsSubmitting(true);\n        const actions = submitHandler(values);\n        const dispatchRouteChange =\n            nextRoute === SøknadRoutes.SØKNAD_SENDT ? undefined : dispatch(actionCreator.updateCurrentRoute(nextRoute));\n        Promise.all([dispatchRouteChange, ...actions.map((a) => dispatch(a))]).then(() => setSubmitted(true));\n    };\n\n    return { handleSubmit, isSubmitting };\n};\n\nexport default useOnValidSubmit;\n","import { useForeldrepengesøknadContext } from 'app/context/hooks/useForeldrepengesøknadContext';\nimport { Søkerinfo } from 'app/types/Søkerinfo';\n\nconst useSøkerinfo = (): Søkerinfo => {\n    const { state } = useForeldrepengesøknadContext();\n    return state.søkerinfo;\n};\n\nexport default useSøkerinfo;\n","import React from 'react';\nimport ForeldrepengesøknadContextProvider from '../../app/context/ForeldrepengesøknadContext';\n\nconst withForeldrepengersøknadContextProvider = (Story: any) => (\n    <ForeldrepengesøknadContextProvider>\n        <Story />\n    </ForeldrepengesøknadContextProvider>\n);\n\nexport default withForeldrepengersøknadContextProvider;\n","import React from 'react';\n\nimport IntlProvider from '../../app/intl/IntlProvider';\n\nconst withIntlProvider = (Story: any) => (\n    <IntlProvider locale=\"nb\">\n        <Story />\n    </IntlProvider>\n);\n\nexport default withIntlProvider;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst withRouterProvider = (Story: any) => (\n    <BrowserRouter>\n        <Story />\n    </BrowserRouter>\n);\n\nexport default withRouterProvider;\n","import React from 'react';\nimport { Story } from '@storybook/react';\nimport { Kjønn } from '@navikt/fp-common';\nimport søkerinfo from './testdata/søkerinfo.json';\nimport context from './testdata/context.json';\nimport { SøkerinfoDTO } from 'app/types/SøkerinfoDTO';\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\nimport Søkersituasjon from 'app/steps/søkersituasjon/Søkersituasjon';\nimport withIntlProvider from '../../../decorators/withIntl';\nimport withRouter from '../../../decorators/withRouter';\nimport withForeldrepengersøknadContext from '../../../decorators/withForeldrepengersøknadContext';\nimport ForeldrepengerStateMock from '../../../utils/ForeldrepengerStateMock';\nimport MockAdapter from 'axios-mock-adapter/types';\nimport AxiosMock from '../../../utils/AxiosMock';\n\nexport default {\n    title: 'steps/Søkersituasjon',\n    component: Søkersituasjon,\n    decorators: [withRouter, withIntlProvider, withForeldrepengersøknadContext],\n};\n\ninterface Props {\n    context: ForeldrepengesøknadContextState;\n    søkerinfo: SøkerinfoDTO;\n    kjønn: Kjønn;\n}\n\nconst Template: Story<Props> = ({ context, søkerinfo }) => {\n    const restMock = (apiMock: MockAdapter) => {\n        apiMock.onPost('/storage').reply(200, undefined);\n    };\n    return (\n        <AxiosMock mock={restMock}>\n            <ForeldrepengerStateMock søknad={context} søkerinfo={søkerinfo}>\n                <Søkersituasjon />\n            </ForeldrepengerStateMock>\n        </AxiosMock>\n    );\n};\n\nexport const Default = Template.bind({});\nDefault.args = {\n    context,\n    søkerinfo,\n    kjønn: 'K',\n};\n\nexport const Far = Template.bind({});\nFar.args = {\n    context,\n    søkerinfo: {\n        søker: {\n            ...søkerinfo,\n            kjønn: 'M',\n        },\n    } as SøkerinfoDTO,\n    kjønn: 'M',\n};\n","import { FunctionComponent, useEffect } from 'react';\nimport MockAdapter from 'axios-mock-adapter';\nimport getAxiosInstance from '../../app/api/apiInterceptor';\n\ninterface Props {\n    children: any;\n    mock: (adapter: MockAdapter) => void;\n}\n\nconst apiMock = new MockAdapter(getAxiosInstance());\n\nconst AxiosMock: FunctionComponent<Props> = ({ children, mock }) => {\n    useEffect(() => {\n        mock(apiMock);\n        return () => {\n            apiMock.reset();\n        };\n    });\n    return children;\n};\n\nexport default AxiosMock;\n","import { FunctionComponent, useEffect, useState } from 'react';\n\nimport actionCreator from '../../app/context/action/actionCreator';\nimport { useForeldrepengesøknadContext } from '../../app/context/hooks/useForeldrepengesøknadContext';\nimport { ForeldrepengesøknadContextState } from '../../app/context/ForeldrepengesøknadContextConfig';\nimport { SøkerinfoDTO } from '../../app/types/SøkerinfoDTO';\nimport mapSøkerinfoDTOToSøkerinfo from '../../app/utils/mapSøkerinfoDTO';\n\ninterface Props {\n    children: any;\n    søknad: ForeldrepengesøknadContextState;\n    søkerinfo: SøkerinfoDTO;\n}\n\nconst ForeldrepengerStateMock: FunctionComponent<Props> = ({ children, søknad, søkerinfo }) => {\n    const [erFerdig, setFerdig] = useState(false);\n    const { dispatch } = useForeldrepengesøknadContext();\n\n    useEffect(() => {\n        if (!erFerdig) {\n            Promise.all([\n                dispatch(actionCreator.applyStoredState(søknad)),\n                dispatch(actionCreator.setSøkerinfo(mapSøkerinfoDTOToSøkerinfo(søkerinfo))),\n            ]).then(() => setFerdig(true));\n        }\n    }, [dispatch, søknad, søkerinfo, erFerdig]);\n\n    return erFerdig ? children : null;\n};\n\nexport default ForeldrepengerStateMock;\n"],"names":["isQuestionVisible","questions","question","payload","config","isIncluded","visibilityFilter","undefined","parentQuestion","isAnswered","isQuestionAnswered","isQuestionIncluded","validateQuestion","value","validate","exports","getVisbility","key","isVisible","areAllQuestionsAnswered","allQuestionsHasAnswers","Object","keys","forEach","isOptional","getIncludedQuestions","filter","getQuestionVisbilityInfo","PageKeys","logAmplitudeEvent","eventName","eventData","arguments","length","setTimeout","amplitude","logEvent","error","console","log","getPreviousStepHrefEndringssøknad","id","href","assertUnreachable","concat","getPreviousStepHref","stepConfig","intl","index","label","intlUtils","SøkersituasjonFormField","initialSøkersituasjonValues","_defineProperty","_initialSøkersituasjo","situasjon","rolle","getInitialSøkerSituasjonValues","stateValues","hasValue","SøkersituasjonFormComponents","getTypedFormComponents","VelgRolle","_ref","kjønn","useIntl","React","Block","margin","RadioPanelGroup","name","radios","useTwoColumns","legend","SøkersituasjonFormConfig","_SøkersituasjonFormCo","_ref2","søkerKjønn","_ref3","_ref4","Questions","Søkersituasjon","søknad","useSøknad","useSøkerinfo","person","_useOnValidSubmit","useOnValidSubmit","onValidSubmitHandler","values","søkersituasjon","mapSøkersituasjonFormDataToState","formData","actionCreator","SøknadRoutes","state","storeAppState","handleSubmit","isSubmitting","onAvbrytSøknad","useAvbrytSøknad","onFortsettSøknadSenere","useFortsettSøknadSenere","useSaveLoadedRoute","FormikWrapper","initialValues","onSubmit","renderForm","formValues","visibility","søkersituasjonQuestionsConfig","_objectSpread","allQuestionsAnswered","Step","bannerTitle","activeStepId","pageTitle","stepTitle","onCancel","onContinueLater","steps","kompakt","Form","includeButtons","visible","textAlignCenter","Hovedknapp","disabled","spinner","navigate","useNavigate","_useForeldrepengesøkn","useForeldrepengesøknadContext","dispatch","søkerinfo","useCallback","app","team","hendelse","Api","fnr","window","location","Environment","submitHandler","nextRoute","postSubmit","_useState2","_slicedToArray","useState","harSubmitted","setSubmitted","_useState4","setIsSubmitting","_useState6","submitError","setSubmitError","useEffect","then","currentRoute","response","status","redirectToLogin","sendErrorMessageToSentry","Error","actions","dispatchRouteChange","Promise","all","_toConsumableArray","map","a","withForeldrepengersøknadContextProvider","Story","ForeldrepengesøknadContextProvider","withIntlProvider","IntlProvider","locale","withRouterProvider","BrowserRouter","title","component","decorators","withRouter","withForeldrepengersøknadContext","Template","context","AxiosMock","mock","restMock","apiMock","onPost","reply","ForeldrepengerStateMock","Default","bind","args","Far","søker","__namedExportsOrder","MockAdapter","getAxiosInstance","children","reset","erFerdig","setFerdig","mapSøkerinfoDTOToSøkerinfo"],"sourceRoot":""}