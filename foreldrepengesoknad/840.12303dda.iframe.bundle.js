"use strict";(self.webpackChunkforeldrepengesoknad=self.webpackChunkforeldrepengesoknad||[]).push([[840],{"./src/app/types/Dekningsgrad.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{var Dekningsgrad;__webpack_require__.d(__webpack_exports__,{w:()=>Dekningsgrad}),function(Dekningsgrad){Dekningsgrad["ÅTTI_PROSENT"]="80",Dekningsgrad.HUNDRE_PROSENT="100"}(Dekningsgrad||(Dekningsgrad={}))},"./src/app/types/DekningsgradDTO.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{var DekningsgradDTO;__webpack_require__.d(__webpack_exports__,{Y:()=>DekningsgradDTO}),function(DekningsgradDTO){DekningsgradDTO["ÅTTI_PROSENT"]="ÅTTI",DekningsgradDTO.HUNDRE_PROSENT="HUNDRE"}(DekningsgradDTO||(DekningsgradDTO={}))},"./src/app/types/RettighetType.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{var RettighetType;__webpack_require__.d(__webpack_exports__,{l:()=>RettighetType}),function(RettighetType){RettighetType["BARE_SØKER_RETT"]="BARE_SØKER_RETT",RettighetType.ALENEOMSORG="ALENEOMSORG",RettighetType.BEGGE_RETT="BEGGE_RETT"}(RettighetType||(RettighetType={}))},"./src/app/utils/eksisterendeSakUtils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{ZY:()=>getArbeidsformFromUttakArbeidstype,cD:()=>getStartdatoFørstePeriodeAnnenPart,P0:()=>mapAnnenPartsEksisterendeSakFromDTO,Xr:()=>mapSøkerensEksisterendeSakFromDTO,_4:()=>opprettSøknadFraEksisterendeSak,g3:()=>opprettSøknadFraValgteBarn,r6:()=>opprettSøknadFraValgteBarnMedSak});var UttakArbeidType,lib=__webpack_require__("../../node_modules/.pnpm/nav-frontend-js-utils@1.0.20_bnaq24lftdxaez3xjcv5glopji/node_modules/nav-frontend-js-utils/lib/index.js");!function(UttakArbeidType){UttakArbeidType["ORDINÆRT_ARBEID"]="ORDINÆRT_ARBEID",UttakArbeidType["SELVSTENDIG_NÆRINGSDRIVENDE"]="SELVSTENDIG_NÆRINGSDRIVENDE",UttakArbeidType.FRILANS="FRILANS",UttakArbeidType.ANNET="ANNET"}(UttakArbeidType||(UttakArbeidType={}));var OppholdÅrsakTypeDTO,Periode=__webpack_require__("./src/uttaksplan/types/Periode.ts");!function(OppholdÅrsakTypeDTO){OppholdÅrsakTypeDTO.UttakFellesperiodeAnnenForelder="FELLESPERIODE_ANNEN_FORELDER",OppholdÅrsakTypeDTO.UttakFedrekvoteAnnenForelder="FEDREKVOTE_ANNEN_FORELDER",OppholdÅrsakTypeDTO["UttakMødrekvoteAnnenForelder"]="MØDREKVOTE_ANNEN_FORELDER",OppholdÅrsakTypeDTO.UttakForeldrepengerAnnenForelder="FORELDREPENGER_ANNEN_FORELDER",OppholdÅrsakTypeDTO.Ingen="INGEN"}(OppholdÅrsakTypeDTO||(OppholdÅrsakTypeDTO={}));var FamiliehendelseType,Dekningsgrad=__webpack_require__("./src/app/types/Dekningsgrad.ts");!function(FamiliehendelseType){FamiliehendelseType.ADOPSJON="ADPSJN",FamiliehendelseType.OMSORGSOVERTAKELSE="OMSRGO",FamiliehendelseType["FØDSEL"]="FODSL",FamiliehendelseType.TERM="TERM"}(FamiliehendelseType||(FamiliehendelseType={}));var UtsettelseÅrsakTypeDTO,PeriodeResultatÅrsak,getFamiliehendelseType=function getFamiliehendelseType(fødselsdato,termindato,omsorgsovertagelsesdato){if(void 0!==omsorgsovertagelsesdato)return FamiliehendelseType.ADOPSJON;if(void 0!==fødselsdato)return FamiliehendelseType["FØDSEL"];if(void 0!==termindato)return FamiliehendelseType.TERM;throw new Error("Fødselsdato/ termindato/ omsorgsovertakelsedato mangler")},dateUtils=__webpack_require__("./src/app/utils/dateUtils.ts"),dayjs_min=__webpack_require__("../../node_modules/.pnpm/dayjs@1.11.7/node_modules/dayjs/dayjs.min.js"),dayjs_min_default=__webpack_require__.n(dayjs_min),Perioden=__webpack_require__("./src/app/steps/uttaksplan-info/utils/Perioden.ts"),Tidsperioden=__webpack_require__("./src/app/steps/uttaksplan-info/utils/Tidsperioden.ts"),Periodene=__webpack_require__("./src/app/steps/uttaksplan-info/utils/Periodene.ts"),Uttaksdagen=__webpack_require__("./src/app/steps/uttaksplan-info/utils/Uttaksdagen.ts"),Forelder=__webpack_require__("./src/app/types/Forelder.ts"),St_nadskontoType=__webpack_require__("./src/uttaksplan/types/StønadskontoType.ts"),Utsettelse_rsakType=__webpack_require__("./src/uttaksplan/types/UtsettelseÅrsakType.ts");!function(UtsettelseÅrsakTypeDTO){UtsettelseÅrsakTypeDTO.Ferie="LOVBESTEMT_FERIE",UtsettelseÅrsakTypeDTO.Arbeid="ARBEID",UtsettelseÅrsakTypeDTO.Sykdom="SØKER_SYKDOM",UtsettelseÅrsakTypeDTO["InstitusjonSøker"]="SØKER_INNLAGT",UtsettelseÅrsakTypeDTO.InstitusjonBarnet="BARN_INNLAGT",UtsettelseÅrsakTypeDTO["HvØvelse"]="HV_ØVELSE",UtsettelseÅrsakTypeDTO.NavTiltak="NAV_TILTAK",UtsettelseÅrsakTypeDTO.Fri="FRI"}(UtsettelseÅrsakTypeDTO||(UtsettelseÅrsakTypeDTO={})),function(PeriodeResultatÅrsak){PeriodeResultatÅrsak.AVSLAG_HULL_MELLOM_FORELDRENES_PERIODER="AVSLAG_HULL_MELLOM_FORELDRENES_PERIODER",PeriodeResultatÅrsak.ANNET="ANNET"}(PeriodeResultatÅrsak||(PeriodeResultatÅrsak={}));var uttaksplanbuilderUtils=__webpack_require__("./src/uttaksplan/builder/uttaksplanbuilderUtils.ts"),MorsAktivitet=__webpack_require__("./src/uttaksplan/types/MorsAktivitet.ts"),leggTilPeriode=__webpack_require__("./src/uttaksplan/builder/leggTilPeriode.ts"),PeriodeInfoType=__webpack_require__("./src/uttaksplan/types/PeriodeInfoType.ts"),Opphold_rsakType=__webpack_require__("./src/uttaksplan/types/OppholdÅrsakType.ts");function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!==_typeof(input)||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!==_typeof(res))return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"===_typeof(key)?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}var harUttaksdager=function harUttaksdager(periode){return(0,Perioden.p)(periode).getAntallUttaksdager()>0},harGyldigTidsperiode=function harGyldigTidsperiode(periode){return(0,Tidsperioden.pc)(periode.tidsperiode)},korrigerTidsperiodeTilGyldigUttaksdag=function korrigerTidsperiodeTilGyldigUttaksdag(periode){var _periode$tidsperiode=periode.tidsperiode,fom=_periode$tidsperiode.fom,tom=_periode$tidsperiode.tom,fomOk=(0,Uttaksdagen.Z)(fom),tomOk=(0,Uttaksdagen.Z)(tom);return fomOk&&tomOk?periode:_objectSpread(_objectSpread({},periode),{},fomOk||tomOk?!fomOk&&tomOk?{tidsperiode:{fom:(0,Uttaksdagen._)(fom).neste(),tom}}:{tidsperiode:{fom,tom:(0,Uttaksdagen._)(tom).forrige()}}:{tidsperiode:{fom:(0,Uttaksdagen._)(fom).neste(),tom:(0,Uttaksdagen._)(tom).forrige()}})},getForelderForPeriode=function getForelderForPeriode(saksperiode,søkerErFarEllerMedmor){return saksperiode.gjelderAnnenPart?søkerErFarEllerMedmor?Forelder.r.mor:Forelder.r.farMedmor:søkerErFarEllerMedmor?Forelder.r.farMedmor:Forelder.r.mor},getUtsettelseÅrsakFromSaksperiode=function getUtsettelseÅrsakFromSaksperiode(årsak){switch(årsak){case UtsettelseÅrsakTypeDTO.Arbeid:return Utsettelse_rsakType.h.Arbeid;case UtsettelseÅrsakTypeDTO.Ferie:return Utsettelse_rsakType.h.Ferie;case UtsettelseÅrsakTypeDTO.InstitusjonBarnet:return Utsettelse_rsakType.h.InstitusjonBarnet;case UtsettelseÅrsakTypeDTO["InstitusjonSøker"]:return Utsettelse_rsakType.h["InstitusjonSøker"];case UtsettelseÅrsakTypeDTO.Sykdom:return Utsettelse_rsakType.h.Sykdom;case UtsettelseÅrsakTypeDTO["HvØvelse"]:return Utsettelse_rsakType.h["HvØvelse"];case UtsettelseÅrsakTypeDTO.NavTiltak:return Utsettelse_rsakType.h.NavTiltak;default:return}},beregnSamtidigUttaksProsent=function beregnSamtidigUttaksProsent(egenProsent,andrePartsProsent,graderingsprosent){return egenProsent?egenProsent.toString():andrePartsProsent?graderingsprosent?(100-graderingsprosent).toString():"100":void 0},getErMorForSyk=function getErMorForSyk(erFarEllerMedmor,saksperiode,familiehendelsesdato,konto){if(erFarEllerMedmor&&!saksperiode.flerbarnsdager&&!saksperiode.samtidigUttak&&dayjs_min_default()(saksperiode.periode.fom).isBefore(dayjs_min_default()(familiehendelsesdato).add(6,"weeks"),"day")&&konto!==St_nadskontoType.N.AktivitetsfriKvote&&saksperiode.morsAktivitet!==MorsAktivitet.U["Uføre"])return!0},mapUttaksperiodeFromSaksperiode=function mapUttaksperiodeFromSaksperiode(saksperiode,grunnlag,innvilgedePerioder){var _saksperiode$graderin,gradert=void 0!==saksperiode.gradering&&saksperiode.resultat.innvilget,tidsperiodeDate=(0,dateUtils._Z)(saksperiode.periode),erFarEllerMedmorOgKunSøkerHarRett=grunnlag.søkerErFarEllerMedmor&&!grunnlag.morHarRett&&!grunnlag.farMedmorErAleneOmOmsorg&&!grunnlag.harAnnenForelderTilsvarendeRettEØS;if(saksperiode.gjelderAnnenPart)return mapAnnenPartInfoPeriodeFromSaksperiode(saksperiode,grunnlag.søkerErFarEllerMedmor,innvilgedePerioder);var samtidigUttakProsentAnnenPart,annenPartSamtidigUttakPeriode=void 0!==innvilgedePerioder?innvilgedePerioder.find((function(ip){return((0,Tidsperioden.Xj)((0,dateUtils._Z)(ip.periode)).erLik(tidsperiodeDate)||(0,Tidsperioden.Xj)((0,dateUtils._Z)(ip.periode)).overlapper(tidsperiodeDate))&&ip.guid!==saksperiode.guid})):void 0;annenPartSamtidigUttakPeriode&&(samtidigUttakProsentAnnenPart=annenPartSamtidigUttakPeriode.samtidigUttak);var samtidigUttakProsent=beregnSamtidigUttaksProsent(saksperiode.samtidigUttak,samtidigUttakProsentAnnenPart,null===(_saksperiode$graderin=saksperiode.gradering)||void 0===_saksperiode$graderin?void 0:_saksperiode$graderin.arbeidstidprosent),termindato=grunnlag.termindato,fødselsdato=grunnlag.fødselsdato,omsorgsovertakelsesdato=grunnlag.omsorgsovertakelsesdato,familiehendelseDato=(0,dateUtils.ug)(termindato,fødselsdato,omsorgsovertakelsesdato),kontoType=erFarEllerMedmorOgKunSøkerHarRett?function getKontotypeBareFarHarRett(periodeTrekkerMinsterett){return periodeTrekkerMinsterett?St_nadskontoType.N.AktivitetsfriKvote:St_nadskontoType.N.Foreldrepenger}(saksperiode.resultat.trekkerMinsterett):saksperiode.kontoType;return{id:(0,lib.guid)(),type:Periode.Zf.Uttak,konto:kontoType,tidsperiode:tidsperiodeDate,forelder:getForelderForPeriode(saksperiode,grunnlag.søkerErFarEllerMedmor),ønskerSamtidigUttak:void 0!==saksperiode.samtidigUttak,gradert,samtidigUttakProsent,ønskerFlerbarnsdager:grunnlag.antallBarn>1?saksperiode.flerbarnsdager:void 0,stillingsprosent:gradert?saksperiode.gradering.arbeidstidprosent.toString():void 0,arbeidsformer:gradert?[getArbeidsformFromUttakArbeidstype(saksperiode.gradering.aktivitet.type)]:void 0,orgnumre:gradert&&void 0!==saksperiode.gradering.aktivitet.arbeidsgiver?[saksperiode.gradering.aktivitet.arbeidsgiver.id]:void 0,morsAktivitetIPerioden:saksperiode.morsAktivitet,erMorForSyk:getErMorForSyk(grunnlag.søkerErFarEllerMedmor,saksperiode,familiehendelseDato,kontoType),angittAvAnnenPart:saksperiode.angittAvAnnenPart}},mapAnnenPartInfoPeriodeFromSaksperiode=function mapAnnenPartInfoPeriodeFromSaksperiode(saksperiode,erFarEllerMedmor,innvilgedePerioder){var _saksperiode$graderin2,tidsperiodeDate=(0,dateUtils._Z)(saksperiode.periode);if(void 0!==saksperiode.utsettelseÅrsak&&!0===saksperiode.resultat.innvilget)return{type:Periode.Zf.Info,infotype:PeriodeInfoType.g.utsettelseAnnenPart,id:(0,lib.guid)(),årsak:getUtsettelseÅrsakFromSaksperiode(saksperiode.utsettelseÅrsak),tidsperiode:tidsperiodeDate,forelder:getForelderForPeriode(saksperiode,erFarEllerMedmor),overskrives:!0,visPeriodeIPlan:!0};var samtidigUttakProsentAnnenPart,skalVises=void 0!==innvilgedePerioder&&!innvilgedePerioder.some((function(ip){return((0,Tidsperioden.Xj)((0,dateUtils._Z)(ip.periode)).erLik(tidsperiodeDate)||(0,Tidsperioden.Xj)((0,dateUtils._Z)(ip.periode)).overlapper(tidsperiodeDate))&&ip.guid!==saksperiode.guid})),årsak=function getOppholdÅrsakFromSaksperiode(saksperiode){switch(saksperiode.kontoType){case St_nadskontoType.N.Fedrekvote:return Opphold_rsakType.a.UttakFedrekvoteAnnenForelder;case St_nadskontoType.N.Fellesperiode:return Opphold_rsakType.a.UttakFellesperiodeAnnenForelder;case St_nadskontoType.N["Mødrekvote"]:return Opphold_rsakType.a["UttakMødrekvoteAnnenForelder"];case St_nadskontoType.N.Foreldrepenger:return Opphold_rsakType.a.UttakForeldrepengerAnnenForelder;case St_nadskontoType.N["ForeldrepengerFørFødsel"]:return Opphold_rsakType.a["ForeldrepengerFørFødsel"];default:return}}(saksperiode),annenPartSamtidigUttakPeriode=void 0!==innvilgedePerioder?innvilgedePerioder.find((function(ip){return((0,Tidsperioden.Xj)((0,dateUtils._Z)(ip.periode)).erLik(tidsperiodeDate)||(0,Tidsperioden.Xj)((0,dateUtils._Z)(ip.periode)).overlapper(tidsperiodeDate))&&ip.guid!==saksperiode.guid})):void 0;annenPartSamtidigUttakPeriode&&(samtidigUttakProsentAnnenPart=annenPartSamtidigUttakPeriode.samtidigUttak);var samtidigUttakProsent=beregnSamtidigUttaksProsent(saksperiode.samtidigUttak,samtidigUttakProsentAnnenPart,null===(_saksperiode$graderin2=saksperiode.gradering)||void 0===_saksperiode$graderin2?void 0:_saksperiode$graderin2.arbeidstidprosent);return{type:Periode.Zf.Info,infotype:PeriodeInfoType.g.uttakAnnenPart,id:(0,lib.guid)(),årsak,tidsperiode:tidsperiodeDate,forelder:getForelderForPeriode(saksperiode,erFarEllerMedmor),overskrives:!0,gradert:void 0!==saksperiode.gradering,ønskerSamtidigUttak:void 0!==samtidigUttakProsent,samtidigUttakProsent,stillingsprosent:void 0!==saksperiode.gradering?saksperiode.gradering.arbeidstidprosent.toString():void 0,visPeriodeIPlan:skalVises}},mapPeriodeFromSaksperiode=function mapPeriodeFromSaksperiode(saksperiode,grunnlag,innvilgedePerioder){return saksperiode.gjelderAnnenPart?mapAnnenPartInfoPeriodeFromSaksperiode(saksperiode,grunnlag.søkerErFarEllerMedmor,innvilgedePerioder):saksperiode.resultat.innvilget?void 0!==saksperiode.utsettelseÅrsak?function mapUtsettelseperiodeFromSaksperiode(saksperiode,erFarEllerMedmor){return saksperiode.gjelderAnnenPart?mapAnnenPartInfoPeriodeFromSaksperiode(saksperiode,erFarEllerMedmor):{id:(0,lib.guid)(),type:Periode.Zf.Utsettelse,årsak:getUtsettelseÅrsakFromSaksperiode(saksperiode.utsettelseÅrsak),tidsperiode:(0,dateUtils._Z)(saksperiode.periode),forelder:getForelderForPeriode(saksperiode,erFarEllerMedmor),erArbeidstaker:!1,morsAktivitetIPerioden:saksperiode.morsAktivitet}}(saksperiode,grunnlag.søkerErFarEllerMedmor):void 0!==saksperiode.overføringÅrsak?function mapOverføringsperiodeFromSaksperiode(saksperiode,erFarEllerMedmor){return{id:(0,lib.guid)(),forelder:getForelderForPeriode(saksperiode,erFarEllerMedmor),konto:saksperiode.kontoType,tidsperiode:(0,dateUtils._Z)(saksperiode.periode),type:Periode.Zf["Overføring"],årsak:saksperiode.overføringÅrsak}}(saksperiode,grunnlag.søkerErFarEllerMedmor):mapUttaksperiodeFromSaksperiode(saksperiode,grunnlag,innvilgedePerioder):function mapInfoPeriodeFromAvslåttSaksperiode(saksperiode,erFarEllerMedmor){return{id:(0,lib.guid)(),type:Periode.Zf.Info,infotype:PeriodeInfoType.g["avslåttPeriode"],tidsperiode:(0,dateUtils._Z)(saksperiode.periode),avslåttPeriodeType:void 0!==saksperiode.utsettelseÅrsak?Periode.Zf.Utsettelse:Periode.Zf.Uttak,kontoType:saksperiode.kontoType,forelder:getForelderForPeriode(saksperiode,erFarEllerMedmor),overskrives:!0,visPeriodeIPlan:!0}}(saksperiode,grunnlag.søkerErFarEllerMedmor)},gyldigeSaksperioder=function gyldigeSaksperioder(saksperiode){return!!saksperiode.resultat.innvilget||!saksperiode.gjelderAnnenPart&&(saksperiode.resultat.årsak!==PeriodeResultatÅrsak.AVSLAG_HULL_MELLOM_FORELDRENES_PERIODER&&!0===saksperiode.resultat.trekkerDager)};const utils_mapSaksperioderTilUttaksperioder=function mapSaksperioderTilUttaksperioder(saksperioder,grunnlag,førsteUttaksdagNesteBarnsSak){var innvilgedePerioder=saksperioder.filter(gyldigeSaksperioder),perioder=innvilgedePerioder.map((function(periode){return mapPeriodeFromSaksperiode(periode,grunnlag,innvilgedePerioder)})),familiehendelsesdato=new Date(grunnlag.familiehendelseDato),splittedePerioder=function getPerioderSplittetOverFødselOgNesteBarnsFørsteStønadsdag(perioder,familiehendelsesdato,førsteUttaksdagNesteBarnsSak){var nyePerioder=[];return perioder.forEach((function(p){(0,dateUtils.KD)(p.tidsperiode,familiehendelsesdato)&&(0,Periode.R1)(p)?(0,leggTilPeriode.Ly)(p,familiehendelsesdato).forEach((function(periode){return nyePerioder.push(periode)})):void 0!==førsteUttaksdagNesteBarnsSak&&(0,dateUtils.KD)(p.tidsperiode,førsteUttaksdagNesteBarnsSak)?(0,leggTilPeriode.lI)(p,førsteUttaksdagNesteBarnsSak).forEach((function(periode){return nyePerioder.push(periode)})):nyePerioder.push(p)})),nyePerioder}(perioder,familiehendelsesdato,førsteUttaksdagNesteBarnsSak),sammenslåddePerioder=function slåSammenLikePerioder(perioder,familiehendelsesdato,førsteUttaksdagNesteBarnsSak){if(perioder.length<=1)return perioder;var nyePerioder=[],infoPerioder=perioder.filter((function(p){return(0,Periode.O2)(p)})),ordinærePerioder=perioder.filter((function(p){return!(0,Periode.O2)(p)})),tmp=[].concat(_toConsumableArray(ordinærePerioder),_toConsumableArray(infoPerioder)),forrigePeriode=_objectSpread({},tmp[0]);return tmp.forEach((function(periode,index){0!==index&&(void 0!==forrigePeriode?!(0,Perioden.p)(forrigePeriode).erLik(periode,!1,!0)||!(0,Perioden.p)(forrigePeriode).erSammenhengende(periode)||dayjs_min_default()(periode.tidsperiode.fom).isSame(familiehendelsesdato,"day")||void 0!==førsteUttaksdagNesteBarnsSak&&dayjs_min_default()(periode.tidsperiode.fom).isSame(førsteUttaksdagNesteBarnsSak,"day")?(nyePerioder.push(forrigePeriode),forrigePeriode=periode):forrigePeriode.tidsperiode.tom=periode.tidsperiode.tom:forrigePeriode=periode)})),nyePerioder.push(forrigePeriode),nyePerioder.sort(Periodene.$6)}(splittedePerioder.sort(Periodene.$6).filter(harUttaksdager).map(korrigerTidsperiodeTilGyldigUttaksdag).filter(harGyldigTidsperiode).filter(harUttaksdager),familiehendelsesdato,førsteUttaksdagNesteBarnsSak),kunFarMedmorHarRett=!grunnlag.morHarRett&&grunnlag.farMedmorHarRett&&!grunnlag.harAnnenForelderTilsvarendeRettEØS,erAdopsjon=grunnlag.familiehendelseType===FamiliehendelseType.ADOPSJON,perioderUtenAnnenPartsSamtidigUttak=sammenslåddePerioder.filter((function(p){return!(0,Periode.O2)(p)})),annenPartsUttak=sammenslåddePerioder.filter((function(p){return(0,Periode.O2)(p)})),harAktivitetskravIPeriodeUtenUttak=!grunnlag.erDeltUttak&&kunFarMedmorHarRett&&!grunnlag.farMedmorErAleneOmOmsorg,perioderUtenAnnenPartsSamtidigUttakMedHull=(0,uttaksplanbuilderUtils.Wb)(perioderUtenAnnenPartsSamtidigUttak,harAktivitetskravIPeriodeUtenUttak,familiehendelsesdato,erAdopsjon,kunFarMedmorHarRett,grunnlag.søkerErFarEllerMedmor,førsteUttaksdagNesteBarnsSak);return(0,uttaksplanbuilderUtils.Wb)((0,uttaksplanbuilderUtils.jr)(perioderUtenAnnenPartsSamtidigUttakMedHull,annenPartsUttak,familiehendelsesdato,førsteUttaksdagNesteBarnsSak),harAktivitetskravIPeriodeUtenUttak,familiehendelsesdato,erAdopsjon,kunFarMedmorHarRett,grunnlag.søkerErFarEllerMedmor,førsteUttaksdagNesteBarnsSak)};var Barn=__webpack_require__("./src/app/context/types/Barn.ts"),DekningsgradDTO=__webpack_require__("./src/app/types/DekningsgradDTO.ts"),RettighetType=__webpack_require__("./src/app/types/RettighetType.ts"),sif_common_formik_lib=__webpack_require__("../../node_modules/.pnpm/@navikt+sif-common-formik@23.5.1_avhl3kusmshtlfu6w57gcaav3m/node_modules/@navikt/sif-common-formik/lib/index.js"),fp_common_lib=__webpack_require__("../../packages/fp-common/lib/index.js"),velkommenUtils=__webpack_require__("./src/app/pages/velkommen/velkommenUtils.ts");function eksisterendeSakUtils_typeof(obj){return eksisterendeSakUtils_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},eksisterendeSakUtils_typeof(obj)}function eksisterendeSakUtils_ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function eksisterendeSakUtils_objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?eksisterendeSakUtils_ownKeys(Object(source),!0).forEach((function(key){eksisterendeSakUtils_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):eksisterendeSakUtils_ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function eksisterendeSakUtils_defineProperty(obj,key,value){return(key=function eksisterendeSakUtils_toPropertyKey(arg){var key=function eksisterendeSakUtils_toPrimitive(input,hint){if("object"!==eksisterendeSakUtils_typeof(input)||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!==eksisterendeSakUtils_typeof(res))return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"===eksisterendeSakUtils_typeof(key)?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var getArbeidsformFromUttakArbeidstype=function getArbeidsformFromUttakArbeidstype(arbeidstype){switch(arbeidstype){case UttakArbeidType["SELVSTENDIG_NÆRINGSDRIVENDE"]:return Periode.XE["selvstendignæringsdrivende"];case UttakArbeidType.FRILANS:return Periode.XE.frilans;default:return Periode.XE.arbeidstaker}},getStønadskontoTypeFromOppholdÅrsakType=function getStønadskontoTypeFromOppholdÅrsakType(årsak){switch(årsak){case OppholdÅrsakTypeDTO.UttakFedrekvoteAnnenForelder:return St_nadskontoType.N.Fedrekvote;case OppholdÅrsakTypeDTO.UttakFellesperiodeAnnenForelder:return St_nadskontoType.N.Fellesperiode;case OppholdÅrsakTypeDTO["UttakMødrekvoteAnnenForelder"]:return St_nadskontoType.N["Mødrekvote"];default:return}},mapOppholdÅrsakType=function mapOppholdÅrsakType(årsak){switch(årsak){case OppholdÅrsakTypeDTO.UttakFedrekvoteAnnenForelder:return Opphold_rsakType.a.UttakFedrekvoteAnnenForelder;case OppholdÅrsakTypeDTO.UttakFellesperiodeAnnenForelder:return Opphold_rsakType.a.UttakFellesperiodeAnnenForelder;case OppholdÅrsakTypeDTO["UttakMødrekvoteAnnenForelder"]:return Opphold_rsakType.a["UttakMødrekvoteAnnenForelder"];default:return}},mapSaksperiodeFromDTO=function mapSaksperiodeFromDTO(p,erAnnenPartsSak){var oppholdÅrsak=p.oppholdÅrsak,returnPeriode={guid:(0,lib.guid)(),periode:{fom:p.fom,tom:p.tom},gjelderAnnenPart:erAnnenPartsSak,resultat:p.resultat,kontoType:p.kontoType,flerbarnsdager:p.flerbarnsdager,gradering:p.gradering,utsettelseÅrsak:p.utsettelseÅrsak,overføringÅrsak:p.overføringÅrsak,samtidigUttak:p.samtidigUttak,morsAktivitet:p.morsAktivitet,oppholdÅrsak:mapOppholdÅrsakType(p.oppholdÅrsak)};return void 0!==oppholdÅrsak&&!1===erAnnenPartsSak&&(returnPeriode.gjelderAnnenPart=!0,returnPeriode.kontoType=getStønadskontoTypeFromOppholdÅrsakType(oppholdÅrsak)),void 0!==oppholdÅrsak&&erAnnenPartsSak&&(returnPeriode.gjelderAnnenPart=!1,returnPeriode.angittAvAnnenPart=!0,returnPeriode.kontoType=getStønadskontoTypeFromOppholdÅrsakType(oppholdÅrsak)),returnPeriode},saksperiodeErInnvilget=function saksperiodeErInnvilget(saksperiode){return saksperiode.resultat.innvilget},filterAvslåttePeriodeMedInnvilgetPeriodeISammeTidsperiode=function filterAvslåttePeriodeMedInnvilgetPeriodeISammeTidsperiode(periode,_index,saksperioder){var likePerioder=saksperioder.filter((function(periode2){return periode.guid!==periode2.guid&&(0,Tidsperioden.Xj)((0,dateUtils._Z)(periode.periode)).erLik((0,dateUtils._Z)(periode2.periode))}));if(0===likePerioder.length)return!0;var innvilgedePerioder=likePerioder.filter(saksperiodeErInnvilget);return!(!1===saksperiodeErInnvilget(periode)&&innvilgedePerioder.length>0)},getStartdatoFørstePeriodeAnnenPart=function getStartdatoFørstePeriodeAnnenPart(annenPartsSak){if(void 0!==annenPartsSak&&""!==annenPartsSak&&0!==Object.keys(annenPartsSak).length&&0!==annenPartsSak.perioder.length)return(0,dateUtils.Hv)(annenPartsSak.perioder[0].fom)},mapAnnenPartsEksisterendeSakFromDTO=function mapAnnenPartsEksisterendeSakFromDTO(eksisterendeSakAnnenPart,barn,søkerErFarEllerMedmor,familiehendelsesdato,førsteUttaksdagNesteBarnsSak){if(void 0!==eksisterendeSakAnnenPart&&""!==eksisterendeSakAnnenPart&&0!==Object.keys(eksisterendeSakAnnenPart).length){var saksperioderAnnenPart=eksisterendeSakAnnenPart.perioder.map((function(p){return mapSaksperiodeFromDTO(p,true)})).filter(filterAvslåttePeriodeMedInnvilgetPeriodeISammeTidsperiode),termindato=void 0;void 0!==eksisterendeSakAnnenPart.termindato?termindato=eksisterendeSakAnnenPart.termindato:((0,Barn.dK)(barn)||(0,Barn.UR)(barn))&&void 0!==barn.termindato&&(termindato=(0,sif_common_formik_lib.dateToISOString)(barn.termindato));var fødselsdato=(0,Barn.dK)(barn)?(0,sif_common_formik_lib.dateToISOString)(barn.fødselsdatoer[0]):void 0,adopsjonsdato=(0,Barn._R)(barn)?(0,sif_common_formik_lib.dateToISOString)(barn.adopsjonsdato):void 0,grunnlagForAnnenPart={dekningsgrad:eksisterendeSakAnnenPart.dekningsgrad===DekningsgradDTO.Y.HUNDRE_PROSENT?Dekningsgrad.w.HUNDRE_PROSENT:Dekningsgrad.w["ÅTTI_PROSENT"],antallBarn:eksisterendeSakAnnenPart.antallBarn?eksisterendeSakAnnenPart.antallBarn:barn.antallBarn,morErAleneOmOmsorg:!1,morErUfør:!1,morHarRett:!0,farMedmorErAleneOmOmsorg:!1,farMedmorHarRett:!0,søkerErFarEllerMedmor,termindato,fødselsdato,omsorgsovertakelsesdato:adopsjonsdato,erDeltUttak:!0,erBarnetFødt:void 0!==fødselsdato,familiehendelseDato:familiehendelsesdato,familiehendelseType:getFamiliehendelseType(fødselsdato,termindato,adopsjonsdato),harAnnenForelderTilsvarendeRettEØS:!1,ønskerJustertUttakVedFødsel:void 0,barn:[]};return{saksnummer:"",erAnnenPartsSak:true,grunnlag:grunnlagForAnnenPart,saksperioder:saksperioderAnnenPart,uttaksplan:utils_mapSaksperioderTilUttaksperioder(saksperioderAnnenPart,grunnlagForAnnenPart,førsteUttaksdagNesteBarnsSak).filter((function(p){return(0,Periode.O2)(p)}))}}},mapSøkerensEksisterendeSakFromDTO=function mapSøkerensEksisterendeSakFromDTO(eksisterendeSak,førsteUttaksdagNesteBarnsSak){if(void 0!==eksisterendeSak&&""!==eksisterendeSak&&0!==Object.keys(eksisterendeSak).length){var dekningsgrad=eksisterendeSak.dekningsgrad,_eksisterendeSak$fami=eksisterendeSak.familiehendelse,fødselsdato=_eksisterendeSak$fami.fødselsdato,termindato=_eksisterendeSak$fami.termindato,omsorgsovertakelse=_eksisterendeSak$fami.omsorgsovertakelse,antallBarn=_eksisterendeSak$fami.antallBarn,harAnnenForelderTilsvarendeRettEØS=eksisterendeSak.harAnnenForelderTilsvarendeRettEØS,morUføretrygd=eksisterendeSak.morUføretrygd,rettighetType=eksisterendeSak.rettighetType,sakTilhørerMor=eksisterendeSak.sakTilhørerMor,ønskerJustertUttakVedFødsel=eksisterendeSak.ønskerJustertUttakVedFødsel,perioder=eksisterendeSak.gjeldendeVedtak?eksisterendeSak.gjeldendeVedtak.perioder:[],erFarEllerMedmor=!sakTilhørerMor,grunnlag={dekningsgrad:dekningsgrad===DekningsgradDTO.Y.HUNDRE_PROSENT?Dekningsgrad.w.HUNDRE_PROSENT:Dekningsgrad.w["ÅTTI_PROSENT"],antallBarn,morErAleneOmOmsorg:sakTilhørerMor&&rettighetType===RettighetType.l.ALENEOMSORG,morErUfør:morUføretrygd,morHarRett:sakTilhørerMor||rettighetType===RettighetType.l.BEGGE_RETT,farMedmorErAleneOmOmsorg:!sakTilhørerMor&&rettighetType===RettighetType.l.ALENEOMSORG,farMedmorHarRett:!sakTilhørerMor||rettighetType===RettighetType.l.BEGGE_RETT,søkerErFarEllerMedmor:erFarEllerMedmor,termindato,fødselsdato,omsorgsovertakelsesdato:omsorgsovertakelse,erDeltUttak:rettighetType===RettighetType.l.BEGGE_RETT,erBarnetFødt:void 0!==fødselsdato,familiehendelseDato:(0,dateUtils.ug)(termindato,fødselsdato,omsorgsovertakelse),familiehendelseType:getFamiliehendelseType(fødselsdato,termindato,omsorgsovertakelse),ønskerJustertUttakVedFødsel:void 0===fødselsdato?ønskerJustertUttakVedFødsel:void 0,harAnnenForelderTilsvarendeRettEØS},saksperioder=perioder.map((function(p){return mapSaksperiodeFromDTO(p,false)})).filter(filterAvslåttePeriodeMedInnvilgetPeriodeISammeTidsperiode),uttaksplan=utils_mapSaksperioderTilUttaksperioder(saksperioder,grunnlag,førsteUttaksdagNesteBarnsSak);return{saksnummer:eksisterendeSak.saksnummer,erAnnenPartsSak:false,grunnlag,saksperioder,uttaksplan}}},getSøkersituasjonFromSaksgrunnlag=function getSøkersituasjonFromSaksgrunnlag(familiehendelseType){return familiehendelseType===FamiliehendelseType.TERM||familiehendelseType===FamiliehendelseType["FØDSEL"]?"fødsel":"adopsjon"},finnAnnenForelderForSaken=function finnAnnenForelderForSaken(barn,fødselsdato,grunnlag,situasjon,intl,valgtBarnFnr,annenForeldersFnrFraSaken){var _barnet$annenForelder;if((void 0!==valgtBarnFnr||void 0!==fødselsdato)&&annenForeldersFnrFraSaken){var barnMedGittFnr=void 0!==valgtBarnFnr?barn.find((function(b){return valgtBarnFnr.includes(b.fnr)&&void 0!==b.annenForelder})):void 0,barnMedGittFødselsdato=void 0!==fødselsdato?barn.filter((function(b){return(0,velkommenUtils.ZC)(b.fødselsdato,fødselsdato)&&void 0!==b.annenForelder})):[],barnet=barnMedGittFnr||barnMedGittFødselsdato.length>0?barnMedGittFødselsdato[0]:void 0;if(void 0!==barnet&&(null===(_barnet$annenForelder=barnet.annenForelder)||void 0===_barnet$annenForelder?void 0:_barnet$annenForelder.fnr)===annenForeldersFnrFraSaken){var annenForelder=barnet.annenForelder,fornavn=annenForelder.fornavn,fornavnAnnenForelder=void 0!==fornavn&&""!==fornavn.trim()?fornavn:(0,fp_common_lib.intlUtils)(intl,"annen.forelder");return function getAnnenForelderFromSaksgrunnlag(situasjon,grunnlag,annenPart,erFarEllerMedmor,intl){switch(situasjon){case"fødsel":case"adopsjon":return erFarEllerMedmor?{fornavn:void 0!==annenPart.fornavn&&""!==annenPart.fornavn?annenPart.fornavn:(0,fp_common_lib.intlUtils)(intl,"annen.forelder"),etternavn:annenPart.etternavn,erUfør:grunnlag.morErUfør,harRettPåForeldrepengerINorge:!!grunnlag.morHarRett&&!grunnlag.harAnnenForelderTilsvarendeRettEØS,fnr:annenPart.fnr,kanIkkeOppgis:!1,harRettPåForeldrepengerIEØS:grunnlag.harAnnenForelderTilsvarendeRettEØS}:{fornavn:void 0!==annenPart.fornavn&&""!==annenPart.fornavn?annenPart.fornavn:(0,fp_common_lib.intlUtils)(intl,"annen.forelder"),etternavn:annenPart.etternavn,harRettPåForeldrepengerINorge:!!grunnlag.farMedmorHarRett&&!grunnlag.harAnnenForelderTilsvarendeRettEØS,fnr:annenPart.fnr,kanIkkeOppgis:!1,harRettPåForeldrepengerIEØS:grunnlag.harAnnenForelderTilsvarendeRettEØS};default:return}}(situasjon,grunnlag,eksisterendeSakUtils_objectSpread(eksisterendeSakUtils_objectSpread({},annenForelder),{},{fornavn:fornavnAnnenForelder}),grunnlag.søkerErFarEllerMedmor,intl)}}},getBarnFromValgteBarn=function getBarnFromValgteBarn(valgteBarn){return void 0!==valgteBarn.fødselsdatoer&&valgteBarn.fødselsdatoer.length>0?{type:Barn._M["FØDT"],antallBarn:valgteBarn.antallBarn,fødselsdatoer:[(0,dateUtils.LW)(valgteBarn.fødselsdatoer)],fnr:void 0!==valgteBarn.fnr&&valgteBarn.fnr.length>0?valgteBarn.fnr.filter((function(fnr){return!!fnr})):void 0}:void 0!==valgteBarn.termindato?{type:Barn._M["UFØDT"],antallBarn:valgteBarn.antallBarn,termindato:valgteBarn.termindato}:{type:Barn._M.IKKE_UTFYLT,antallBarn:valgteBarn.antallBarn,fødselsdatoer:[(0,dateUtils.LW)(valgteBarn.fødselsdatoer)],fnr:void 0!==valgteBarn.fnr&&valgteBarn.fnr.length>0?valgteBarn.fnr.filter((function(fnr){return!!fnr})):void 0}},opprettSøknadFraValgteBarn=function opprettSøknadFraValgteBarn(valgteBarn){var barn=getBarnFromValgteBarn(valgteBarn),annenForelder=function getAnnenForelderFromValgteBarn(valgteBarn){if(void 0!==valgteBarn.annenForelder)return{fornavn:valgteBarn.annenForelder.fornavn,etternavn:valgteBarn.annenForelder.etternavn,fnr:valgteBarn.annenForelder.fnr,kanIkkeOppgis:!1}}(valgteBarn);return{barn,annenForelder,erEndringssøknad:!1}},opprettAnnenForelderFraEksisterendeSak=function opprettAnnenForelderFraEksisterendeSak(intl,annenPartFraSak,grunnlag,søkerinfo,situasjon,valgteBarnFnr){var fnrAnnenForelderFraSak=void 0!==annenPartFraSak?annenPartFraSak.fnr:void 0,mockAnnenForelder={fornavn:(0,fp_common_lib.intlUtils)(intl,"annen.forelder"),etternavn:"",fnr:fnrAnnenForelderFraSak||"",harRettPåForeldrepengerINorge:grunnlag.søkerErFarEllerMedmor?!!grunnlag.morHarRett&&!grunnlag.harAnnenForelderTilsvarendeRettEØS:!!grunnlag.farMedmorHarRett&&!grunnlag.harAnnenForelderTilsvarendeRettEØS,harRettPåForeldrepengerIEØS:grunnlag.harAnnenForelderTilsvarendeRettEØS,kanIkkeOppgis:!1,erUfør:grunnlag.søkerErFarEllerMedmor?grunnlag.morErUfør:void 0};return finnAnnenForelderForSaken(søkerinfo.registrerteBarn,(0,dateUtils.Hv)(grunnlag.fødselsdato),grunnlag,situasjon,intl,valgteBarnFnr,fnrAnnenForelderFraSak)||mockAnnenForelder},opprettSøknadFraValgteBarnMedSak=function opprettSøknadFraValgteBarnMedSak(valgteBarn,intl,søkerinfo){var _valgteBarn$sak,grunnlag=mapSøkerensEksisterendeSakFromDTO(valgteBarn.sak,void 0).grunnlag,situasjon=getSøkersituasjonFromSaksgrunnlag(grunnlag.familiehendelseType),søknad={barn:getBarnFromValgteBarn(valgteBarn),annenForelder:opprettAnnenForelderFraEksisterendeSak(intl,null===(_valgteBarn$sak=valgteBarn.sak)||void 0===_valgteBarn$sak?void 0:_valgteBarn$sak.annenPart,grunnlag,søkerinfo,situasjon,valgteBarn.fnr),erEndringssøknad:!1};if(void 0!==valgteBarn.sak){var søkersituasjon={situasjon:valgteBarn.sak.gjelderAdopsjon?"adopsjon":"fødsel",rolle:valgteBarn.sak.sakTilhørerMor?void 0:"far"};søknad.søkersituasjon=søkersituasjon}return søknad},opprettSøknadFraEksisterendeSak=function opprettSøknadFraEksisterendeSak(søkerinfo,eksisterendeSak,intl,annenPartFraSak,valgteBarnFnr){var grunnlag=eksisterendeSak.grunnlag,uttaksplan=eksisterendeSak.uttaksplan,dekningsgrad=grunnlag.dekningsgrad,familiehendelseType=grunnlag.familiehendelseType,søkerErFarEllerMedmor=grunnlag.søkerErFarEllerMedmor,ønskerJustertUttakVedFødsel=grunnlag.ønskerJustertUttakVedFødsel,situasjon=getSøkersituasjonFromSaksgrunnlag(familiehendelseType);if(situasjon){var søker=function getSøkerFromSaksgrunnlag(grunnlag,erFarEllerMedmor){return{erAleneOmOmsorg:erFarEllerMedmor?grunnlag.farMedmorErAleneOmOmsorg:grunnlag.morErAleneOmOmsorg}}(grunnlag,søkerErFarEllerMedmor),barn=function getBarnFromSaksgrunnlag(situasjon,sak,valgteBarnFnr){switch(situasjon){case"fødsel":return sak.fødselsdato?{type:Barn._M["FØDT"],antallBarn:sak.antallBarn,fødselsdatoer:[(0,dateUtils.Hv)(sak.fødselsdato)],termindato:sak.termindato?(0,dateUtils.Hv)(sak.termindato):void 0,fnr:valgteBarnFnr}:{type:Barn._M["UFØDT"],antallBarn:sak.antallBarn,termindato:(0,dateUtils.Hv)(sak.termindato),terminbekreftelse:[]};case"adopsjon":return{type:Barn._M.ADOPTERT_STEBARN,adopsjonsdato:(0,dateUtils.Hv)(sak.omsorgsovertakelsesdato),antallBarn:sak.antallBarn,fødselsdatoer:void 0!==sak.fødselsdato?[(0,dateUtils.Hv)(sak.fødselsdato)]:[],omsorgsovertakelse:[],fnr:valgteBarnFnr};default:return}}(situasjon,grunnlag,valgteBarnFnr),rolle=function getSøkerrolleFromSaksgrunnlag(person,situasjon,grunnlag){var søkerErFarEllerMedmor=grunnlag.søkerErFarEllerMedmor,søkerErKvinne="K"===person.kjønn;switch(situasjon){case"fødsel":case"adopsjon":return søkerErKvinne?søkerErFarEllerMedmor?"medmor":"mor":"far";default:return}}(søkerinfo.person,situasjon,grunnlag);if(barn&&rolle)return{søker,søkersituasjon:{situasjon,rolle},barn,annenForelder:opprettAnnenForelderFraEksisterendeSak(intl,annenPartFraSak,grunnlag,søkerinfo,situasjon,valgteBarnFnr),erEndringssøknad:!0,dekningsgrad,uttaksplan,saksnummer:eksisterendeSak.saksnummer,ønskerJustertUttakVedFødsel}}}},"./src/uttaksplan/builder/leggTilPeriode.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ly:()=>splittUttaksperiodePåFamiliehendelsesdato,ZI:()=>leggTilPeriode,lI:()=>splittPeriodePåDato});var app_steps_uttaksplan_info_utils_Periodene__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/app/steps/uttaksplan-info/utils/Periodene.ts"),app_steps_uttaksplan_info_utils_Tidsperioden__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/app/steps/uttaksplan-info/utils/Tidsperioden.ts"),app_steps_uttaksplan_info_utils_Uttaksdagen__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/app/steps/uttaksplan-info/utils/Uttaksdagen.ts"),dayjs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/.pnpm/dayjs@1.11.7/node_modules/dayjs/dayjs.min.js"),dayjs__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_3__),nav_frontend_js_utils__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../../node_modules/.pnpm/nav-frontend-js-utils@1.0.20_bnaq24lftdxaez3xjcv5glopji/node_modules/nav-frontend-js-utils/lib/index.js"),uttaksplan_types_Periode__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/uttaksplan/types/Periode.ts"),uttaksplan_types_St_nadskontoType__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/uttaksplan/types/StønadskontoType.ts"),_uttaksplanbuilderUtils__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./src/uttaksplan/builder/uttaksplanbuilderUtils.ts");function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!==_typeof(input)||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!==_typeof(res))return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"===_typeof(key)?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var splittPeriodePåDato=function splittPeriodePåDato(periode,dato){var periodeFørDato=_objectSpread(_objectSpread({},periode),{},{tidsperiode:{fom:periode.tidsperiode.fom,tom:(0,app_steps_uttaksplan_info_utils_Uttaksdagen__WEBPACK_IMPORTED_MODULE_2__._)(dato).forrige()}});return[periodeFørDato,_objectSpread(_objectSpread({},periode),{},{id:(0,nav_frontend_js_utils__WEBPACK_IMPORTED_MODULE_4__.guid)(),tidsperiode:{fom:(0,app_steps_uttaksplan_info_utils_Uttaksdagen__WEBPACK_IMPORTED_MODULE_2__._)(periodeFørDato.tidsperiode.tom).neste(),tom:periode.tidsperiode.tom}})]},splittUttaksperiodePåFamiliehendelsesdato=function splittUttaksperiodePåFamiliehendelsesdato(periode,famDato){var periodeFørFamDato=_objectSpread(_objectSpread({},periode),{},{konto:periode.konto==uttaksplan_types_St_nadskontoType__WEBPACK_IMPORTED_MODULE_6__.N.Foreldrepenger?uttaksplan_types_St_nadskontoType__WEBPACK_IMPORTED_MODULE_6__.N.AktivitetsfriKvote:periode.konto,morsAktivitetIPerioden:periode.konto==uttaksplan_types_St_nadskontoType__WEBPACK_IMPORTED_MODULE_6__.N.Foreldrepenger?void 0:periode.morsAktivitetIPerioden,erMorForSyk:periode.konto==uttaksplan_types_St_nadskontoType__WEBPACK_IMPORTED_MODULE_6__.N.Foreldrepenger?void 0:periode.erMorForSyk,tidsperiode:{fom:periode.tidsperiode.fom,tom:(0,app_steps_uttaksplan_info_utils_Uttaksdagen__WEBPACK_IMPORTED_MODULE_2__._)(famDato).forrige()}});return[periodeFørFamDato,_objectSpread(_objectSpread({},periode),{},{id:(0,nav_frontend_js_utils__WEBPACK_IMPORTED_MODULE_4__.guid)(),tidsperiode:{fom:(0,app_steps_uttaksplan_info_utils_Uttaksdagen__WEBPACK_IMPORTED_MODULE_2__._)(periodeFørFamDato.tidsperiode.tom).neste(),tom:periode.tidsperiode.tom}})]},leggTilPeriode=function leggTilPeriode(_ref){var perioder=_ref.perioder,nyPeriode=_ref.nyPeriode,familiehendelsesdato=_ref.familiehendelsesdato,harAktivitetskravIPeriodeUtenUttak=_ref.harAktivitetskravIPeriodeUtenUttak,erAdopsjon=_ref.erAdopsjon,bareFarHarRett=_ref.bareFarHarRett,erFarEllerMedmor=_ref.erFarEllerMedmor,førsteUttaksdagNesteBarnsSak=_ref.førsteUttaksdagNesteBarnsSak;if(0===perioder.length)return[nyPeriode];var nyPeriodeFomDate=nyPeriode.tidsperiode.fom,nyPeriodeTomDate=nyPeriode.tidsperiode.tom;if(dayjs__WEBPACK_IMPORTED_MODULE_3___default()(nyPeriodeFomDate).isBefore(familiehendelsesdato,"day")&&dayjs__WEBPACK_IMPORTED_MODULE_3___default()(nyPeriodeTomDate).isSameOrAfter(familiehendelsesdato,"day"))return _toConsumableArray(perioder);var berørtPeriode=perioder.find((function(p){return(0,app_steps_uttaksplan_info_utils_Tidsperioden__WEBPACK_IMPORTED_MODULE_1__.Xj)(p.tidsperiode).inneholderDato(nyPeriodeFomDate)}));if(berørtPeriode){if((0,uttaksplan_types_Periode__WEBPACK_IMPORTED_MODULE_5__.eS)(berørtPeriode)||(0,uttaksplan_types_Periode__WEBPACK_IMPORTED_MODULE_5__.Rj)(berørtPeriode))return _toConsumableArray(perioder);var foregåendePerioder=(0,app_steps_uttaksplan_info_utils_Periodene__WEBPACK_IMPORTED_MODULE_0__.XQ)(perioder).finnAlleForegåendePerioder(berørtPeriode),påfølgendePerioder=(0,app_steps_uttaksplan_info_utils_Periodene__WEBPACK_IMPORTED_MODULE_0__.XQ)(perioder).finnAllePåfølgendePerioder(berørtPeriode),antallDagerINyPeriode=(0,app_steps_uttaksplan_info_utils_Tidsperioden__WEBPACK_IMPORTED_MODULE_1__.Xj)(nyPeriode.tidsperiode).getAntallUttaksdager();if(dayjs__WEBPACK_IMPORTED_MODULE_3___default()(berørtPeriode.tidsperiode.fom).isSame(nyPeriodeFomDate))return[].concat(_toConsumableArray(foregåendePerioder),[nyPeriode],_toConsumableArray((0,app_steps_uttaksplan_info_utils_Periodene__WEBPACK_IMPORTED_MODULE_0__.XQ)([berørtPeriode].concat(_toConsumableArray(påfølgendePerioder))).forskyvPerioder(antallDagerINyPeriode)));var berørtPeriodeSplittetPåNyPeriode=function splittPeriodePåPeriode(berørtPeriode,nyPeriode){var dagerIBerørtPeriode=(0,app_steps_uttaksplan_info_utils_Tidsperioden__WEBPACK_IMPORTED_MODULE_1__.Xj)(berørtPeriode.tidsperiode).getAntallUttaksdager(),førsteDel=_objectSpread(_objectSpread({},berørtPeriode),{},{tidsperiode:{fom:berørtPeriode.tidsperiode.fom,tom:(0,app_steps_uttaksplan_info_utils_Uttaksdagen__WEBPACK_IMPORTED_MODULE_2__._)(nyPeriode.tidsperiode.fom).forrige()}}),dagerIAndreDel=dagerIBerørtPeriode-(0,app_steps_uttaksplan_info_utils_Tidsperioden__WEBPACK_IMPORTED_MODULE_1__.Xj)(førsteDel.tidsperiode).getAntallUttaksdager(),startDatoAndreDel=(0,app_steps_uttaksplan_info_utils_Uttaksdagen__WEBPACK_IMPORTED_MODULE_2__._)(nyPeriode.tidsperiode.tom).neste();return(0,uttaksplan_types_Periode__WEBPACK_IMPORTED_MODULE_5__.Pq)(berørtPeriode)?[førsteDel,nyPeriode,_objectSpread(_objectSpread({},berørtPeriode),{},{id:(0,nav_frontend_js_utils__WEBPACK_IMPORTED_MODULE_4__.guid)(),tidsperiode:{fom:nyPeriode.tidsperiode.fom,tom:berørtPeriode.tidsperiode.tom}})]:[førsteDel,nyPeriode,_objectSpread(_objectSpread({},berørtPeriode),{},{id:(0,nav_frontend_js_utils__WEBPACK_IMPORTED_MODULE_4__.guid)(),tidsperiode:{fom:startDatoAndreDel,tom:(0,app_steps_uttaksplan_info_utils_Uttaksdagen__WEBPACK_IMPORTED_MODULE_2__._)(startDatoAndreDel).leggTil(dagerIAndreDel-1)}})]}(berørtPeriode,nyPeriode);return(0,uttaksplan_types_Periode__WEBPACK_IMPORTED_MODULE_5__.Pq)(berørtPeriode)?[].concat(_toConsumableArray(foregåendePerioder),[berørtPeriodeSplittetPåNyPeriode[0],berørtPeriodeSplittetPåNyPeriode[1]],_toConsumableArray((0,app_steps_uttaksplan_info_utils_Periodene__WEBPACK_IMPORTED_MODULE_0__.XQ)([berørtPeriodeSplittetPåNyPeriode[2]].concat(_toConsumableArray(påfølgendePerioder))).forskyvPerioder(antallDagerINyPeriode))):[].concat(_toConsumableArray(foregåendePerioder),_toConsumableArray(berørtPeriodeSplittetPåNyPeriode),_toConsumableArray((0,app_steps_uttaksplan_info_utils_Periodene__WEBPACK_IMPORTED_MODULE_0__.XQ)(påfølgendePerioder).forskyvPerioder(antallDagerINyPeriode)))}var førstePeriode=perioder[0],sistePeriode=perioder[perioder.length-1],nyPeriodeFom=dayjs__WEBPACK_IMPORTED_MODULE_3___default()(nyPeriode.tidsperiode.fom),nyPeriodeTom=dayjs__WEBPACK_IMPORTED_MODULE_3___default()(nyPeriode.tidsperiode.tom);if(nyPeriodeFom.isBefore(førstePeriode.tidsperiode.fom,"day")){var tidsperiodeMellomNyPeriodeOgFørstePeriode=(0,_uttaksplanbuilderUtils__WEBPACK_IMPORTED_MODULE_7__.U1)(nyPeriode.tidsperiode,førstePeriode.tidsperiode);if(nyPeriodeTom.isSameOrAfter(førstePeriode.tidsperiode.fom,"day")){if(nyPeriodeFom.isBefore(familiehendelsesdato,"day"))return _toConsumableArray(perioder);var antallOverlappendeUttaksdager=function getAntallOverlappendeUttaksdager(periode,nyPeriode){if((0,app_steps_uttaksplan_info_utils_Periodene__WEBPACK_IMPORTED_MODULE_0__.XQ)([periode]).finnOverlappendePerioder(nyPeriode).length>0){var dateArray=[dayjs__WEBPACK_IMPORTED_MODULE_3___default()(periode.tidsperiode.fom),dayjs__WEBPACK_IMPORTED_MODULE_3___default()(periode.tidsperiode.tom),dayjs__WEBPACK_IMPORTED_MODULE_3___default()(nyPeriode.tidsperiode.fom),dayjs__WEBPACK_IMPORTED_MODULE_3___default()(nyPeriode.tidsperiode.tom)],minDate=dayjs__WEBPACK_IMPORTED_MODULE_3___default().min(dateArray),maxDate=dayjs__WEBPACK_IMPORTED_MODULE_3___default().max(dateArray),overlappendeTidsperiode=dateArray.filter((function(date){return date!==minDate&&date!==maxDate}));return(0,app_steps_uttaksplan_info_utils_Tidsperioden__WEBPACK_IMPORTED_MODULE_1__.Xj)({fom:dayjs__WEBPACK_IMPORTED_MODULE_3___default().min(overlappendeTidsperiode).toDate(),tom:dayjs__WEBPACK_IMPORTED_MODULE_3___default().max(overlappendeTidsperiode).toDate()}).getAntallUttaksdager()}return 0}(førstePeriode,nyPeriode);return[nyPeriode].concat(_toConsumableArray((0,app_steps_uttaksplan_info_utils_Periodene__WEBPACK_IMPORTED_MODULE_0__.XQ)(perioder).forskyvPerioder(antallOverlappendeUttaksdager)))}return tidsperiodeMellomNyPeriodeOgFørstePeriode?[nyPeriode].concat(_toConsumableArray((0,_uttaksplanbuilderUtils__WEBPACK_IMPORTED_MODULE_7__.qK)(tidsperiodeMellomNyPeriodeOgFørstePeriode,harAktivitetskravIPeriodeUtenUttak,familiehendelsesdato,erAdopsjon,bareFarHarRett,erFarEllerMedmor,førsteUttaksdagNesteBarnsSak)),_toConsumableArray(perioder)):[nyPeriode].concat(_toConsumableArray(perioder))}var tidsperiodeMellomSistePeriodeOgNyPeriode=(0,_uttaksplanbuilderUtils__WEBPACK_IMPORTED_MODULE_7__.U1)(sistePeriode.tidsperiode,nyPeriode.tidsperiode);return tidsperiodeMellomSistePeriodeOgNyPeriode?[].concat(_toConsumableArray(perioder),_toConsumableArray((0,_uttaksplanbuilderUtils__WEBPACK_IMPORTED_MODULE_7__.qK)(tidsperiodeMellomSistePeriodeOgNyPeriode,harAktivitetskravIPeriodeUtenUttak,familiehendelsesdato,erAdopsjon,bareFarHarRett,erFarEllerMedmor,førsteUttaksdagNesteBarnsSak)),[nyPeriode]):[].concat(_toConsumableArray(perioder),[nyPeriode]).sort(app_steps_uttaksplan_info_utils_Periodene__WEBPACK_IMPORTED_MODULE_0__.$6)}},"./src/uttaksplan/builder/uttaksplanbuilderUtils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Wb:()=>finnOgSettInnHull,ER:()=>fjernUnødvendigeHull,qK:()=>getPeriodeHullEllerPeriodeUtenUttak,U1:()=>getTidsperiodeMellomPerioder,Cb:()=>normaliserPerioder,jr:()=>settInnAnnenPartsUttak,dh:()=>slåSammenLikePerioder});var PeriodeHullÅrsak,Perioden=__webpack_require__("./src/app/steps/uttaksplan-info/utils/Perioden.ts"),Periodene=__webpack_require__("./src/app/steps/uttaksplan-info/utils/Periodene.ts"),Tidsperioden=__webpack_require__("./src/app/steps/uttaksplan-info/utils/Tidsperioden.ts"),Uttaksdagen=__webpack_require__("./src/app/steps/uttaksplan-info/utils/Uttaksdagen.ts"),dateUtils=__webpack_require__("./src/app/utils/dateUtils.ts"),dayjs_min=__webpack_require__("../../node_modules/.pnpm/dayjs@1.11.7/node_modules/dayjs/dayjs.min.js"),dayjs_min_default=__webpack_require__.n(dayjs_min),lib=__webpack_require__("../../node_modules/.pnpm/nav-frontend-js-utils@1.0.20_bnaq24lftdxaez3xjcv5glopji/node_modules/nav-frontend-js-utils/lib/index.js"),Periode=__webpack_require__("./src/uttaksplan/types/Periode.ts");!function(PeriodeHullÅrsak){PeriodeHullÅrsak.fridag="fridag",PeriodeHullÅrsak["avslåttPeriode"]="avslåttPeriode"}(PeriodeHullÅrsak||(PeriodeHullÅrsak={}));var leggTilPeriode=__webpack_require__("./src/uttaksplan/builder/leggTilPeriode.ts");function _typeof(obj){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_typeof(obj)}function _toConsumableArray(arr){return function _arrayWithoutHoles(arr){if(Array.isArray(arr))return _arrayLikeToArray(arr)}(arr)||function _iterableToArray(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}(arr)||function _unsupportedIterableToArray(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(arr)||function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return(key=function _toPropertyKey(arg){var key=function _toPrimitive(input,hint){if("object"!==_typeof(input)||null===input)return input;var prim=input[Symbol.toPrimitive];if(void 0!==prim){var res=prim.call(input,hint||"default");if("object"!==_typeof(res))return res;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===hint?String:Number)(input)}(arg,"string");return"symbol"===_typeof(key)?key:String(key)}(key))in obj?Object.defineProperty(obj,key,{value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}var slåSammenLikePerioder=function slåSammenLikePerioder(perioder,familiehendelsesdato,førsteUttaksdagNesteBarnsSak,annenPartsUttak){if(perioder.length<=1)return perioder;var nyePerioder=[],forrigePeriode=_objectSpread({},perioder[0]);return perioder.forEach((function(periode,index){if(0!==index)if(void 0!==forrigePeriode)if((0,Perioden.p)(forrigePeriode).erLik(periode,!1,!0)&&(0,Perioden.p)(forrigePeriode).erSammenhengende(periode)){if(annenPartsUttak&&(0,Periode.R1)(periode)&&periode.ønskerSamtidigUttak&&(0,Periode.R1)(forrigePeriode)&&forrigePeriode.ønskerSamtidigUttak){var overlappendePerioderAnnenPartForrigePeriode=(0,Periodene.XQ)(annenPartsUttak).finnOverlappendePerioder(forrigePeriode),overlappendePerioderAnnenPart=(0,Periodene.XQ)(annenPartsUttak).finnOverlappendePerioder(periode);if(0===overlappendePerioderAnnenPart.length&&overlappendePerioderAnnenPartForrigePeriode.length>0||overlappendePerioderAnnenPart.length>0&&0===overlappendePerioderAnnenPartForrigePeriode.length)return nyePerioder.push(forrigePeriode),void(forrigePeriode=periode)}if(dayjs_min_default()(forrigePeriode.tidsperiode.tom).isBefore(familiehendelsesdato,"day")&&dayjs_min_default()(periode.tidsperiode.tom).isSameOrAfter((0,Uttaksdagen._)(familiehendelsesdato).denneEllerNeste())||void 0!==førsteUttaksdagNesteBarnsSak&&dayjs_min_default()(forrigePeriode.tidsperiode.tom).isBefore(førsteUttaksdagNesteBarnsSak,"day")&&dayjs_min_default()(periode.tidsperiode.fom).isSameOrAfter((0,Uttaksdagen._)(førsteUttaksdagNesteBarnsSak).denneEllerNeste(),"day"))return nyePerioder.push(forrigePeriode),void(forrigePeriode=periode);var nyTidsperiode={fom:forrigePeriode.tidsperiode.fom,tom:periode.tidsperiode.tom};forrigePeriode.tidsperiode=_objectSpread({},nyTidsperiode)}else nyePerioder.push(forrigePeriode),forrigePeriode=periode;else forrigePeriode=periode})),nyePerioder.push(forrigePeriode),nyePerioder},getSplittetPeriodeOmNødvendig=function getSplittetPeriodeOmNødvendig(nyHullPeriode,førsteUttaksdagNesteBarnsSak){return void 0!==førsteUttaksdagNesteBarnsSak&&(0,dateUtils.KD)(nyHullPeriode.tidsperiode,førsteUttaksdagNesteBarnsSak)?(0,leggTilPeriode.lI)(nyHullPeriode,førsteUttaksdagNesteBarnsSak):[nyHullPeriode]},getPeriodeHullEllerPeriodeUtenUttak=function getPeriodeHullEllerPeriodeUtenUttak(tidsperiode,harAktivitetskravIPeriodeUtenUttak,familiehendelsesdato,erAdopsjon,bareFarHarRett,erFarEllerMedmor,førsteUttaksdagNesteBarnsSak){var årsak=arguments.length>7&&void 0!==arguments[7]?arguments[7]:PeriodeHullÅrsak.fridag;if((0,dateUtils.GL)(familiehendelsesdato)){var førsteUttaksdagFamiliehendelsesdato=(0,Uttaksdagen._)(familiehendelsesdato).denneEllerNeste(),førsteUttaksdagEtterSeksUker=(0,Uttaksdagen._)(førsteUttaksdagFamiliehendelsesdato).leggTil(30),tidsperiodeErInnenFørsteSeksUker=(0,Tidsperioden.Xj)(tidsperiode).erInnenforFørsteSeksUker(familiehendelsesdato),farMedmorBeholderDagerIkkeTattUtDeFørsteSeksUkene=dayjs_min_default()(tidsperiode.fom).isBefore(førsteUttaksdagEtterSeksUker,"day")&&!erAdopsjon&&(bareFarHarRett&&(0,dateUtils.GL)(familiehendelsesdato)||erFarEllerMedmor&&(0,dateUtils.a$)(familiehendelsesdato));if(harAktivitetskravIPeriodeUtenUttak&&!farMedmorBeholderDagerIkkeTattUtDeFørsteSeksUkene)return getSplittetPeriodeOmNødvendig(getPeriodeHull(tidsperiode,årsak),førsteUttaksdagNesteBarnsSak);if(dayjs_min_default()(tidsperiode.fom).isBefore(familiehendelsesdato,"day"))return getSplittetPeriodeOmNødvendig(getNyPeriodeUtenUttak(tidsperiode),førsteUttaksdagNesteBarnsSak);if(tidsperiodeErInnenFørsteSeksUker&&!erAdopsjon){if(dayjs_min_default()(tidsperiode.tom).isBefore(førsteUttaksdagEtterSeksUker,"day"))return bareFarHarRett&&(0,dateUtils.GL)(familiehendelsesdato)||erFarEllerMedmor&&(0,dateUtils.a$)(familiehendelsesdato)?[getNyPeriodeUtenUttak(tidsperiode)]:[getPeriodeHull(tidsperiode,årsak)];var antallDagerFraFomTilFørsteUttaksdagSeksUker=(0,Tidsperioden.Xj)({fom:tidsperiode.fom,tom:førsteUttaksdagEtterSeksUker}).getAntallUttaksdager()-2,nyPeriodeUtenUttakTidsperiodeLengde=(0,Tidsperioden.Xj)(tidsperiode).getAntallUttaksdager()-antallDagerFraFomTilFørsteUttaksdagSeksUker,førsteSeksUkerTidsperiode={fom:tidsperiode.fom,tom:(0,Uttaksdagen._)(førsteUttaksdagEtterSeksUker).leggTil(-1)},etterFørsteSeksUkerTidsperiode={fom:førsteUttaksdagEtterSeksUker,tom:(0,Uttaksdagen._)(førsteUttaksdagEtterSeksUker).leggTil(nyPeriodeUtenUttakTidsperiodeLengde-2)};return bareFarHarRett&&(0,dateUtils.GL)(familiehendelsesdato)||erFarEllerMedmor&&(0,dateUtils.a$)(familiehendelsesdato)?erFarEllerMedmor&&!bareFarHarRett?[getNyPeriodeUtenUttak(tidsperiode)]:[getNyPeriodeUtenUttak(førsteSeksUkerTidsperiode),getPeriodeHull(etterFørsteSeksUkerTidsperiode,årsak)]:[getPeriodeHull(førsteSeksUkerTidsperiode,årsak),getNyPeriodeUtenUttak(etterFørsteSeksUkerTidsperiode)]}return getSplittetPeriodeOmNødvendig(getNyPeriodeUtenUttak(tidsperiode),førsteUttaksdagNesteBarnsSak)}return getSplittetPeriodeOmNødvendig(getPeriodeHull(tidsperiode,årsak),førsteUttaksdagNesteBarnsSak)},getPeriodeHull=function getPeriodeHull(tidsperiode,årsak){return{id:(0,lib.guid)(),type:Periode.Zf.Hull,tidsperiode,årsak}},getNyPeriodeUtenUttak=function getNyPeriodeUtenUttak(tidsperiode){return{id:(0,lib.guid)(),type:Periode.Zf.PeriodeUtenUttak,tidsperiode}},getTidsperiodeMellomPerioder=function getTidsperiodeMellomPerioder(tidsperiode1,tidsperiode2){var tidsperiodeMellomPerioder={fom:(0,Uttaksdagen._)(tidsperiode1.tom).neste(),tom:(0,Uttaksdagen._)(tidsperiode2.fom).forrige()},antallDagerIMellomrom=(0,Tidsperioden.Xj)(tidsperiodeMellomPerioder).getAntallUttaksdager();if((0,Tidsperioden.pc)(tidsperiodeMellomPerioder)&&antallDagerIMellomrom>0)return tidsperiodeMellomPerioder},fjernUnødvendigeHull=function fjernUnødvendigeHull(perioder){return perioder.reduce((function(res,periode,index){return 0===index&&(0,Periode.Kc)(periode)?res:index===perioder.length-1?((0,Periode.uu)(periode)||(0,Periode.Kc)(periode)||res.push(periode),res):(res.push(periode),res)}),[])},finnOgSettInnHull=function finnOgSettInnHull(perioder,harAktivitetskravIPeriodeUtenUttak,familiehendelsesdato,erAdopsjon,bareFarHarRett,erFarEllerMedmor,førsteUttaksdagNesteBarnsSak){return 0===perioder.length?perioder:perioder.reduce((function(res,periode,index){if(0===index&&erFarEllerMedmor){var førsteUttaksdagFamiliehendelsesdato=(0,Uttaksdagen._)(familiehendelsesdato).denneEllerNeste();if(dayjs_min_default()(førsteUttaksdagFamiliehendelsesdato).isBefore(periode.tidsperiode.fom)){var tidsperiodeMellom6ukerEtterFødselOgPerioden={fom:førsteUttaksdagFamiliehendelsesdato,tom:(0,Uttaksdagen._)(periode.tidsperiode.fom).forrige()};(0,Tidsperioden.Xj)(tidsperiodeMellom6ukerEtterFødselOgPerioden).getAntallUttaksdager()>0&&res.push.apply(res,_toConsumableArray(getPeriodeHullEllerPeriodeUtenUttak(tidsperiodeMellom6ukerEtterFødselOgPerioden,harAktivitetskravIPeriodeUtenUttak,familiehendelsesdato,erAdopsjon,bareFarHarRett,erFarEllerMedmor,førsteUttaksdagNesteBarnsSak)))}}if(res.push(periode),index===perioder.length-1)return res;var nestePeriode=perioder[index+1],tidsperiodeMellomPerioder={fom:(0,Uttaksdagen._)(periode.tidsperiode.tom).neste(),tom:(0,Uttaksdagen._)(nestePeriode.tidsperiode.fom).forrige()};return dayjs_min_default()(tidsperiodeMellomPerioder.tom).isBefore(tidsperiodeMellomPerioder.fom,"day")||!erFarEllerMedmor&&dayjs_min_default()(tidsperiodeMellomPerioder.tom).isBefore(familiehendelsesdato,"day")||(0,Tidsperioden.Xj)(tidsperiodeMellomPerioder).getAntallUttaksdager()>0&&res.push.apply(res,_toConsumableArray(getPeriodeHullEllerPeriodeUtenUttak(tidsperiodeMellomPerioder,harAktivitetskravIPeriodeUtenUttak,familiehendelsesdato,erAdopsjon,bareFarHarRett,erFarEllerMedmor,førsteUttaksdagNesteBarnsSak))),res}),[])},splittPeriodePåDatoer=function splittPeriodePåDatoer(periode,alleDatoer){var datoerIPerioden=alleDatoer.filter((function(datoWrapper){return(0,Tidsperioden.Xj)(periode.tidsperiode).inneholderDato(datoWrapper.dato)})),oppsplittetPeriode=[];return 2===datoerIPerioden.length?[periode]:(datoerIPerioden.forEach((function(datoWrapper,index){0!==index?(oppsplittetPeriode[index-1].tidsperiode.tom=datoWrapper.erFom?(0,Uttaksdagen._)(datoWrapper.dato).forrige():datoWrapper.dato,index<datoerIPerioden.length-1&&oppsplittetPeriode.push(_objectSpread(_objectSpread({},periode),{},{id:(0,lib.guid)(),tidsperiode:{fom:datoWrapper.erFom?datoWrapper.dato:(0,Uttaksdagen._)(datoWrapper.dato).neste(),tom:void 0}}))):oppsplittetPeriode.push(_objectSpread(_objectSpread({},periode),{},{tidsperiode:{fom:datoWrapper.dato,tom:void 0}}))})),oppsplittetPeriode.filter((function(p){return(0,Tidsperioden.pc)(p.tidsperiode)})))},normaliserPerioder=function normaliserPerioder(perioder,annenPartsUttak){var perioderTidsperioder=perioder.filter((function(per){return(0,Tidsperioden.pc)(per.tidsperiode)})).reduce((function(res,p){return res.push({dato:p.tidsperiode.fom,erFom:!0}),res.push({dato:p.tidsperiode.tom,erFom:!1}),res}),[]),annenPartsUttakTidsperioder=annenPartsUttak.reduce((function(res,p){return res.push({dato:p.tidsperiode.fom,erFom:!0}),res.push({dato:p.tidsperiode.tom,erFom:!1}),res}),[]),alleDatoer=perioderTidsperioder.concat(annenPartsUttakTidsperioder).sort((function(d1,d2){if(d1.dato.getTime()-d2.dato.getTime()==0){if(!d1.erFom)return 1;if(!d2.erFom)return-1}return d1.dato.getTime()-d2.dato.getTime()})),normaliserteEgnePerioder=[],normaliserteAnnenPartsPerioder=[];return perioder.forEach((function(p){var oppsplittetPeriode=splittPeriodePåDatoer(p,alleDatoer);normaliserteEgnePerioder.push.apply(normaliserteEgnePerioder,_toConsumableArray(oppsplittetPeriode))})),annenPartsUttak.forEach((function(p){var oppsplittetPeriode=splittPeriodePåDatoer(p,alleDatoer);normaliserteAnnenPartsPerioder.push.apply(normaliserteAnnenPartsPerioder,_toConsumableArray(oppsplittetPeriode))})),{normaliserteEgnePerioder,normaliserteAnnenPartsPerioder}},settInnAnnenPartsUttak=function settInnAnnenPartsUttak(perioder,annenPartsUttak,familiehendelsesdato,førsteUttaksdagNesteBarnsSak){var initiellMappingFraSaksperioder=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(0===annenPartsUttak.length)return perioder;if(0===perioder.length)return annenPartsUttak;var _normaliserPerioder=normaliserPerioder(perioder,annenPartsUttak),normaliserteEgnePerioder=_normaliserPerioder.normaliserteEgnePerioder,normaliserteAnnenPartsPerioder=_normaliserPerioder.normaliserteAnnenPartsPerioder,result=normaliserteEgnePerioder.reduce((function(res,p){var overlappendePerioderAnnenPart=(0,Periodene.XQ)(normaliserteAnnenPartsPerioder).finnOverlappendePerioder(p);if(0===overlappendePerioderAnnenPart.length)return(0,Periode.R1)(p)&&p.ønskerSamtidigUttak&&initiellMappingFraSaksperioder?(res.push(_objectSpread(_objectSpread({},p),{},{ønskerSamtidigUttak:!1})),res):(res.push(p),res);if((0,Periode.Kc)(p)||(0,Periode.sk)(p)||(0,Periode.uu)(p)){var overlappendePeriode=overlappendePerioderAnnenPart[0];return res.push(_objectSpread(_objectSpread({},overlappendePeriode),{},{visPeriodeIPlan:!0})),res}if((0,Periode.R1)(p)&&p.ønskerSamtidigUttak){var _overlappendePeriode=overlappendePerioderAnnenPart[0];return res.push(p),(0,Periode.$A)(_overlappendePeriode)||res.push(_objectSpread(_objectSpread({},_overlappendePeriode),{},{visPeriodeIPlan:!1,ønskerSamtidigUttak:!0})),res}return res.push(p),res}),[]);result.sort(Periodene.$6);var førstePeriodeStartdato=perioder[0].tidsperiode.fom,annenPartsUttakSomSlutterFørFørstePeriode=normaliserteAnnenPartsPerioder.filter((function(ap){return dayjs_min_default()(ap.tidsperiode.tom).isBefore(førstePeriodeStartdato,"day")})),sistePeriodeSluttdato=perioder[perioder.length-1].tidsperiode.tom,annenPartsUttakSomStarterEtterSistePeriode=normaliserteAnnenPartsPerioder.filter((function(ap){return dayjs_min_default()(ap.tidsperiode.fom).isAfter(sistePeriodeSluttdato,"day")}));return slåSammenLikePerioder([].concat(_toConsumableArray(annenPartsUttakSomSlutterFørFørstePeriode),_toConsumableArray(result),_toConsumableArray(annenPartsUttakSomStarterEtterSistePeriode)),familiehendelsesdato,førsteUttaksdagNesteBarnsSak,annenPartsUttak)}}}]);
//# sourceMappingURL=840.12303dda.iframe.bundle.js.map