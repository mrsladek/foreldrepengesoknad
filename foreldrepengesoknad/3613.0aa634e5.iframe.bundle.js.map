{"version":3,"file":"3613.0aa634e5.iframe.bundle.js","mappings":"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","sources":["webpack://foreldrepengesoknad/../../node_modules/.pnpm/nav-frontend-spinner@3.0.1_ibowqsfoimb5u5tvfpmzvtngum/node_modules/nav-frontend-spinner/lib/spinner.js","webpack://foreldrepengesoknad/../../node_modules/.pnpm/dom-helpers@5.2.1/node_modules/dom-helpers/esm/removeClass.js","webpack://foreldrepengesoknad/../../node_modules/.pnpm/react-transition-group@4.4.5_biqbaboplfbrettd7655fr4n2y/node_modules/react-transition-group/esm/config.js","webpack://foreldrepengesoknad/../../node_modules/.pnpm/react-transition-group@4.4.5_biqbaboplfbrettd7655fr4n2y/node_modules/react-transition-group/esm/utils/reflow.js","webpack://foreldrepengesoknad/../../node_modules/.pnpm/react-transition-group@4.4.5_biqbaboplfbrettd7655fr4n2y/node_modules/react-transition-group/esm/Transition.js","webpack://foreldrepengesoknad/../../node_modules/.pnpm/react-transition-group@4.4.5_biqbaboplfbrettd7655fr4n2y/node_modules/react-transition-group/esm/CSSTransition.js","webpack://foreldrepengesoknad/../../node_modules/.pnpm/dom-helpers@5.2.1/node_modules/dom-helpers/esm/addClass.js","webpack://foreldrepengesoknad/../../node_modules/.pnpm/dom-helpers@5.2.1/node_modules/dom-helpers/esm/hasClass.js","webpack://foreldrepengesoknad/../../node_modules/.pnpm/react-transition-group@4.4.5_biqbaboplfbrettd7655fr4n2y/node_modules/react-transition-group/esm/utils/ChildMapping.js","webpack://foreldrepengesoknad/../../node_modules/.pnpm/react-transition-group@4.4.5_biqbaboplfbrettd7655fr4n2y/node_modules/react-transition-group/esm/TransitionGroup.js","webpack://foreldrepengesoknad/../../node_modules/.pnpm/@babel+runtime@7.21.0/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://foreldrepengesoknad/../../node_modules/.pnpm/react-transition-group@4.4.5_biqbaboplfbrettd7655fr4n2y/node_modules/react-transition-group/esm/TransitionGroupContext.js","webpack://foreldrepengesoknad/../../node_modules/.pnpm/@babel+runtime@7.21.0/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://foreldrepengesoknad/../../node_modules/.pnpm/@babel+runtime@7.21.0/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://foreldrepengesoknad/../../node_modules/.pnpm/@babel+runtime@7.21.0/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst PT = __importStar(require(\"prop-types\"));\nconst React = __importStar(require(\"react\"));\nconst classnames_1 = __importDefault(require(\"classnames\"));\nconst nav_frontend_ikoner_assets_1 = __importDefault(require(\"nav-frontend-ikoner-assets\"));\nrequire(\"nav-frontend-spinner-style\");\nconst cls = (className, storrelse) => classnames_1.default(\"spinner\", className, {\n    [`spinner--${storrelse.toLowerCase()}`]: !!storrelse,\n});\nclass NavFrontendSpinner extends React.Component {\n    render() {\n        const _a = this.props, { transparent, type, className } = _a, props = __rest(_a, [\"transparent\", \"type\", \"className\"]);\n        const ikon = transparent ? \"spinner-transparent\" : \"spinner-negativ\";\n        return (React.createElement(nav_frontend_ikoner_assets_1.default, Object.assign({ kind: ikon, className: cls(className, type) }, props)));\n    }\n}\nNavFrontendSpinner.propTypes = {\n    transparent: PT.bool,\n    type: PT.oneOf([\"XXS\", \"XS\", \"S\", \"M\", \"L\", \"XL\", \"XXL\", \"XXXL\"]),\n    className: PT.string,\n    \"aria-label\": PT.string,\n};\nNavFrontendSpinner.defaultProps = {\n    \"aria-label\": \"Laster innhold\",\n    transparent: false,\n    type: \"M\",\n    className: undefined,\n};\nexports.default = NavFrontendSpinner;\n","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","export default {\n  disabled: false\n};","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\nimport { forceReflow } from './utils/reflow';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      if (node) forceReflow(node);\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import React from 'react';\nexport default React.createContext(null);","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}"],"names":["__createBinding","this","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","hasOwnProperty","call","__rest","s","e","t","p","prototype","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","__importDefault","exports","PT","React","classnames_1","nav_frontend_ikoner_assets_1","cls","className","storrelse","default","toLowerCase","NavFrontendSpinner","Component","render","_a","props","ikon","transparent","createElement","assign","kind","type","propTypes","bool","oneOf","string","defaultProps","replaceClassName","origClass","classToRemove","replace","RegExp","forceReflow","node","scrollTop","UNMOUNTED","EXITED","ENTERING","ENTERED","Transition","_React$Component","context","_this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","getDerivedStateFromProps","_ref","prevState","_proto","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","timeout","mounting","nodeRef","current","performEnter","performExit","setState","_this2","appearing","_ref2","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","setTimeout","_this$props","children","childProps","TransitionGroupContext","noop","contextType","EXITING","removeClass","classes","split","forEach","c","element","classList","remove","setAttribute","baseVal","CSSTransition","_len","arguments","args","Array","_key","apply","concat","appliedClasses","_this$resolveArgument","resolveArguments","removeClasses","addClass","_this$resolveArgument2","_this$resolveArgument3","getClassNames","classNames","isStringClassNames","baseClassName","activeClassName","doneClassName","phase","add","hasClass","contains","_addClass","_this$appliedClasses$","base","done","getChildMapping","mapFn","Children","child","key","mapper","isValidElement","getProp","prop","getNextChildMapping","nextProps","prevChildMapping","nextChildMapping","mergeChildMappings","prev","next","getValueForKey","nextKeysPending","pendingKeys","prevKey","push","childMapping","nextKey","pendingNextKey","keys","hasPrev","hasNext","prevChild","isLeaving","cloneElement","bind","values","obj","map","TransitionGroup","handleExited","_assertThisInitialized","self","ReferenceError","contextValue","firstRender","mounted","currentChildMapping","component","childFactory","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys"],"sourceRoot":""}