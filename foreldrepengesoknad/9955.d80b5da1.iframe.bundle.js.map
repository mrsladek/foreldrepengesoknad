{"version":3,"file":"9955.d80b5da1.iframe.bundle.js","mappings":"wRAAA,kCACIA,SAAU,8EACVC,YAAa,6BACbC,gBAAiB,8EACjBC,YAAa,gFACbC,eAAgB,oFAChBC,mBAAoB,gFACpBC,aACI,0GACJC,OAAQ,gCACRC,mBAAoB,gFACpBC,kBACI,yLACJC,wBACI,8FACJC,aAAc,yCACdC,QAAS,0BACTC,cAAe,4EACfC,uBAAwB,+CACxBC,4BACI,oHACJC,aAAc,kG,26BCIlB,mBAb4D,SAAtDC,oBAAmDC,MAAiC,IAA3BC,qBAAoBD,KAApBC,qBACrDC,MAAOC,EAAAA,QAAAA,KACPC,YAAcH,qBAAuB,UAAY,QACjDI,YAAcJ,qBACd,uCACA,uCACN,OACIK,MAAAA,cAACC,qCAAW,CAACC,UAAU,aAAaC,KAAML,cACrCM,EAAAA,IAAAA,WAAUR,KAAMG,aAG7B,E,ICVYM,mBAOAC,sB,0VAFX,SALWD,oBAAAA,mBAAkB,eAAlBA,mBAAkB,iBAAlBA,mBAAkB,oBAAlBA,mBAAkB,yBAK7B,CALWA,qBAAAA,mBAAkB,KAS7B,SAFWC,uBAAAA,sBAAqB,sDAEhC,CAFWA,wBAAAA,sBAAqB,KA6BjC,IAAMC,oBAAsB,SAAtBA,oBAAuBX,MACzB,MAAO,CACHY,MACIR,MAAAA,cAAAA,MAAAA,SAAA,KACIA,MAAAA,cAAA,SAAG,KAAEI,EAAAA,IAAAA,WAAUR,KAAM,+BAG7Ba,MAAOH,sBAAsBI,yBAC7BR,UAAW,mBAEnB,EAEMS,aAAe,SAAfA,aAAgBhB,sBAClB,OAAOK,MAAAA,cAACP,aAAmB,CAACE,sBAChC,EAUMiB,qBAAuB,SAAvBA,qBAAwBC,KAAsBjB,MAChD,IAAMkB,OAToB,SAAxBC,sBAAyBC,WAAoBC,WAAkBrB,MACjE,IAAMsB,WAAYC,EAAAA,UAAAA,IAAsBH,WAAYpB,MACpD,OAAOQ,EAAAA,IAAAA,WAAUR,KAAM,iCAAkC,CACrDwB,gBAAiBF,UACjBG,QAAQC,EAAAA,IAAAA,YAAWL,aAE3B,CAGmBF,CAAsBF,KAAKG,WAAYH,KAAKI,WAAarB,MAClE2B,gBAA0BC,IAAbX,KAAKY,IAAoBd,kBAAyCa,IAA5BX,KAAKY,IAAIC,qBAAgCF,EAC5FG,qBACWH,IAAbX,KAAKY,KACCrB,EAAAA,IAAAA,WAAUR,KAAM,kCAAmC,CAAEgC,WAAYf,KAAKY,IAAIG,aAC1E,GACJC,YAAsBL,IAAbX,KAAKY,IAEpB,MAAO,CACHjB,MACIR,MAAAA,cAAAA,MAAAA,SAAA,KACIA,MAAAA,cAAA,SAAG,IAAEc,QACJe,QACG7B,MAAAA,cAAA,WACIA,MAAAA,cAAA,SAAI2B,iBACHJ,aAKjBd,MAAOI,KAAKiB,GACZ5B,UAAW,mBAEnB,EA6CM6B,mBAAqB,SAArBA,mBAAsBlB,KAAsBjB,MAE9C,OADiBiB,KAAKV,MAElB,KAAKE,mBAAmB2B,KACxB,KAAK3B,mBAAmB4B,SACxB,KAAK5B,mBAAmB6B,YACpB,OAjD6B,SAAnCC,iCAAoCtB,KAAsBjB,MAC5D,IAAMwC,sCAAuCC,EAAAA,UAAAA,IACzCxB,KAAKyB,QACLzB,KAAK0B,cACL1B,KAAK2B,mBACL3B,KAAK4B,eACL5B,KAAKG,WACLpB,MAEE8C,oBAAqBC,EAAAA,UAAAA,IAA4B9B,KAAK0B,eACtDK,sBACF/B,KAAKV,OAASE,mBAAmB2B,MAAQnB,KAAKV,OAASE,mBAAmB6B,YACpEQ,oBACApB,EAAAA,IAAAA,YAAWT,KAAK2B,oBACpBK,eACFhC,KAAKV,OAASE,mBAAmB2B,MAAQnB,KAAKV,OAASE,mBAAmB6B,aACpE9B,EAAAA,IAAAA,WAAUR,KAAM,8BAChBQ,EAAAA,IAAAA,WAAUR,KAAM,iCAEpB+B,qBACWH,IAAbX,KAAKY,KACCrB,EAAAA,IAAAA,WAAUR,KAAM,kCAAmC,CAAEgC,WAAYf,KAAKY,IAAIG,aAC1E,GACJL,gBAA0BC,IAAbX,KAAKY,IAAoBd,kBAAyCa,IAA5BX,KAAKY,IAAIC,qBAAgCF,EAClG,MAAO,CACHhB,MACIR,MAAAA,cAAAA,MAAAA,SAAA,KACIA,MAAAA,cAAA,SAAIoC,sCACHvB,KAAK4B,gBACFzC,MAAAA,cAAA,SACK6C,eAAe,IAAED,uBAG1B5C,MAAAA,cAAA,SAAI2B,sBACYH,IAAfD,YAA4BA,YAGrCd,MAAOI,KAAKiB,GACZgB,KAAMC,oBAAAA,GAAAA,WACN7C,UAAW,mBAEnB,CAQmBiC,CAAiCtB,KAAMjB,MAClD,KAAKS,mBAAmB2C,MACpB,OAAOpC,qBAAqBC,KAAMjB,MACtC,QACI,OAEZ,EAuBA,4BArB6C,SAAvCqD,WAAwCC,OAC1C,IAAMtD,MAAOC,EAAAA,QAAAA,KAEb,OACIG,MAAAA,cAACmD,IAAAA,MAAK,CAACC,QAASF,MAAMG,WAAWC,UAAUP,oBAAAA,GAAAA,aACvC/C,MAAAA,cAACmD,IAAAA,MAAK,CAACI,UAAU,KACbvD,MAAAA,cAACwD,2BAAAA,YAAW,MAAEpD,EAAAA,IAAAA,WAAUR,KAAM,8CAElCI,MAAAA,cAACmD,IAAAA,MAAK,CAACI,UAAU,KACbvD,MAAAA,cAACyD,oBAAAA,GAAAA,WAAkC,CAC/BX,KAAMC,oBAAAA,GAAAA,WACNW,UAAUC,EAAAA,oBAAAA,GAAuB/D,MACjCgE,OAAQV,MAAMW,eACTC,KAAI,SAACC,QAAM,OAAKhC,mBAAmBgC,OAAQnE,KAAK,IAChDoE,OAAO,CAACzD,oBAAoBX,WAKrD,C,4WC3KaqE,wCAA0C,SAA1CA,wCAA2CrE,MAAe,OAAK,SAACa,OACzE,IAAc,IAAVA,MACA,OAAOL,EAAAA,+CAAAA,WAAUR,KAAM,oEAI/B,CAAC,EAEY+D,uBAAyB,SAAzBA,uBAA0B/D,MAAe,OAAK,SAACa,OACxD,QAAce,IAAVf,MACA,OAAOL,EAAAA,+CAAAA,WAAUR,KAAM,iCAI/B,CAAC,C,uTCdWmD,mB,qxCAGX,SAHWA,oBAAAA,mBAAkB,qEAAlBA,mBAAkB,wBAG7B,CAHWA,qBAAAA,mBAAkB,KAUvB,IAAMmB,0BAA4B,SAA5BA,0BAA6BC,iCAAwC,IAAAzE,KAAA,OAAA0E,gBAAA1E,KAAA,GAC7EqD,mBAAmBoB,gCAAkCA,iCAA+BC,gBAAA1E,KACpFqD,mBAAmBsB,gBAAa7C,GAAS9B,IAAA,EAOjC4E,qBAAkFF,gBAAAG,qBAAG,CAAC,EAC9FxB,mBAAmBsB,WAAa,CAC7BG,WAAY,SAAAA,WAAAC,OAAiB,OAAAA,MAAdZ,eAAoCa,OAAS,CAAC,EAC7DC,WAAY,SAAAA,WAAAC,OAAa,YAAsBpD,IAAtBoD,MAAVP,UAAyC,EACxDQ,iBAAkB,SAAAA,iBAAAC,OAAiB,OAAAA,MAAdjB,eAAoCa,OAAS,CAAC,IACtEN,gBAAAG,qBACAxB,mBAAmBoB,gCAAkC,CAClDQ,WAAY,SAAAA,WAAAI,OAAkC,OAA2C,IAA3CA,MAA/BZ,+BAA8E,EAC7FK,WAAY,SAAAA,WAAAQ,OAAA,IAAGX,WAAUW,MAAVX,WAAYR,eAAcmB,MAAdnB,eAAc,YAAsBrC,IAAf6C,YAAsD,IAA1BR,eAAea,MAAY,IAC1GH,sBAGQd,yBAA0BwB,EAAAA,2DAAAA,0BAE1BC,wBAAyBC,EAAAA,oEAAAA,IAAyDb,oB,y8FCrBxF,IA0BMc,gCAAkC,SAAlCA,gCAAmCC,MAAyBC,OACrE,YAAc9D,IAAV6D,YAAiC7D,IAAV8D,QAIvBC,6CAAMF,OAAOG,cAAcD,6CAAMD,OAAOG,SAAS,EAAG,OAAQ,QAC5DF,6CAAMF,OAAOK,eAAeH,6CAAMD,OAAOK,IAAI,EAAG,OAAQ,OAEhE,EAEMC,wBAA0B,SAA1BA,wBAA2BnE,IAAUoE,iBACvC,IAAMC,qBAA+BtE,IAAbC,IAAIZ,KAAqBY,IAAIZ,KAAKiD,KAAI,SAACiC,GAAC,OAAKA,EAAEC,GAAG,IAAEC,OAAS,GAC/EC,mBAAoBC,EAAAA,iDAAAA,IAAgB1E,IAAI2E,gBAAgBC,aAExDC,mBAAqBT,gBAAgBU,QAAO,SAACR,GAAC,OAAKD,gBAAgBU,SAAST,EAAEC,IAAI,IAGlFS,gCACoBjF,IAAtB0E,kBACML,gBAAgBU,QACZ,SAAC1F,MAAI,OACDuE,gCAAgCvE,KAAKwF,YAAaH,qBACjDI,mBAAmBI,MAAK,SAACC,SAAO,OAAKA,QAAQX,MAAQnF,KAAKmF,GAAG,GAAC,IAEvE,GACJW,QAAUL,mBAAmBtC,OAAOyC,4BAEpCG,qBAAsBT,EAAAA,iDAAAA,KACxBU,EAAAA,iDAAAA,IACIpF,IAAI2E,gBAAgBnF,WACpBQ,IAAI2E,gBAAgBC,YACpB5E,IAAI2E,gBAAgBU,qBAGtBC,SA5CoB,SAAxBC,sBAAyBC,gBAA0Bb,iBACrD,OAAIa,gBACO5G,+DAAAA,GAAAA,cAEyBmB,IAAhC4E,gBAAgBC,YACThG,+DAAAA,GAAAA,QAEJA,+DAAAA,GAAAA,QACX,CAoCqB2G,CAAsBvF,IAAIwF,gBAAiBxF,IAAI2E,iBAChE,MAAO,CACHtE,IAAIoF,EAAAA,mDAAAA,QACJ/G,KAAM4G,SACN/F,WAAYS,IAAI2E,gBAAgBpF,WAChCC,YAAYkF,EAAAA,iDAAAA,IAAgB1E,IAAI2E,gBAAgBnF,YAChDuB,oBAAoB2D,EAAAA,iDAAAA,IAAgB1E,IAAI2E,gBAAgBU,oBACxDK,iBAAkB1F,IAAI0F,iBACtB1F,IACAc,mBAC0Bf,IAAtB0E,kBAAkCkB,MAAM3F,IAAI2E,gBAAgBpF,YAAYqG,KAAKnB,wBAAqB1E,EACtG8F,qBAAsBV,oBACtBW,cAAcpB,EAAAA,iDAAAA,IAAgB1E,IAAI2E,gBAAgBnF,YAClDuG,mCAC4BhG,IAAxBC,IAAIgG,iBAAiChG,IAAIgG,gBAAgBC,SAAShD,OAAS,GACrEiD,EAAAA,yEAAAA,IAAYxB,EAAAA,iDAAAA,IAAgB1E,IAAIgG,gBAAgBC,SAAS,GAAGE,MAAOC,uBACnErG,EACVc,aACgBd,IAAZmF,SAAyBA,QAAQjC,OAAS,EACpCiC,QACKJ,QAAO,SAACR,GAAC,YAAmBvE,IAAduE,EAAEzD,SAA8C,KAArByD,EAAEzD,QAAQwF,MAAa,IAChEhE,KAAI,SAACiC,GAAC,MAAK,CAACA,EAAEzD,aAA0Bd,IAAjBuE,EAAEgC,WAA2BhC,EAAEgC,WAAa,IAAIC,KAAK,IAAI,SACrFxG,EACVwE,SACgBxE,IAAZmF,SAAyBA,QAAQjC,OAAS,EACpCiC,QAAQJ,QAAO,SAAC1F,MAAI,YAAkBW,IAAbX,KAAKmF,GAAiB,IAAElC,KAAI,SAACiC,GAAC,OAAKA,EAAEC,GAAG,SACjExE,EACViB,oBACgBjB,IAAZmF,SAAyBA,QAAQjC,OAAS,GAAIiC,QAAQsB,OAAM,SAACpH,MAAI,OAAKqH,EAAAA,iDAAAA,IAAerH,KAAK,IAEtG,EA6DMsH,+BAAiC,SAAjCA,+BACFtC,gBACAuC,aACAC,iBAGA,IAAMC,mCAAqCzC,gBAAgBU,QACvD,SAACgC,SAAO,OACHF,gBAAgB3B,MAAK,SAACjF,KAAG,OACtB2D,gCAAgCmD,QAAQlC,aAAaF,EAAAA,iDAAAA,IAAgB1E,IAAI2E,gBAAgBC,aAAa,GACzG,IAKHmC,sBAAwBF,mCAAmCxE,KAAI,SAACiC,GAAC,YACzDvE,IAAVuE,EAAEC,IAAiByC,cAAAA,cAAA,GAAQ1C,GAAC,IAAEC,IAFf,WAEiCkB,EAAAA,mDAAAA,QAAOwB,aAAe3C,CAAC,IAIrE4C,sBAAwBP,aAAatE,KAAI,SAACiC,GAAC,OAAKA,EAAEC,GAAG,IAAEC,OACvD2C,0BAA4BR,aAC7B7B,QAAO,SAAC1F,MAAI,YAA4BW,IAAvBX,KAAK0B,eAA+B1B,KAAK0B,cAAcmC,OAAS,CAAC,IAClFZ,KAAI,SAACiC,GAAC,OAAKA,EAAExD,aAAa,IAC1B0D,OACC4C,qBAAuB,GAmD7B,OAhD0CL,sBAAsBjC,QAC5D,SAACR,GAAC,aAEqBvE,IAAfuE,EAAE+C,UACAF,0BAA0BlC,MAAK,SAACqC,MAAI,OAAKxD,6CAAMwD,MAAMC,OAAOzD,6CAAMQ,EAAEM,aAAc,MAAM,IAC7F,IAEyB4C,SAAQ,SAACV,SACvC,IAAKI,sBAAsBnC,SAAS+B,QAAQvC,QAASkD,EAAAA,mDAAAA,IAAwBX,QAAQlC,aAAc,CAC/F,IAAM8C,uBAAwBC,EAAAA,iDAAAA,IAC1Bb,QAAQvC,IACRuC,QAAQlC,YACRmC,uBAEEa,mBACwB7H,IAA1B+G,QAAQc,cACF,CACIrD,IAAKuC,QAAQc,cAAcrD,IAC3B1D,QAASiG,QAAQc,cAAc/G,QAC/ByF,WAAYQ,QAAQc,cAActB,WAClCuB,UAAWf,QAAQc,cAAcC,gBAErC9H,EAEV,GADAmH,sBAAsBY,KAAKhB,QAAQvC,KACE,IAAjCmD,sBAAsBzE,QACtB,KAAK8E,EAAAA,iDAAAA,IAAoCjB,SAAU,CAC/C,IAAMkB,gBAjHM,SAA1BC,wBACFC,eACAN,eAEA,IAAMO,UAC4BpI,IAA9BmI,eAAe5B,WACT,CAAC4B,eAAerH,QAASqH,eAAe5B,YAAYC,KAAK,KACzD2B,eAAerH,QACzB,MAAO,CACHR,IAAIoF,EAAAA,mDAAAA,QACJ/G,KAAME,+DAAAA,GAAAA,YACNW,WAAY,EACZuB,cAAe,CAACoH,eAAetD,aAC/B/D,aAAkBd,IAAToI,KAAqB,CAACA,WAAQpI,EACvCwE,IAAK,CAAC2D,eAAe3D,KACrBuB,aAAcoC,eAAetD,YAC7B5D,gBAAgByF,EAAAA,iDAAAA,IAAeyB,gBAC/BN,cAER,CA8F2CK,CAAwBnB,QAASc,eACxDR,qBAAqBU,KAAKE,gBAC9B,MACG,CACH,IAAMI,qBAhGgB,SAAhCC,8BACFH,eACAR,sBACAE,eAEA,IAAMU,UAAY,CAACJ,gBAAgB3F,OAAOmF,uBAAuBa,KAAKC,uCAItE,IAH6CF,UAAUrD,MACnD,SAACX,GAAC,QAAMmC,EAAAA,iDAAAA,IAAenC,KAAMyD,EAAAA,iDAAAA,IAAoCzD,EAAE,KAET,GAApBgE,UAAUrF,OAIpD,MAAO,CACH5C,IAAIoF,EAAAA,mDAAAA,QACJ/G,KAAME,+DAAAA,GAAAA,YACNW,WAAY+I,UAAUrF,OACtBnC,cAAewH,UAAUjG,KAAI,SAACiC,GAAC,OAAKA,EAAEM,WAAW,IACjD/D,QAASyH,UAAUjG,KAAI,SAACiC,GAAC,MAAK,CAACA,EAAEzD,aAA0Bd,IAAjBuE,EAAEgC,WAA2BhC,EAAEgC,WAAa,IAAIC,KAAK,IAAI,IACnGhC,IAAK+D,UAAUjG,KAAI,SAACiC,GAAC,OAAKA,EAAEC,GAAG,IAC/BuB,aAAcwC,UAAU,GAAG1D,YAC3B5D,eAAgBsH,UAAU9B,OAAM,SAAClC,GAAC,OAAKmC,EAAAA,iDAAAA,IAAenC,EAAE,IACxDsD,cAER,CAwE6CS,CACzBvB,QACAY,sBACAE,eAEJF,sBAAsBF,SAAQ,SAAClD,GAC3B4C,sBAAsBY,KAAKxD,EAAEC,IACjC,SAC6BxE,IAAzBqI,sBACAhB,qBAAqBU,KAAKM,qBAElC,CACJ,CACJ,IAEuBhB,qBAAqB/E,KAAI,SAACiC,GAAC,OAC9CA,EAAEC,KAAOD,EAAEC,IAAItB,OAAS,EAAC+D,cAAAA,cAAA,GAAQ1C,GAAC,IAAEC,IAAKD,EAAEC,IAAIO,QAAO,SAAC2D,IAAE,OAAKA,KAAOA,GAAGC,WA5DzD,UA4D+E,MAAMpE,CAAC,GAG7G,EAEaqE,yBAA2B,SAA3BA,yBAA4BC,MAAcxE,iBACnD,IAAMyE,UAAYD,MAAM9D,QAAO,SAAC9E,KAAG,OAAMA,IAAI8I,YAAY,IACnDlC,gBAAkBgC,MAAM9D,QAAO,SAAC9E,KAAG,OAAKA,IAAI8I,YAAY,IACxDnC,aA9FgC,SAApCoC,kCAAqCH,MAAcxE,iBACrD,OAAOwE,MACF9D,QACG,SAAC9E,KAAG,YACcD,IAAbC,IAAIZ,MAAsBY,IAAIZ,KAAK6D,OAAS,QACVlD,IAAnCC,IAAI2E,gBAAgBnF,iBACgBO,IAApCC,IAAI2E,gBAAgBC,kBACuB7E,IAA3CC,IAAI2E,gBAAgBU,kBAAgC,IAE3DhD,KAAI,SAAC2G,YAAU,OAAK7E,wBAAwB6E,WAAY5E,gBAAgB,GACjF,CAoFyB2E,CAAkCF,UAAWzE,iBAC5D6E,WAAavC,+BAA+BtC,gBAAiBuC,aAAcC,iBACjF,OAAOD,aAAapE,OAAO0G,WAC/B,EAEaC,mBAAqB,SAArBA,mBACTtG,WACAR,gBAC8B,IAAA+G,eAAAC,sBACxBC,mBAAqBjH,eAAe0C,QACtC,SAAC1F,MAAI,YACYW,IAAbX,KAAKY,KACLZ,KAAKiB,KAAOuC,WAAWvC,SACON,IAA9BX,KAAKyG,sBACL/B,6CAAM1E,KAAKyG,sBAAsByD,QAAQ1G,WAAWiD,qBAAuB,MAAM,IAEzFwD,mBAAmBd,KAAKgB,gCACxB,IAAMC,UAAYH,mBAAmBA,mBAAmBpG,OAAS,GACjE,QAAkBlD,IAAdyJ,UAIJ,MAAO,CACH3D,qBAAsB2D,UAAU3D,qBAChCE,8BAA+ByD,UAAUzD,8BACzCxB,IAAKiF,UAAUjF,IACfkF,iBAA+B,QAAfN,eAAEK,UAAUxJ,WAAG,IAAAmJ,gBAAW,QAAXC,sBAAbD,eAAeO,iBAAS,IAAAN,2BAAX,EAAbA,sBAA0B7E,IAEpD,EAEO,SAASiE,sCAAsCmB,GAAoBC,IACtE,OAAI9F,6CAAM6F,GAAG/E,aAAa0E,QAAQM,GAAGhF,YAAa,KACvC,EACAd,6CAAM6F,GAAG/E,aAAaiF,SAASD,GAAGhF,YAAa,MAG/C+E,GAAG9I,QAAU+I,GAAG/I,SAFf,EAE8B,CAE9C,CAEO,SAAS0I,+BAA+BI,GAAoBC,IAC/D,OAAO9F,6CAAM6F,GAAG7D,cAAc+D,SAASD,GAAG9D,aAAc,KAClD,EACAhC,6CAAM6F,GAAG7D,cAAcwD,QAAQM,GAAG9D,aAAc,MAC/C,EACD,CACV,C,g1FC5OA,iCAjDyB,SAAnBgE,iBACFC,cACAC,UACAC,YAEA,IAAAC,uBAA4BC,EAAAA,6EAAAA,KAApBC,SAAQF,sBAARE,SAAUC,MAAKH,sBAALG,MACZC,UAAWC,EAAAA,8CAAAA,MACmCC,WAAAC,gBAAfC,EAAAA,mCAAAA,WAAS,GAAM,GAA7CC,aAAYH,WAAA,GAAEI,aAAYJ,WAAA,GACsBK,WAAAJ,gBAAfC,EAAAA,mCAAAA,WAAS,GAAM,GAAhDI,aAAYD,WAAA,GAAEE,gBAAeF,WAAA,GACqBG,WAAAP,gBAAnBC,EAAAA,mCAAAA,eAAS3K,GAAU,GAAlDkL,YAAWD,WAAA,GAAEE,eAAcF,WAAA,IAElCG,EAAAA,mCAAAA,YAAU,WACFR,cACAV,WAAWI,OACNe,MAAK,WACEpB,YAAcqB,+CAAAA,EAAAA,gBACdf,SAASN,WAETM,SAASD,MAAMiB,aAEvB,IAAE,OACK,SAACC,QACAA,MAAMC,UAAuC,MAA1BD,MAAMC,SAASC,QAA4C,MAA1BF,MAAMC,SAASC,OAGnEP,eAAeK,QAFfG,EAAAA,8CAAAA,IAIR,GAEZ,GAAG,CAACf,aAAcL,SAAUN,UAAWK,MAAOJ,cAE9CkB,EAAAA,mCAAAA,YAAU,WACN,GAAIF,YAEA,MADAU,EAAAA,8CAAAA,IAAyBV,aACnB,IAAIW,MAAMX,YAExB,GAAG,CAACA,cAUJ,MAAO,CAAEY,aARY,SAAfA,aAAgBC,QAClBf,iBAAgB,GAChB,IAAMgB,QAAUhC,cAAc+B,QACxBE,oBACFhC,YAAcqB,+CAAAA,EAAAA,qBAA4BtL,EAAYqK,SAAS6B,8DAAAA,EAAAA,mBAAiCjC,YACpGkC,QAAQC,IAAI,CAACH,qBAAmBzJ,OAAA6J,mBAAKL,QAAQ1J,KAAI,SAACgK,GAAC,OAAKjC,SAASiC,EAAE,OAAIjB,MAAK,kBAAMR,cAAa,EAAK,GACxG,EAEuBE,aAC3B,C,6VCjDA,iCALqB,SAAfwB,eAEF,OADkBnC,EAAAA,6EAAAA,KAAVE,MACKkC,SACjB,C,u5BCEaC,aAAe,SAAfA,aAAgB3L,QAAiBgH,UAAmB4E,aAAuBnG,YACpF,OAAImG,aACOnG,WAAa,GAAH/D,OAAM1B,QAAO,KAAA0B,OAAI+D,WAAU,KAAA/D,OAAIsF,WAAS,GAAAtF,OAAQ1B,QAAO,KAAA0B,OAAIsF,WAEzEvB,WAAa,GAAH/D,OAAM1B,QAAO,KAAA0B,OAAI+D,YAAU,GAAA/D,OAAQ1B,QACxD,EAOa6L,uBAAyB,SAAzBA,uBAA0BvE,KAAcwE,QACjD,MAAe,OAAXA,OACOxE,KAPW,SAApByE,kBAAqBzE,MACvB,IAAM0E,aAAe1E,KAAK2E,OAAO3E,KAAKlF,OAAS,GAAG8J,cAClD,MAAwB,MAAjBF,cAAyC,MAAjBA,cAAyC,MAAjBA,YAC3D,CAMQD,CAAkBzE,MACX,GAAP5F,OAAU4F,KAAI,KAEX,GAAP5F,OAAU4F,KAAI,IAClB,EAEa6E,gBAAkB,SAAlBA,gBAAmBpF,eAC5B,IAAIqF,EAAAA,6DAAAA,GAAuBrF,eAAgB,CACvC,IAAQrD,IAAQqD,cAARrD,IAER,QAAYxE,IAARwE,KAAoC,KAAfA,IAAItB,OACzB,OAEJ,OAAOiK,SAAS3I,IAAIuI,OAAO,GAAI,IAAM,GAAM,EAAI,IAAM,GACzD,CAGJ,EAEaK,sBAAwB,SAAxBA,sBAAyB5I,KAClC,GAAmB,KAAfA,IAAItB,OAGR,OAAOiK,SAAS3I,IAAIuI,OAAO,GAAI,IAAM,GAAM,EAAI,IAAM,GACzD,EAEaM,sBAAwB,SAAxBA,sBACTC,WACAC,qBACA1F,eAEA,OAAOyF,aAAeC,uBAAwD,IAAhC1F,cAAc2F,cAChE,EAEaC,4CAA8C,SAA9CA,4CACTC,MACAC,sBACA9F,eAEA,OAA8B,IAA1B8F,wBAAkCT,EAAAA,6DAAAA,GAAuBrF,gBAEL,IAAhDA,cAAc+F,gCAAwF,IAA9C/F,cAAcgG,4BAG7D,QAAVH,KACX,EAaaI,4BAA8B,SAA9BA,4BACTC,iBACAR,qBACA1F,eAEA,OAAOkG,mBAAqBR,uBAAwD,IAAhC1F,cAAc2F,cACtE,EAEaQ,kBAAoB,SAApBA,kBACTC,OACApG,cACAqG,iBACA9P,MAEA,IAAM+P,UAAYF,OAAOnN,QACnBsN,mBACFlB,EAAAA,6DAAAA,GAAuBrF,qBAA4C7H,IAA1B6H,cAAc/G,SAAmD,KAA1B+G,cAAc/G,QACxF+G,cAAc/G,SACdlC,EAAAA,+CAAAA,WAAUR,KAAM,kBAI1B,MAAO,CACHiQ,IAJYH,iBAAmBE,kBAAoBD,UAKnDG,UAJkBJ,iBAAmBC,UAAYC,kBAMzD,EAEaG,yBAA2B,SAA3BA,yBAA4BC,YAAsB,MAC5C,QAAfA,YAAuC,WAAfA,UAAuB,EAEtC9G,wBAA0B,SAA1BA,wBAA2B7C,aACpC,OAAOd,6CAAMc,aAAaV,IAAI,EAAG,QAAQA,IAAI,EAAG,SAAS2F,SAAS/F,+CAAS,MAC/E,C","sources":["webpack://foreldrepengesoknad/./src/app/links/links.ts","webpack://foreldrepengesoknad/./src/app/pages/velkommen/components/SøknadStatus.tsx","webpack://foreldrepengesoknad/./src/app/pages/velkommen/components/barnVelger/BarnVelger.tsx","webpack://foreldrepengesoknad/./src/app/pages/velkommen/validation/velkommenValidation.ts","webpack://foreldrepengesoknad/./src/app/pages/velkommen/velkommenFormConfig.ts","webpack://foreldrepengesoknad/./src/app/pages/velkommen/velkommenUtils.ts","webpack://foreldrepengesoknad/./src/app/utils/hooks/useOnValidSubmit.ts","webpack://foreldrepengesoknad/./src/app/utils/hooks/useSøkerinfo.ts","webpack://foreldrepengesoknad/./src/app/utils/personUtils.ts"],"sourcesContent":["export default {\n    adoptere: 'https://www.nav.no/no/person/familie/foreldrepenger/foreldrepenger#adoptere',\n    rettOgPlikt: 'https://nav.no/rettOgPlikt',\n    fleksibeltuttak: 'https://www.nav.no/no/person/familie/foreldrepenger/foreldrepenger#samtidig',\n    papirsøknad: 'https://www.nav.no/soknader/nb/person/familie/foreldrepenger-og-engangsstonad',\n    viktigeFrister: 'https://www.nav.no/no/person/familie/foreldrepenger/foreldrepenger#soknadsfrister',\n    nav_aktivitetskrav: 'https://www.nav.no/no/person/familie/foreldrepenger/foreldrepenger#hvor-lenge',\n    brukerstøtte:\n        'https://www.nav.no/no/NAV+og+samfunn/Kontakt+NAV/Teknisk+brukerstotte/hjelp-til-personbruker?kap=398749',\n    innsyn: 'https://foreldrepenger.nav.no',\n    morsAktivitetskrav: 'https://www.nav.no/no/person/familie/foreldrepenger/foreldrepenger#hvor-lenge',\n    frilanserInfoBoks:\n        'https://www.skatteetaten.no/bedrift-og-organisasjon/arbeidsgiver/a-meldingen/veiledning/arbeidsforholdet/type-arbeidsforhold/frilanser-oppdragstaker-og-personer-som-mottar-honorarer/',\n    næringsdrivendeInfoBoks:\n        'https://www.skatteetaten.no/bedrift-og-organisasjon/starte-og-drive/er-jeg-naringsdrivende/',\n    brukerprofil: 'https://tjenester.nav.no/brukerprofil/',\n    familie: 'https://familie.nav.no/',\n    graderingInfo: 'https://www.nav.no/no/person/familie/foreldrepenger/foreldrepenger#arbeid',\n    aktivitetsfriUttakInfo: 'https://www.nav.no/foreldrepenger#hvor-lenge',\n    hvordanSendeInntektsmelding:\n        'https://www.nav.no/no/bedrift/tjenester-og-skjemaer/nav-og-altinn-tjenester/foreldrepenger-og-svangerskapspenger2',\n    omLottOgHyre: 'https://www.skatteetaten.no/rettskilder/type/handboker/skatte-abc/2019/fiske/F-14.014/F-14.048/',\n};\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport { intlUtils } from '@navikt/fp-common';\nimport EtikettBase from 'nav-frontend-etiketter';\n\nimport './søknadStatus.less';\nimport './wrapper.less';\n\ninterface Props {\n    sakErFerdigbehandlet: boolean;\n}\n\nconst SøknadStatusEtikett: React.FunctionComponent<Props> = ({ sakErFerdigbehandlet }) => {\n    const intl = useIntl();\n    const etikettType = sakErFerdigbehandlet ? 'suksess' : 'fokus';\n    const statusTekst = sakErFerdigbehandlet\n        ? 'velkommen.sak.status.ferdigBehandlet'\n        : 'velkommen.sak.status.underBehandling';\n    return (\n        <EtikettBase className=\"blokk-xxxs\" type={etikettType}>\n            {intlUtils(intl, statusTekst)}\n        </EtikettBase>\n    );\n};\n\nexport default SøknadStatusEtikett;\n","import { Block, formatDate, intlUtils } from '@navikt/fp-common';\nimport React, { FunctionComponent } from 'react';\nimport { IntlShape, useIntl } from 'react-intl';\nimport { VelkommenFormComponents, VelkommenFormData, VelkommenFormField } from '../../velkommenFormConfig';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport SøknadStatusEtikett from '../SøknadStatus';\nimport { Normaltekst } from 'nav-frontend-typografi';\nimport { validateHarValgtEtBarn } from '../../validation/velkommenValidation';\nimport './barnVelger.less';\nimport { formaterFødselsdatoerPåBarn, formaterNavnPåBarn, getTekstForAntallBarn } from 'app/utils/barnUtils';\nimport { Sak } from 'app/types/Sak';\nimport { RegistrertAnnenForelder } from 'app/types/Person';\n\nexport enum SelectableBarnType {\n    FØDT = 'født',\n    UFØDT = 'ufødt',\n    ADOPTERT = 'adoptert',\n    IKKE_UTFYLT = 'ikkeUtfylt',\n}\n\nexport enum SelectableBarnOptions {\n    SØKNAD_GJELDER_NYTT_BARN = 'søknad_gjeder_nytt_barn',\n}\n\nexport interface SelectableBarn {\n    id: string;\n    type: SelectableBarnType;\n    antallBarn: number;\n    sortableDato: Date;\n    fnr?: string[];\n    termindato?: Date;\n    fødselsdatoer?: Date[];\n    omsorgsovertagelse?: Date;\n    fornavn?: string[];\n    kanSøkeOmEndring?: boolean;\n    sak?: Sak;\n    annenForelder?: RegistrertAnnenForelder;\n    familiehendelsesdato?: Date;\n    startdatoFørsteStønadsperiode?: Date;\n    alleBarnaLever: boolean;\n}\n\ninterface Props {\n    selectableBarn: SelectableBarn[];\n    visibility: QuestionVisibility<VelkommenFormField>;\n    formValues: VelkommenFormData;\n    setFieldValue: (field: string, value: any, shouldValidate?: boolean | undefined) => void;\n}\n\nconst getRadioForNyttBarn = (intl: IntlShape): any => {\n    return {\n        label: (\n            <>\n                <b> {intlUtils(intl, 'omBarnet.gjelderAnnetBarn')}</b>\n            </>\n        ),\n        value: SelectableBarnOptions.SØKNAD_GJELDER_NYTT_BARN,\n        className: 'radioGroupButton',\n    };\n};\n\nconst getSakstatus = (sakErFerdigbehandlet: boolean) => {\n    return <SøknadStatusEtikett sakErFerdigbehandlet={sakErFerdigbehandlet}></SøknadStatusEtikett>;\n};\n\nconst getTittelForUfødtBarn = (antallBarn: number, termindato: Date, intl: IntlShape): string => {\n    const barnTekst = getTekstForAntallBarn(antallBarn, intl);\n    return intlUtils(intl, 'velkommen.barnVelger.ufødtBarn', {\n        antallBarnTekst: barnTekst,\n        termin: formatDate(termindato),\n    });\n};\n\nconst getRadioForUfødtBarn = (barn: SelectableBarn, intl: IntlShape): any => {\n    const tittel = getTittelForUfødtBarn(barn.antallBarn, barn.termindato!, intl);\n    const saksStatus = barn.sak !== undefined ? getSakstatus(barn.sak.åpenBehandling === undefined) : undefined;\n    const saksnummerTekst =\n        barn.sak !== undefined\n            ? intlUtils(intl, 'velkommen.barnVelger.saksnummer', { saksnummer: barn.sak.saksnummer })\n            : '';\n    const harSak = barn.sak !== undefined;\n\n    return {\n        label: (\n            <>\n                <b> {tittel}</b>\n                {harSak && (\n                    <div>\n                        <p>{saksnummerTekst}</p>\n                        {saksStatus}\n                    </div>\n                )}\n            </>\n        ),\n        value: barn.id,\n        className: 'radioGroupButton',\n    };\n};\n\nconst getRadioForFødtEllerAdoptertBarn = (barn: SelectableBarn, intl: IntlShape): any => {\n    const navnTekstEllerBarnMedUkjentNavnTekst = formaterNavnPåBarn(\n        barn.fornavn,\n        barn.fødselsdatoer,\n        barn.omsorgsovertagelse,\n        barn.alleBarnaLever,\n        barn.antallBarn,\n        intl\n    );\n    const fødselsdatoerTekst = formaterFødselsdatoerPåBarn(barn.fødselsdatoer);\n    const fødtAdoptertDatoTekst =\n        barn.type === SelectableBarnType.FØDT || barn.type === SelectableBarnType.IKKE_UTFYLT\n            ? fødselsdatoerTekst\n            : formatDate(barn.omsorgsovertagelse!);\n    const situasjonTekst =\n        barn.type === SelectableBarnType.FØDT || barn.type === SelectableBarnType.IKKE_UTFYLT\n            ? intlUtils(intl, 'velkommen.barnVelger.født')\n            : intlUtils(intl, 'velkommen.barnVelger.adopsjon');\n\n    const saksnummerTekst =\n        barn.sak !== undefined\n            ? intlUtils(intl, 'velkommen.barnVelger.saksnummer', { saksnummer: barn.sak.saksnummer })\n            : '';\n    const saksStatus = barn.sak !== undefined ? getSakstatus(barn.sak.åpenBehandling === undefined) : undefined;\n    return {\n        label: (\n            <>\n                <b>{navnTekstEllerBarnMedUkjentNavnTekst}</b>\n                {barn.alleBarnaLever && (\n                    <p>\n                        {situasjonTekst} {fødtAdoptertDatoTekst}\n                    </p>\n                )}\n                <p>{saksnummerTekst}</p>\n                {saksStatus !== undefined && saksStatus}\n            </>\n        ),\n        value: barn.id,\n        name: VelkommenFormField.valgteBarn,\n        className: 'radioGroupButton',\n    };\n};\n\nconst getCheckboxForBarn = (barn: SelectableBarn, intl: IntlShape): any => {\n    const barnType = barn.type;\n    switch (barnType) {\n        case SelectableBarnType.FØDT:\n        case SelectableBarnType.ADOPTERT:\n        case SelectableBarnType.IKKE_UTFYLT:\n            return getRadioForFødtEllerAdoptertBarn(barn, intl);\n        case SelectableBarnType.UFØDT:\n            return getRadioForUfødtBarn(barn, intl);\n        default:\n            return undefined;\n    }\n};\n\nconst BarnVelger: FunctionComponent<Props> = (props: Props) => {\n    const intl = useIntl();\n\n    return (\n        <Block visible={props.visibility.isVisible(VelkommenFormField.valgteBarn)}>\n            <Block padBottom=\"l\">\n                <Normaltekst>{intlUtils(intl, 'velkommen.intro.harSaker.barnVelger.info')}</Normaltekst>\n            </Block>\n            <Block padBottom=\"l\">\n                <VelkommenFormComponents.RadioGroup\n                    name={VelkommenFormField.valgteBarn}\n                    validate={validateHarValgtEtBarn(intl)}\n                    radios={props.selectableBarn\n                        .map((barnet) => getCheckboxForBarn(barnet, intl))\n                        .concat([getRadioForNyttBarn(intl)])}\n                />\n            </Block>\n        </Block>\n    );\n};\n\nexport default BarnVelger;\n","import { intlUtils } from '@navikt/fp-common';\nimport { IntlShape } from 'react-intl';\nimport { SelectableBarn } from '../components/barnVelger/BarnVelger';\n\nexport const validateHarForståttRettigheterOgPlikter = (intl: IntlShape) => (value: boolean) => {\n    if (value !== true) {\n        return intlUtils(intl, 'valideringsfeil.velkommen.harForståttRettigheterOgPlikter.påkrevd');\n    }\n\n    return undefined;\n};\n\nexport const validateHarValgtEtBarn = (intl: IntlShape) => (value: SelectableBarn | undefined) => {\n    if (value === undefined) {\n        return intlUtils(intl, 'steg.footer.spørsmålMåBesvares');\n    }\n\n    return undefined;\n};\n","import { getTypedFormComponents } from '@navikt/sif-common-formik/lib';\nimport { Questions, QuestionConfig } from '@navikt/sif-common-question-config/lib';\nimport { SelectableBarn } from './components/barnVelger/BarnVelger';\n\nexport enum VelkommenFormField {\n    harForståttRettigheterOgPlikter = 'harForståttRettigheterOgPlikter',\n    valgteBarn = 'valgteBarn',\n}\n\nexport interface VelkommenFormData {\n    [VelkommenFormField.harForståttRettigheterOgPlikter]: boolean;\n    [VelkommenFormField.valgteBarn]: string | undefined;\n}\n\nexport const getInitialVelkommenValues = (harForståttRettigheterOgPlikter: boolean): VelkommenFormData => ({\n    [VelkommenFormField.harForståttRettigheterOgPlikter]: harForståttRettigheterOgPlikter,\n    [VelkommenFormField.valgteBarn]: undefined,\n});\n\ninterface VelkommenQuestionsPayload extends VelkommenFormData {\n    selectableBarn: SelectableBarn[];\n}\n\nexport const VelkommenFormConfig: QuestionConfig<VelkommenQuestionsPayload, VelkommenFormField> = {\n    [VelkommenFormField.valgteBarn]: {\n        isIncluded: ({ selectableBarn }) => selectableBarn.length > 0,\n        isAnswered: ({ valgteBarn }) => valgteBarn !== undefined,\n        visibilityFilter: ({ selectableBarn }) => selectableBarn.length > 0,\n    },\n    [VelkommenFormField.harForståttRettigheterOgPlikter]: {\n        isAnswered: ({ harForståttRettigheterOgPlikter }) => harForståttRettigheterOgPlikter === true,\n        isIncluded: ({ valgteBarn, selectableBarn }) => valgteBarn !== undefined || selectableBarn.length === 0,\n    },\n};\n\nexport const VelkommenFormComponents = getTypedFormComponents<VelkommenFormField, VelkommenFormData, string>();\n\nexport const velkommenFormQuestions = Questions<VelkommenQuestionsPayload, VelkommenFormField>(VelkommenFormConfig);\n","import { Sak } from 'app/types/Sak';\nimport { guid } from 'nav-frontend-js-utils';\nimport { SelectableBarn, SelectableBarnType } from './components/barnVelger/BarnVelger';\nimport { Familiehendelse } from 'app/types/Familiehendelse';\nimport { RegistrertAnnenForelder, RegistrertBarn } from 'app/types/Person';\nimport dayjs from 'dayjs';\nimport { erEldreEnn3ÅrOg3Måneder } from 'app/utils/personUtils';\nimport { getRelevantFamiliehendelseDato, ISOStringToDate } from 'app/utils/dateUtils';\nimport { BarnFraNesteSak } from 'app/context/types/Barn';\nimport { Uttaksdagen } from 'app/steps/uttaksplan-info/utils/Uttaksdagen';\nimport {\n    getAndreBarnFødtSammenMedBarnet,\n    getDødeBarnetForMerEnn3MånederSiden,\n    getLeverBarnet,\n} from 'app/utils/barnUtils';\n\nexport const getSortableBarnDato = (\n    fødselsdatoer: Date[],\n    termindato: Date | undefined,\n    omsorgsovertagelse: Date | undefined\n): Date => {\n    //Dato som skal kun brukes til å sortere barna i visningen\n    if (fødselsdatoer.length > 0) {\n        return fødselsdatoer[0];\n    }\n    if (termindato !== undefined) {\n        return termindato;\n    }\n\n    return omsorgsovertagelse!;\n};\n\nconst getSelectableBarnType = (gjelderAdopsjon: boolean, familiehendelse: Familiehendelse): SelectableBarnType => {\n    if (gjelderAdopsjon) {\n        return SelectableBarnType.ADOPTERT;\n    }\n    if (familiehendelse.fødselsdato !== undefined) {\n        return SelectableBarnType.FØDT;\n    }\n    return SelectableBarnType.UFØDT;\n};\n\nexport const getErDatoInnenEnDagFraAnnenDato = (dato1: Date | undefined, dato2: Date | undefined): boolean => {\n    if (dato1 === undefined || dato2 === undefined) {\n        return false;\n    }\n    return (\n        dayjs(dato1).isSameOrAfter(dayjs(dato2).subtract(1, 'day'), 'day') &&\n        dayjs(dato1).isSameOrBefore(dayjs(dato2).add(1, 'day'), 'day')\n    );\n};\n\nconst getSelectableBarnFraSak = (sak: Sak, registrerteBarn: RegistrertBarn[]): SelectableBarn => {\n    const barnFnrFraSaken = sak.barn !== undefined ? sak.barn.map((b) => b.fnr).flat() : [];\n    const fødselsdatoFraSak = ISOStringToDate(sak.familiehendelse.fødselsdato);\n\n    const pdlBarnMedSammeFnr = registrerteBarn.filter((b) => barnFnrFraSaken.includes(b.fnr));\n\n    //Noen saken sendes uten barn, derfor må sjekke PDL mot fødselsdato også\n    const pdlBarnMedSammeFødselsdato =\n        fødselsdatoFraSak !== undefined\n            ? registrerteBarn.filter(\n                  (barn) =>\n                      getErDatoInnenEnDagFraAnnenDato(barn.fødselsdato, fødselsdatoFraSak) &&\n                      !pdlBarnMedSammeFnr.find((pdlBarn) => pdlBarn.fnr === barn.fnr)\n              )\n            : [];\n    const pdlBarn = pdlBarnMedSammeFnr.concat(pdlBarnMedSammeFødselsdato);\n\n    const familiehendelseDato = ISOStringToDate(\n        getRelevantFamiliehendelseDato(\n            sak.familiehendelse.termindato,\n            sak.familiehendelse.fødselsdato,\n            sak.familiehendelse.omsorgsovertakelse\n        )\n    );\n    const barnType = getSelectableBarnType(sak.gjelderAdopsjon, sak.familiehendelse);\n    return {\n        id: guid(),\n        type: barnType,\n        antallBarn: sak.familiehendelse.antallBarn,\n        termindato: ISOStringToDate(sak.familiehendelse.termindato),\n        omsorgsovertagelse: ISOStringToDate(sak.familiehendelse.omsorgsovertakelse),\n        kanSøkeOmEndring: sak.kanSøkeOmEndring,\n        sak: sak,\n        fødselsdatoer:\n            fødselsdatoFraSak !== undefined ? Array(sak.familiehendelse.antallBarn).fill(fødselsdatoFraSak) : undefined,\n        familiehendelsesdato: familiehendelseDato,\n        sortableDato: ISOStringToDate(sak.familiehendelse.termindato)!,\n        startdatoFørsteStønadsperiode:\n            sak.gjeldendeVedtak !== undefined && sak.gjeldendeVedtak.perioder.length > 0\n                ? Uttaksdagen(ISOStringToDate(sak.gjeldendeVedtak.perioder[0].fom)!).denneEllerNeste()\n                : undefined,\n        fornavn:\n            pdlBarn !== undefined && pdlBarn.length > 0\n                ? pdlBarn\n                      .filter((b) => b.fornavn !== undefined && b.fornavn.trim() !== '')\n                      .map((b) => [b.fornavn, b.mellomnavn !== undefined ? b.mellomnavn : ''].join(' '))\n                : undefined,\n        fnr:\n            pdlBarn !== undefined && pdlBarn.length > 0\n                ? pdlBarn.filter((barn) => barn.fnr !== undefined).map((b) => b.fnr)\n                : undefined,\n        alleBarnaLever:\n            pdlBarn !== undefined && pdlBarn.length > 0 ? pdlBarn.every((barn) => getLeverBarnet(barn)) : false,\n    };\n};\n\nconst getSelectableBarnFraPDL = (\n    registrertBarn: RegistrertBarn,\n    annenForelder: RegistrertAnnenForelder | undefined\n): SelectableBarn => {\n    const navn =\n        registrertBarn.mellomnavn !== undefined\n            ? [registrertBarn.fornavn, registrertBarn.mellomnavn].join(' ')\n            : registrertBarn.fornavn;\n    return {\n        id: guid(),\n        type: SelectableBarnType.IKKE_UTFYLT,\n        antallBarn: 1,\n        fødselsdatoer: [registrertBarn.fødselsdato],\n        fornavn: navn !== undefined ? [navn] : undefined,\n        fnr: [registrertBarn.fnr],\n        sortableDato: registrertBarn.fødselsdato,\n        alleBarnaLever: getLeverBarnet(registrertBarn),\n        annenForelder,\n    };\n};\n\nconst getSelectableFlerlingerFraPDL = (\n    registrertBarn: RegistrertBarn,\n    barnFødtISammePeriode: RegistrertBarn[],\n    annenForelder: RegistrertAnnenForelder | undefined\n): SelectableBarn | undefined => {\n    const alleBarna = [registrertBarn].concat(barnFødtISammePeriode).sort(sorterRegistrerteBarnEtterEldstOgNavn);\n    const minstEttBarnDødeForMerEnn3MndSiden = !!alleBarna.find(\n        (b) => !getLeverBarnet(b) && getDødeBarnetForMerEnn3MånederSiden(b)\n    );\n    if (minstEttBarnDødeForMerEnn3MndSiden || alleBarna.length == 0) {\n        return undefined;\n    }\n\n    return {\n        id: guid(),\n        type: SelectableBarnType.IKKE_UTFYLT,\n        antallBarn: alleBarna.length,\n        fødselsdatoer: alleBarna.map((b) => b.fødselsdato),\n        fornavn: alleBarna.map((b) => [b.fornavn, b.mellomnavn !== undefined ? b.mellomnavn : ''].join(' ')),\n        fnr: alleBarna.map((b) => b.fnr),\n        sortableDato: alleBarna[0].fødselsdato,\n        alleBarnaLever: alleBarna.every((b) => getLeverBarnet(b)),\n        annenForelder,\n    };\n};\n\nconst getSelectableBarnOptionsFromSaker = (saker: Sak[], registrerteBarn: RegistrertBarn[]) => {\n    return saker\n        .filter(\n            (sak) =>\n                (sak.barn !== undefined && sak.barn.length > 0) ||\n                sak.familiehendelse.termindato !== undefined ||\n                sak.familiehendelse.fødselsdato !== undefined ||\n                sak.familiehendelse.omsorgsovertakelse !== undefined\n        )\n        .map((sakMedBarn) => getSelectableBarnFraSak(sakMedBarn, registrerteBarn));\n};\n\nconst getSelectableBarnOptionsFraPDL = (\n    registrerteBarn: RegistrertBarn[],\n    barnFraSaker: SelectableBarn[],\n    avsluttedeSaker: Sak[]\n): SelectableBarn[] => {\n    //Vi ønsker ikke å vise barn som har avsluttet sak\n    const registrerteBarnUtenAvsluttedeSaker = registrerteBarn.filter(\n        (regBarn) =>\n            !avsluttedeSaker.find((sak) =>\n                getErDatoInnenEnDagFraAnnenDato(regBarn.fødselsdato, ISOStringToDate(sak.familiehendelse.fødselsdato))\n            )\n    );\n\n    //Må oppdatere dødfødte barn med falsk fnr for å kunne identifisere de som allerede er blitt lagt til i visningen\n    const tempString = 'tempFnr';\n    const registrerteBarnMedFnr = registrerteBarnUtenAvsluttedeSaker.map((b) =>\n        b.fnr === undefined ? { ...b, fnr: tempString + guid().toString() } : b\n    );\n\n    //Dødfødte barn har ikke fnr og må filtreres bort senere\n    const fnrPåBarnSomErLagtTil = barnFraSaker.map((b) => b.fnr).flat();\n    const fødselsdatoPåBarnFraSaker = barnFraSaker\n        .filter((barn) => barn.fødselsdatoer !== undefined && barn.fødselsdatoer.length > 0)\n        .map((b) => b.fødselsdatoer)\n        .flat();\n    const selectableBarnFraPDL = [] as SelectableBarn[];\n\n    //Fjerner dødfødte barn som har en sak\n    const registrerteBarnUtenDødeBarnMedSak = registrerteBarnMedFnr.filter(\n        (b) =>\n            !(\n                b.dødsdato !== undefined &&\n                !!fødselsdatoPåBarnFraSaker.find((dato) => dayjs(dato).isSame(dayjs(b.fødselsdato), 'day'))\n            )\n    );\n    registrerteBarnUtenDødeBarnMedSak.forEach((regBarn) => {\n        if (!fnrPåBarnSomErLagtTil.includes(regBarn.fnr) && !erEldreEnn3ÅrOg3Måneder(regBarn.fødselsdato)) {\n            const barnFødtISammePeriode = getAndreBarnFødtSammenMedBarnet(\n                regBarn.fnr,\n                regBarn.fødselsdato,\n                registrerteBarnMedFnr\n            );\n            const annenForelder =\n                regBarn.annenForelder !== undefined\n                    ? {\n                          fnr: regBarn.annenForelder.fnr,\n                          fornavn: regBarn.annenForelder.fornavn,\n                          mellomnavn: regBarn.annenForelder.mellomnavn,\n                          etternavn: regBarn.annenForelder.etternavn,\n                      }\n                    : undefined;\n            fnrPåBarnSomErLagtTil.push(regBarn.fnr);\n            if (barnFødtISammePeriode.length === 0) {\n                if (!getDødeBarnetForMerEnn3MånederSiden(regBarn)) {\n                    const selectableBarn = getSelectableBarnFraPDL(regBarn, annenForelder);\n                    selectableBarnFraPDL.push(selectableBarn);\n                }\n            } else {\n                const selectableFlerlinger = getSelectableFlerlingerFraPDL(\n                    regBarn,\n                    barnFødtISammePeriode,\n                    annenForelder\n                );\n                barnFødtISammePeriode.forEach((b) => {\n                    fnrPåBarnSomErLagtTil.push(b.fnr);\n                });\n                if (selectableFlerlinger !== undefined) {\n                    selectableBarnFraPDL.push(selectableFlerlinger);\n                }\n            }\n        }\n    });\n    //Fjerner temp fnr fra barna som skal vises på forsiden\n    const selectableBarn = selectableBarnFraPDL.map((b) =>\n        b.fnr && b.fnr.length > 0 ? { ...b, fnr: b.fnr.filter((nr) => nr && !nr.startsWith(tempString)) } : b\n    );\n    return selectableBarn;\n};\n\nexport const getSelectableBarnOptions = (saker: Sak[], registrerteBarn: RegistrertBarn[]) => {\n    const åpneSaker = saker.filter((sak) => !sak.sakAvsluttet);\n    const avsluttedeSaker = saker.filter((sak) => sak.sakAvsluttet);\n    const barnFraSaker = getSelectableBarnOptionsFromSaker(åpneSaker, registrerteBarn);\n    const barnFraPDL = getSelectableBarnOptionsFraPDL(registrerteBarn, barnFraSaker, avsluttedeSaker);\n    return barnFraSaker.concat(barnFraPDL);\n};\n\nexport const getBarnFraNesteSak = (\n    valgteBarn: SelectableBarn,\n    selectableBarn: SelectableBarn[]\n): BarnFraNesteSak | undefined => {\n    const allePåfølgendeBarn = selectableBarn.filter(\n        (barn) =>\n            barn.sak !== undefined &&\n            barn.id !== valgteBarn.id &&\n            barn.familiehendelsesdato !== undefined &&\n            dayjs(barn.familiehendelsesdato).isAfter(valgteBarn.familiehendelsesdato!, 'day')\n    );\n    allePåfølgendeBarn.sort(sorterSelectableBarnEtterYngst);\n    const nesteBarn = allePåfølgendeBarn[allePåfølgendeBarn.length - 1];\n    if (nesteBarn === undefined) {\n        return undefined;\n    }\n\n    return {\n        familiehendelsesdato: nesteBarn.familiehendelsesdato!,\n        startdatoFørsteStønadsperiode: nesteBarn.startdatoFørsteStønadsperiode!,\n        fnr: nesteBarn.fnr,\n        annenForelderFnr: nesteBarn.sak?.annenPart?.fnr,\n    };\n};\n\nexport function sorterRegistrerteBarnEtterEldstOgNavn(b1: RegistrertBarn, b2: RegistrertBarn) {\n    if (dayjs(b1.fødselsdato).isAfter(b2.fødselsdato, 'd')) {\n        return 1;\n    } else if (dayjs(b1.fødselsdato).isBefore(b2.fødselsdato, 'd')) {\n        return -1;\n    } else {\n        return b1.fornavn < b2.fornavn ? -1 : 1;\n    }\n}\n\nexport function sorterSelectableBarnEtterYngst(b1: SelectableBarn, b2: SelectableBarn) {\n    return dayjs(b1.sortableDato).isBefore(b2.sortableDato, 'd')\n        ? 1\n        : dayjs(b1.sortableDato).isAfter(b2.sortableDato, 'd')\n        ? -1\n        : 0;\n}\n","import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport actionCreator from 'app/context/action/actionCreator';\nimport SøknadRoutes from 'app/routes/routes';\nimport { useForeldrepengesøknadContext } from 'app/context/hooks/useForeldrepengesøknadContext';\nimport { ForeldrepengesøknadContextAction } from 'app/context/action/actionCreator';\nimport { ForeldrepengesøknadContextState } from 'app/context/ForeldrepengesøknadContextConfig';\nimport { redirectToLogin } from '../redirectToLogin';\nimport { sendErrorMessageToSentry } from 'app/api/apiUtils';\n\nconst useOnValidSubmit = <T>(\n    submitHandler: (values: T) => ForeldrepengesøknadContextAction[],\n    nextRoute: SøknadRoutes,\n    postSubmit: (state: ForeldrepengesøknadContextState) => Promise<any>\n) => {\n    const { dispatch, state } = useForeldrepengesøknadContext();\n    const navigate = useNavigate();\n    const [harSubmitted, setSubmitted] = useState(false);\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [submitError, setSubmitError] = useState(undefined);\n\n    useEffect(() => {\n        if (harSubmitted) {\n            postSubmit(state)\n                .then(() => {\n                    if (nextRoute === SøknadRoutes.SØKNAD_SENDT) {\n                        navigate(nextRoute);\n                    } else {\n                        navigate(state.currentRoute);\n                    }\n                })\n                .catch((error) => {\n                    if (error.response && (error.response.status === 401 || error.response.status === 403)) {\n                        redirectToLogin();\n                    } else {\n                        setSubmitError(error);\n                    }\n                });\n        }\n    }, [harSubmitted, navigate, nextRoute, state, postSubmit]);\n\n    useEffect(() => {\n        if (submitError) {\n            sendErrorMessageToSentry(submitError);\n            throw new Error(submitError);\n        }\n    }, [submitError]);\n\n    const handleSubmit = (values: T) => {\n        setIsSubmitting(true);\n        const actions = submitHandler(values);\n        const dispatchRouteChange =\n            nextRoute === SøknadRoutes.SØKNAD_SENDT ? undefined : dispatch(actionCreator.updateCurrentRoute(nextRoute));\n        Promise.all([dispatchRouteChange, ...actions.map((a) => dispatch(a))]).then(() => setSubmitted(true));\n    };\n\n    return { handleSubmit, isSubmitting };\n};\n\nexport default useOnValidSubmit;\n","import { useForeldrepengesøknadContext } from 'app/context/hooks/useForeldrepengesøknadContext';\nimport { Søkerinfo } from 'app/types/Søkerinfo';\n\nconst useSøkerinfo = (): Søkerinfo => {\n    const { state } = useForeldrepengesøknadContext();\n    return state.søkerinfo;\n};\n\nexport default useSøkerinfo;\n","import { intlUtils, Kjønn } from '@navikt/fp-common';\nimport AnnenForelder, { isAnnenForelderOppgitt } from 'app/context/types/AnnenForelder';\nimport { NavnPåForeldre } from 'app/types/NavnPåForeldre';\nimport Person from 'app/types/Person';\nimport { Søkerrolle } from 'app/types/Søkerrolle';\nimport dayjs from 'dayjs';\nimport { IntlShape } from 'react-intl';\n\nexport const formaterNavn = (fornavn: string, etternavn: string, visEtternavn: boolean, mellomnavn?: string) => {\n    if (visEtternavn) {\n        return mellomnavn ? `${fornavn} ${mellomnavn} ${etternavn}` : `${fornavn} ${etternavn}`;\n    }\n    return mellomnavn ? `${fornavn} ${mellomnavn}` : `${fornavn}`;\n};\n\nconst navnSlutterPåSLyd = (navn: string): boolean => {\n    const sisteBokstav = navn.charAt(navn.length - 1).toLowerCase();\n    return sisteBokstav === 's' || sisteBokstav === 'x' || sisteBokstav === 'z';\n};\n\nexport const getNavnGenitivEierform = (navn: string, locale: string): string => {\n    if (locale !== 'nb') {\n        return navn;\n    }\n    if (navnSlutterPåSLyd(navn)) {\n        return `${navn}'`;\n    }\n    return `${navn}s`;\n};\n\nexport const getKjønnFromFnr = (annenForelder: AnnenForelder): Kjønn | undefined => {\n    if (isAnnenForelderOppgitt(annenForelder)) {\n        const { fnr } = annenForelder;\n\n        if (fnr === undefined || fnr.length !== 11) {\n            return undefined;\n        }\n        return parseInt(fnr.charAt(8), 10) % 2 === 0 ? 'K' : 'M';\n    }\n\n    return undefined;\n};\n\nexport const getKjønnFromFnrString = (fnr: string): Kjønn | undefined => {\n    if (fnr.length !== 11) {\n        return undefined;\n    }\n    return parseInt(fnr.charAt(8), 10) % 2 === 0 ? 'K' : 'M';\n};\n\nexport const getMorErAleneOmOmsorg = (\n    søkerErMor: boolean,\n    søkerErAleneOmOmsorg: boolean,\n    annenForelder: AnnenForelder\n) => {\n    return søkerErMor && (søkerErAleneOmOmsorg || annenForelder.kanIkkeOppgis === true);\n};\n\nexport const getMorHarRettPåForeldrepengerINorgeEllerEØS = (\n    rolle: Søkerrolle,\n    søkerErFarEllerMedmor: boolean,\n    annenForelder: AnnenForelder\n) => {\n    if (søkerErFarEllerMedmor === true && isAnnenForelderOppgitt(annenForelder)) {\n        return (\n            annenForelder.harRettPåForeldrepengerINorge === true || annenForelder.harRettPåForeldrepengerIEØS === true\n        );\n    }\n    return rolle === 'mor';\n};\n\nexport const getMorHarRettPåForeldrepengerIEØS = (\n    rolle: Søkerrolle,\n    søkerErFarEllerMedmor: boolean,\n    annenForelder: AnnenForelder\n) => {\n    if (søkerErFarEllerMedmor === true && isAnnenForelderOppgitt(annenForelder)) {\n        return annenForelder.harRettPåForeldrepengerINorge === true;\n    }\n    return rolle === 'mor';\n};\n\nexport const getFarMedmorErAleneOmOmsorg = (\n    søkerErFarMedmor: boolean,\n    søkerErAleneOmOmsorg: boolean,\n    annenForelder: AnnenForelder\n) => {\n    return søkerErFarMedmor && (søkerErAleneOmOmsorg || annenForelder.kanIkkeOppgis === true);\n};\n\nexport const getNavnPåForeldre = (\n    person: Person,\n    annenForelder: AnnenForelder,\n    erFarEllerMedmor: boolean,\n    intl: IntlShape\n): NavnPåForeldre => {\n    const navnSøker = person.fornavn;\n    const navnAnnenForelder =\n        isAnnenForelderOppgitt(annenForelder) && annenForelder.fornavn !== undefined && annenForelder.fornavn !== ''\n            ? annenForelder.fornavn\n            : intlUtils(intl, 'annen.forelder');\n    const navnMor = erFarEllerMedmor ? navnAnnenForelder : navnSøker;\n    const navnFarMedmor = erFarEllerMedmor ? navnSøker : navnAnnenForelder;\n\n    return {\n        mor: navnMor,\n        farMedmor: navnFarMedmor,\n    };\n};\n\nexport const getErSøkerFarEllerMedmor = (søkerRolle: Søkerrolle): boolean =>\n    søkerRolle === 'far' || søkerRolle === 'medmor';\n\nexport const erEldreEnn3ÅrOg3Måneder = (fødselsdato: Date) => {\n    return dayjs(fødselsdato).add(3, 'year').add(3, 'month').isBefore(dayjs(), 'day');\n};\n"],"names":["adoptere","rettOgPlikt","fleksibeltuttak","papirsøknad","viktigeFrister","nav_aktivitetskrav","brukerstøtte","innsyn","morsAktivitetskrav","frilanserInfoBoks","næringsdrivendeInfoBoks","brukerprofil","familie","graderingInfo","aktivitetsfriUttakInfo","hvordanSendeInntektsmelding","omLottOgHyre","SøknadStatusEtikett","_ref","sakErFerdigbehandlet","intl","useIntl","etikettType","statusTekst","React","EtikettBase","className","type","intlUtils","SelectableBarnType","SelectableBarnOptions","getRadioForNyttBarn","label","value","SØKNAD_GJELDER_NYTT_BARN","getSakstatus","getRadioForUfødtBarn","barn","tittel","getTittelForUfødtBarn","antallBarn","termindato","barnTekst","getTekstForAntallBarn","antallBarnTekst","termin","formatDate","saksStatus","undefined","sak","åpenBehandling","saksnummerTekst","saksnummer","harSak","id","getCheckboxForBarn","FØDT","ADOPTERT","IKKE_UTFYLT","getRadioForFødtEllerAdoptertBarn","navnTekstEllerBarnMedUkjentNavnTekst","formaterNavnPåBarn","fornavn","fødselsdatoer","omsorgsovertagelse","alleBarnaLever","fødselsdatoerTekst","formaterFødselsdatoerPåBarn","fødtAdoptertDatoTekst","situasjonTekst","name","VelkommenFormField","UFØDT","BarnVelger","props","Block","visible","visibility","isVisible","padBottom","Normaltekst","VelkommenFormComponents","validate","validateHarValgtEtBarn","radios","selectableBarn","map","barnet","concat","validateHarForståttRettigheterOgPlikter","getInitialVelkommenValues","harForståttRettigheterOgPlikter","_defineProperty","valgteBarn","VelkommenFormConfig","_VelkommenFormConfig","isIncluded","_ref2","length","isAnswered","_ref3","visibilityFilter","_ref4","_ref5","_ref6","getTypedFormComponents","velkommenFormQuestions","Questions","getErDatoInnenEnDagFraAnnenDato","dato1","dato2","dayjs","isSameOrAfter","subtract","isSameOrBefore","add","getSelectableBarnFraSak","registrerteBarn","barnFnrFraSaken","b","fnr","flat","fødselsdatoFraSak","ISOStringToDate","familiehendelse","fødselsdato","pdlBarnMedSammeFnr","filter","includes","pdlBarnMedSammeFødselsdato","find","pdlBarn","familiehendelseDato","getRelevantFamiliehendelseDato","omsorgsovertakelse","barnType","getSelectableBarnType","gjelderAdopsjon","guid","kanSøkeOmEndring","Array","fill","familiehendelsesdato","sortableDato","startdatoFørsteStønadsperiode","gjeldendeVedtak","perioder","Uttaksdagen","fom","denneEllerNeste","trim","mellomnavn","join","every","getLeverBarnet","getSelectableBarnOptionsFraPDL","barnFraSaker","avsluttedeSaker","registrerteBarnUtenAvsluttedeSaker","regBarn","registrerteBarnMedFnr","_objectSpread","toString","fnrPåBarnSomErLagtTil","fødselsdatoPåBarnFraSaker","selectableBarnFraPDL","dødsdato","dato","isSame","forEach","erEldreEnn3ÅrOg3Måneder","barnFødtISammePeriode","getAndreBarnFødtSammenMedBarnet","annenForelder","etternavn","push","getDødeBarnetForMerEnn3MånederSiden","_selectableBarn","getSelectableBarnFraPDL","registrertBarn","navn","selectableFlerlinger","getSelectableFlerlingerFraPDL","alleBarna","sort","sorterRegistrerteBarnEtterEldstOgNavn","nr","startsWith","getSelectableBarnOptions","saker","åpneSaker","sakAvsluttet","getSelectableBarnOptionsFromSaker","sakMedBarn","barnFraPDL","getBarnFraNesteSak","_nesteBarn$sak","_nesteBarn$sak$annenP","allePåfølgendeBarn","isAfter","sorterSelectableBarnEtterYngst","nesteBarn","annenForelderFnr","annenPart","b1","b2","isBefore","useOnValidSubmit","submitHandler","nextRoute","postSubmit","_useForeldrepengesøkn","useForeldrepengesøknadContext","dispatch","state","navigate","useNavigate","_useState2","_slicedToArray","useState","harSubmitted","setSubmitted","_useState4","isSubmitting","setIsSubmitting","_useState6","submitError","setSubmitError","useEffect","then","SøknadRoutes","currentRoute","error","response","status","redirectToLogin","sendErrorMessageToSentry","Error","handleSubmit","values","actions","dispatchRouteChange","actionCreator","Promise","all","_toConsumableArray","a","useSøkerinfo","søkerinfo","formaterNavn","visEtternavn","getNavnGenitivEierform","locale","navnSlutterPåSLyd","sisteBokstav","charAt","toLowerCase","getKjønnFromFnr","isAnnenForelderOppgitt","parseInt","getKjønnFromFnrString","getMorErAleneOmOmsorg","søkerErMor","søkerErAleneOmOmsorg","kanIkkeOppgis","getMorHarRettPåForeldrepengerINorgeEllerEØS","rolle","søkerErFarEllerMedmor","harRettPåForeldrepengerINorge","harRettPåForeldrepengerIEØS","getFarMedmorErAleneOmOmsorg","søkerErFarMedmor","getNavnPåForeldre","person","erFarEllerMedmor","navnSøker","navnAnnenForelder","mor","farMedmor","getErSøkerFarEllerMedmor","søkerRolle"],"sourceRoot":""}