{"version":3,"file":"943.72a1f452.iframe.bundle.js","mappings":"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","sources":["webpack://engangsstonad/./src/app/steps/om-barnet/omBarnetQuestionsConfig.ts","webpack://engangsstonad/./src/app/steps/om-barnet/situasjon/Født.tsx","webpack://engangsstonad/./src/app/steps/om-barnet/omBarnetValidering.ts","webpack://engangsstonad/./src/common/storage/attachment/types/Attachment.ts","webpack://engangsstonad/./src/common/storage/api/attachmentApi.ts","webpack://engangsstonad/./src/app/components/formik-file-uploader/FormikFileUploader.tsx","webpack://engangsstonad/./src/app/steps/om-barnet/situasjon/Termin.tsx","webpack://engangsstonad/./src/app/steps/om-barnet/situasjon/Adopsjon.tsx","webpack://engangsstonad/./src/app/steps/om-barnet/OmBarnet.tsx","webpack://engangsstonad/./src/app/steps/om-barnet/omBarnetUtils.ts","webpack://engangsstonad/./src/app/types/PageKeys.ts","webpack://engangsstonad/./src/common/components/slett-knapp/SlettKnapp.tsx","webpack://engangsstonad/./src/common/storage/attachment/components/Attachment.tsx","webpack://engangsstonad/./src/common/util/filesize.ts","webpack://engangsstonad/./src/common/storage/attachment/components/AttachmentList.tsx","webpack://engangsstonad/./src/common/util/guid.ts","webpack://engangsstonad/./src/common/storage/attachment/components/util.ts"],"sourcesContent":["import { hasValue } from '@navikt/fp-common';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { QuestionConfig, Questions } from '@navikt/sif-common-question-config/lib';\nimport { OmBarnetFormData, OmBarnetFormField } from './omBarnetFormConfig';\n\nexport interface OmBarnetQuestionPayload extends OmBarnetFormData {\n    situasjon: string;\n    kjønn: string;\n}\n\nconst OmBarnetFormConfig: QuestionConfig<OmBarnetQuestionPayload, OmBarnetFormField> = {\n    [OmBarnetFormField.adopsjonAvEktefellesBarn]: {\n        isIncluded: ({ situasjon }) => situasjon === 'adopsjon',\n        isAnswered: ({ adopsjonAvEktefellesBarn }) => adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED,\n        visibilityFilter: ({ situasjon }) => situasjon === 'adopsjon',\n    },\n    [OmBarnetFormField.erBarnetFødt]: {\n        isIncluded: ({ situasjon }) => situasjon === 'fødsel',\n        isAnswered: ({ erBarnetFødt }) => erBarnetFødt !== YesOrNo.UNANSWERED,\n        visibilityFilter: ({ situasjon }) => situasjon === 'fødsel',\n    },\n    [OmBarnetFormField.antallBarn]: {\n        isIncluded: () => true,\n        isAnswered: ({ antallBarn }) => hasValue(antallBarn),\n        visibilityFilter: ({ adopsjonAvEktefellesBarn, erBarnetFødt, adopsjonsdato }) =>\n            erBarnetFødt !== YesOrNo.UNANSWERED ||\n            (adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED && hasValue(adopsjonsdato)),\n    },\n    [OmBarnetFormField.adopsjonsdato]: {\n        isIncluded: ({ adopsjonAvEktefellesBarn }) => adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED,\n        isAnswered: ({ adopsjonsdato }) => hasValue(adopsjonsdato),\n        visibilityFilter: ({ adopsjonAvEktefellesBarn }) => adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED,\n    },\n    [OmBarnetFormField.søkerAdopsjonAlene]: {\n        isIncluded: ({ situasjon, kjønn, adopsjonAvEktefellesBarn }) =>\n            situasjon === 'adopsjon' && kjønn === 'M' && adopsjonAvEktefellesBarn === YesOrNo.NO,\n        isAnswered: ({ søkerAdopsjonAlene }) => søkerAdopsjonAlene !== YesOrNo.UNANSWERED,\n        visibilityFilter: ({ adopsjonAvEktefellesBarn, fødselsdatoer }) =>\n            adopsjonAvEktefellesBarn === YesOrNo.NO && fødselsdatoer?.length > 0 && fødselsdatoer[0] !== '',\n    },\n    [OmBarnetFormField.fødselsdatoer]: {\n        isIncluded: ({ erBarnetFødt, adopsjonAvEktefellesBarn }) =>\n            erBarnetFødt === YesOrNo.YES || adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED,\n        isAnswered: ({ fødselsdatoer }) => fødselsdatoer?.length > 0 && fødselsdatoer[0] !== '',\n        visibilityFilter: ({ antallBarn }) => hasValue(antallBarn),\n    },\n    [OmBarnetFormField.omsorgsovertakelse]: {\n        isIncluded: ({ adopsjonAvEktefellesBarn }) => adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED,\n        isAnswered: ({ omsorgsovertakelse }) => omsorgsovertakelse?.length > 0,\n        visibilityFilter: ({ adopsjonAvEktefellesBarn, fødselsdatoer, søkerAdopsjonAlene, kjønn }) =>\n            (adopsjonAvEktefellesBarn === YesOrNo.YES && fødselsdatoer?.length > 0 && fødselsdatoer[0] !== '') ||\n            (adopsjonAvEktefellesBarn === YesOrNo.NO && søkerAdopsjonAlene !== YesOrNo.UNANSWERED) ||\n            (kjønn === 'K' && fødselsdatoer?.length > 0 && fødselsdatoer[0] !== ''),\n    },\n    [OmBarnetFormField.termindato]: {\n        isIncluded: ({ erBarnetFødt }) => erBarnetFødt === YesOrNo.NO,\n        isAnswered: ({ termindato }) => hasValue(termindato),\n        visibilityFilter: ({ antallBarn }) => hasValue(antallBarn),\n    },\n    [OmBarnetFormField.terminbekreftelse]: {\n        isIncluded: ({ erBarnetFødt }) => erBarnetFødt === YesOrNo.NO,\n        isAnswered: ({ terminbekreftelse }) => terminbekreftelse?.length > 0,\n        visibilityFilter: ({ termindato }) => hasValue(termindato),\n    },\n    [OmBarnetFormField.terminbekreftelsedato]: {\n        isIncluded: ({ erBarnetFødt }) => erBarnetFødt === YesOrNo.NO,\n        isAnswered: ({ terminbekreftelsedato }) => hasValue(terminbekreftelsedato),\n        visibilityFilter: ({ terminbekreftelse }) => terminbekreftelse?.length > 0,\n    },\n};\n\nconst omBarnetQuestionsConfig = Questions<OmBarnetQuestionPayload, OmBarnetFormField>(OmBarnetFormConfig);\n\nexport default omBarnetQuestionsConfig;\n","import { Block, intlUtils } from '@navikt/fp-common';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport getMessage from 'common/util/i18nUtils';\nimport dayjs from 'dayjs';\nimport { FieldArray } from 'formik';\nimport React from 'react';\nimport { useIntl } from 'react-intl';\nimport { OmBarnetFormComponents, OmBarnetFormData, OmBarnetFormField } from '../omBarnetFormConfig';\nimport { validateFødselDate } from '../omBarnetValidering';\n\ninterface Fødtprops {\n    formValues: OmBarnetFormData;\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>;\n}\n\nconst Født: React.FunctionComponent<Fødtprops> = ({ visibility, formValues }) => {\n    const intl = useIntl();\n\n    if (formValues.erBarnetFødt === YesOrNo.NO || formValues.erBarnetFødt === YesOrNo.UNANSWERED) {\n        return null;\n    }\n    return (\n        <>\n            {visibility.isVisible(OmBarnetFormField.antallBarn) && (\n                <>\n                    <Block margin=\"xl\">\n                        <OmBarnetFormComponents.RadioGroup\n                            name={OmBarnetFormField.antallBarn}\n                            radios={[\n                                {\n                                    label: intlUtils(intl, 'omBarnet.radiobutton.ettbarn'),\n                                    value: '1',\n                                },\n                                {\n                                    label: intlUtils(intl, 'omBarnet.radiobutton.tvillinger'),\n                                    value: '2',\n                                },\n                                {\n                                    label: intlUtils(intl, 'omBarnet.radiobutton.flere'),\n                                    value: '3',\n                                },\n                            ]}\n                            legend={getMessage(intl, 'omBarnet.text.antallBarn.født')}\n                        />\n                    </Block>\n                    {formValues.antallBarn && parseInt(formValues.antallBarn, 10) >= 3 && (\n                        <Block margin=\"xl\">\n                            <OmBarnetFormComponents.Select\n                                name={OmBarnetFormField.antallBarn}\n                                label={getMessage(intl, 'omBarnet.text.antallBarn.født')}\n                            >\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                                <option value=\"5\">5</option>\n                                <option value=\"6\">6</option>\n                                <option value=\"7\">7</option>\n                                <option value=\"8\">8</option>\n                                <option value=\"9\">9</option>\n                            </OmBarnetFormComponents.Select>\n                        </Block>\n                    )}\n                </>\n            )}\n            {visibility.isVisible(OmBarnetFormField.fødselsdatoer) && (\n                <Block margin=\"xl\">\n                    <FieldArray\n                        name={OmBarnetFormField.fødselsdatoer}\n                        render={() => [\n                            <OmBarnetFormComponents.DatePicker\n                                key={`${OmBarnetFormField.fødselsdatoer}.0`}\n                                name={`${OmBarnetFormField.fødselsdatoer}.0` as OmBarnetFormField}\n                                label={getMessage(intl, 'søknad.fødselsdato')}\n                                minDate={dayjs().subtract(6, 'month').toDate()}\n                                maxDate={dayjs().toDate()}\n                                validate={(value) => validateFødselDate(value, intl)}\n                                placeholder={'dd.mm.åååå'}\n                            />,\n                        ]}\n                    />\n                </Block>\n            )}\n        </>\n    );\n};\nexport default Født;\n","import {\n    erMindreEnn3UkerSiden,\n    etterDagensDato,\n    hasValue,\n    sisteDatoBarnetKanVæreFødt,\n    sisteMuligeTermindato,\n    utstedtDatoErIUke22,\n    sisteMuligeDatoForOvertaOmsorg,\n    intlUtils,\n} from '@navikt/fp-common';\nimport datepickerUtils from '@navikt/sif-common-formik-ds/lib/components/formik-datepicker/datepickerUtils';\nimport { IntlShape } from 'react-intl';\n\nexport const validateEktefellensBarnAdopsjonDate = (dato: string, intl: IntlShape) => {\n    if (!hasValue(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.adopsjonDato.ektefellensBarn.duMåOppgi');\n    }\n\n    if (!datepickerUtils.isValidFormattedDateString(dato)) {\n        return intlUtils(intl, 'invalidFormatErrorKey.adopsjonsdato');\n    }\n\n    if (sisteMuligeDatoForOvertaOmsorg(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.adopsjonDato.forLangtFremITid');\n    }\n\n    return undefined;\n};\n\nexport const validateOvertaOmsorgAdopsjonDate = (dato: string, intl: IntlShape) => {\n    if (!hasValue(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.adopsjonDato.overtaOmsorg.duMåOppgi');\n    }\n    if (sisteMuligeDatoForOvertaOmsorg(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.adopsjonDato.forLangtFremITid');\n    }\n    return undefined;\n};\n\nexport const validateNårKommerBarnetDate = (dato: string, intl: IntlShape) => {\n    if (!hasValue(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.nårKommerBarnetDato.duMåOppgi');\n    }\n    return undefined;\n};\n\nexport const validateFødselDate = (dato: string, intl: IntlShape) => {\n    if (!hasValue(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fodselsdato.duMåOppgi');\n    }\n    if (etterDagensDato(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fodselsdato.måVæreIdagEllerTidligere');\n    }\n    if (sisteDatoBarnetKanVæreFødt(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fodselsdato.ikkeMerEnn6MånederTilbake');\n    }\n    return undefined;\n};\n\nexport const validateAdopsjonFødselDate = (\n    dato: string | undefined,\n    adopsjonsdato: string | undefined,\n    intl: IntlShape\n) => {\n    if (!hasValue(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fodselsdato.duMåOppgi');\n    }\n\n    if (!datepickerUtils.isValidFormattedDateString(dato)) {\n        return intlUtils(intl, 'invalidFormatErrorKey.fødselsdato');\n    }\n\n    if (!dato || !adopsjonsdato) {\n        return undefined;\n    }\n    if (etterDagensDato(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fodselsdato.måVæreIdagEllerTidligere');\n    }\n    // if (!barnetErMerEnn15årPåSøknadsDato(dato, adopsjonsdato)) {\n    //     if (sisteDatoAdoptertBarnKanVæreFødt(dato, adopsjonsdato)) {\n    //         return intlUtils(intl, 'valideringsfeil.omBarnet.fodselsdato.ikkeMerEnn15ÅrTilbake');\n    //     }\n    //     if (barnetErIkkeFødtFørAdopsjonsDato(dato, adopsjonsdato)) {\n    //         return intlUtils(intl, 'valideringsfeil.omBarnet.fødselsdato.barnetErIkkeFødtFørAdopsjonsDato');\n    //     }\n    //     return undefined;\n    // }\n    return undefined;\n};\n\nexport const validateTerminDate = (dato: string, intl: IntlShape) => {\n    if (!hasValue(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.duMåOppgi');\n    }\n    if (!datepickerUtils.isValidFormattedDateString(dato)) {\n        return intlUtils(intl, 'invalidFormatErrorKey.termindato');\n    }\n    if (!erMindreEnn3UkerSiden(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.termindatoKanIkkeVære3UkerFraIdag');\n    }\n    if (sisteMuligeTermindato(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.duMåVæreIUke22');\n    }\n    return undefined;\n};\n\nexport const valideringAvTerminbekreftelsesdato = (\n    dato: string | undefined,\n    termindato: string | undefined,\n    intl: IntlShape\n) => {\n    if (!hasValue(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.terminbekreftelseDato.duMåOppgi');\n    }\n    if (!dato || !termindato) {\n        return undefined;\n    }\n\n    if (!datepickerUtils.isValidFormattedDateString(dato)) {\n        return intlUtils(intl, 'invalidFormatErrorKey.terminBekreftelsedato');\n    }\n\n    if (etterDagensDato(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.terminbekreftelseDato.måVæreIdagEllerTidligere');\n    }\n    if (!utstedtDatoErIUke22(dato, termindato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.terminbekreftelseDato.duMåVæreIUke22');\n    }\n    return undefined;\n};\n","export interface Attachment {\n    id: string;\n    filename: string;\n    filesize: number;\n    file: File;\n    url?: string;\n    uuid?: string;\n    pending: boolean;\n    uploaded: boolean;\n    type: AttachmentType;\n    skjemanummer: Skjemanummer;\n    error?: any;\n}\n\nexport enum AttachmentType {\n    TERMINBEKREFTELSE = 'terminbekreftelse',\n    OMSORGSOVERTAKELSE = 'omsorgsovertakelse',\n}\n\nexport enum Skjemanummer {\n    TERMINBEKREFTELSE = 'I000062',\n    OMSORGSOVERTAKELSE = 'I000042',\n}\n","import { Attachment } from '../attachment/types/Attachment';\nimport axios from 'axios';\n\nfunction saveAttachment(attachment: Attachment) {\n    const config = {\n        withCredentials: true,\n        timeout: 45 * 1000,\n        headers: {\n            'content-type': 'multipart/form-data',\n        },\n    };\n\n    const formData = new FormData();\n    formData.append('id', attachment.id);\n    formData.append('vedlegg', attachment.file, attachment.filename);\n\n    const url = `${(window as any).REST_API_URL}/storage/vedlegg`;\n    return axios.post(url, formData, config);\n}\n\nconst AttachmentApi = { saveAttachment };\n\nexport default AttachmentApi;\n","import * as React from 'react';\nimport { ArrayHelpers, useFormikContext } from 'formik';\nimport { Attachment, AttachmentType, Skjemanummer } from 'common/storage/attachment/types/Attachment';\nimport FormikFileInput from '@navikt/sif-common-formik-ds/lib/components/formik-file-input/FormikFileInput';\nimport { OmBarnetFormData, OmBarnetFormField } from 'app/steps/om-barnet/omBarnetFormConfig';\nimport { isAttachmentWithError, mapFileToAttachment } from 'common/storage/attachment/components/util';\nimport AttachmentApi from 'common/storage/api/attachmentApi';\nimport AttachmentList from 'common/storage/attachment/components/AttachmentList';\nimport { Block } from '@navikt/fp-common';\n\nexport type FieldArrayReplaceFn = (index: number, value: any) => void;\nexport type FieldArrayPushFn = (obj: any) => void;\nexport type FieldArrayRemoveFn = (index: number) => undefined;\n\ninterface Props {\n    attachments: Attachment[];\n    name: OmBarnetFormField;\n    label: string;\n    legend: string;\n    description?: string;\n    validate?: any;\n    onFileInputClick?: () => void;\n}\n\nconst VALID_EXTENSIONS = ['.pdf', '.jpeg', '.jpg', '.png'];\n\nconst getAttachmentFromFile = (file: File, name: string): Attachment => {\n    if (name === OmBarnetFormField.terminbekreftelse) {\n        return mapFileToAttachment(file, AttachmentType.TERMINBEKREFTELSE, Skjemanummer.TERMINBEKREFTELSE);\n    }\n    return mapFileToAttachment(file, AttachmentType.OMSORGSOVERTAKELSE, Skjemanummer.OMSORGSOVERTAKELSE);\n};\n\nconst getPendingAttachmentFromFile = (file: File, name: string): Attachment => {\n    const newAttachment = getAttachmentFromFile(file, name);\n    newAttachment.pending = true;\n    return newAttachment;\n};\n\nconst attachmentUploadHasFailed = ({ pending, uploaded, file: { name } }: Attachment): boolean =>\n    (!pending && !uploaded) || !fileExtensionIsValid(name);\n\nconst fileExtensionIsValid = (filename: string): boolean => {\n    const ext = filename.split('.').pop();\n    return VALID_EXTENSIONS.includes(`.${ext!.toLowerCase()}`);\n};\n\nlet removeFn: FieldArrayRemoveFn;\n\nconst FormikFileUploader: React.FunctionComponent<Props> = ({\n    attachments,\n    name,\n    onFileInputClick,\n    label,\n    legend,\n    description,\n    ...otherProps\n}) => {\n    const { values } = useFormikContext<OmBarnetFormData>();\n\n    async function uploadAttachment(attachment: Attachment) {\n        try {\n            const response = await AttachmentApi.saveAttachment(attachment);\n            attachment = setAttachmentPendingToFalse(attachment);\n            attachment.url = response.headers.location;\n            attachment.uploaded = true;\n            attachment.uuid = response.data;\n        } catch (error) {\n            setAttachmentPendingToFalse(attachment);\n        }\n    }\n\n    async function uploadAttachments(allAttachments: Attachment[], replaceFn: FieldArrayReplaceFn) {\n        for (const attachment of allAttachments) {\n            await uploadAttachment(attachment);\n            updateAttachmentListElement(allAttachments, attachment, replaceFn);\n        }\n\n        const failedAttachments = [...allAttachments.filter(attachmentUploadHasFailed)];\n        updateFailedAttachments(allAttachments, failedAttachments, replaceFn);\n    }\n\n    function updateFailedAttachments(\n        allAttachments: Attachment[],\n        failedAttachments: Attachment[],\n        replaceFn: FieldArrayReplaceFn\n    ) {\n        failedAttachments.forEach((attachment) => {\n            attachment = setAttachmentPendingToFalse(attachment);\n            updateAttachmentListElement(allAttachments, attachment, replaceFn);\n        });\n    }\n\n    function updateAttachmentListElement(atts: Attachment[], attachment: Attachment, replaceFn: FieldArrayReplaceFn) {\n        replaceFn(atts.indexOf(attachment), attachment);\n    }\n\n    function setAttachmentPendingToFalse(attachment: Attachment) {\n        attachment.pending = false;\n        return attachment;\n    }\n\n    function addPendingAttachmentToFieldArray(file: File, pushFn: FieldArrayPushFn) {\n        const attachment = getPendingAttachmentFromFile(file, name);\n        pushFn(attachment);\n        return attachment;\n    }\n\n    return (\n        <>\n            <FormikFileInput\n                name={name}\n                accept={VALID_EXTENSIONS.join(', ')}\n                onFilesSelect={async (files: File[], { push, replace, remove }: ArrayHelpers) => {\n                    removeFn = remove;\n                    const atts = files.map((file) => addPendingAttachmentToFieldArray(file, push));\n                    await uploadAttachments([...(values as any)[name], ...atts], replace);\n                }}\n                onClick={onFileInputClick}\n                legend={legend}\n                buttonLabel={label}\n                description={description}\n                {...otherProps}\n            />\n            <Block margin=\"xl\">\n                <AttachmentList\n                    attachments={attachments.filter((a) => !isAttachmentWithError(a))}\n                    showFileSize={true}\n                    onDelete={(file: Attachment) => {\n                        removeFn(attachments.indexOf(file));\n                    }}\n                />\n            </Block>\n        </>\n    );\n};\n\nexport default FormikFileUploader;\n","import { Block, intlUtils, PictureScanningGuide, UtvidetInformasjon } from '@navikt/fp-common';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport FormikFileUploader from 'app/components/formik-file-uploader/FormikFileUploader';\nimport getMessage from 'common/util/i18nUtils';\nimport dayjs from 'dayjs';\nimport React from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { OmBarnetFormComponents, OmBarnetFormData, OmBarnetFormField } from '../omBarnetFormConfig';\nimport { validateTerminDate, valideringAvTerminbekreftelsesdato } from '../omBarnetValidering';\n\ninterface Fødtprops {\n    formValues: OmBarnetFormData;\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>;\n}\n\nconst Termin: React.FunctionComponent<Fødtprops> = ({ visibility, formValues }) => {\n    const intl = useIntl();\n\n    if (formValues.erBarnetFødt === YesOrNo.YES || formValues.erBarnetFødt === YesOrNo.UNANSWERED) {\n        return null;\n    }\n    return (\n        <>\n            {visibility.isVisible(OmBarnetFormField.antallBarn) && (\n                <>\n                    <Block margin=\"xl\">\n                        <OmBarnetFormComponents.RadioGroup\n                            name={OmBarnetFormField.antallBarn}\n                            radios={[\n                                {\n                                    label: intlUtils(intl, 'omBarnet.radiobutton.ettbarn'),\n                                    value: '1',\n                                },\n                                {\n                                    label: intlUtils(intl, 'omBarnet.radiobutton.tvillinger'),\n                                    value: '2',\n                                },\n                                {\n                                    label: intlUtils(intl, 'omBarnet.radiobutton.flere'),\n                                    value: '3',\n                                },\n                            ]}\n                            legend={getMessage(intl, 'omBarnet.text.antallBarn.termin')}\n                        />\n                    </Block>\n                    {formValues.antallBarn && parseInt(formValues.antallBarn, 10) >= 3 && (\n                        <Block margin=\"xl\">\n                            <OmBarnetFormComponents.Select name={OmBarnetFormField.antallBarn} label=\"test\">\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                                <option value=\"5\">5</option>\n                                <option value=\"6\">6</option>\n                                <option value=\"7\">7</option>\n                                <option value=\"8\">8</option>\n                                <option value=\"9\">9</option>\n                            </OmBarnetFormComponents.Select>\n                        </Block>\n                    )}\n                </>\n            )}\n            {visibility.isVisible(OmBarnetFormField.termindato) && (\n                <Block margin=\"xl\">\n                    <OmBarnetFormComponents.DatePicker\n                        name={OmBarnetFormField.termindato}\n                        label={getMessage(intl, 'søknad.termindato')}\n                        minDate={dayjs().subtract(3, 'week').toDate()}\n                        maxDate={dayjs().add(18, 'weeks').add(3, 'days').toDate()}\n                        validate={(value) => validateTerminDate(value, intl)}\n                        placeholder={'dd.mm.åååå'}\n                    />\n                </Block>\n            )}\n            {visibility.isVisible(OmBarnetFormField.terminbekreftelse) && (\n                <>\n                    <Block margin=\"xl\">\n                        <FormikFileUploader\n                            attachments={formValues.terminbekreftelse || []}\n                            label={getMessage(intl, 'vedlegg.lastoppknapp.label')}\n                            legend={getMessage(intl, 'vedlegg.terminbekreftelse')}\n                            description={getMessage(intl, 'terminbekreftelsen.text.terminbekreftelsen')}\n                            name={OmBarnetFormField.terminbekreftelse}\n                        />\n                        <UtvidetInformasjon apneLabel={<FormattedMessage id=\"psg.åpneLabel\" />}>\n                            <PictureScanningGuide backgroundColor=\"white\" />\n                        </UtvidetInformasjon>\n                    </Block>\n                </>\n            )}\n            {visibility.isVisible(OmBarnetFormField.terminbekreftelsedato) && (\n                <Block margin=\"xl\">\n                    <OmBarnetFormComponents.DatePicker\n                        name={OmBarnetFormField.terminbekreftelsedato}\n                        label={getMessage(intl, 'søknad.terminbekreftelsesdato')}\n                        minDate={dayjs(formValues.termindato).subtract(18, 'week').subtract(3, 'day').toDate()}\n                        maxDate={dayjs().toDate()}\n                        validate={(terminBekreftelseDato) =>\n                            valideringAvTerminbekreftelsesdato(terminBekreftelseDato, formValues.termindato, intl)\n                        }\n                    />\n                </Block>\n            )}\n        </>\n    );\n};\nexport default Termin;\n","import { Block, intlUtils, PictureScanningGuide, UtvidetInformasjon } from '@navikt/fp-common';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport FormikFileUploader from 'app/components/formik-file-uploader/FormikFileUploader';\nimport { Kjønn } from 'app/types/domain/Person';\nimport getMessage from 'common/util/i18nUtils';\nimport dayjs from 'dayjs';\nimport { FieldArray } from 'formik';\nimport React from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { OmBarnetFormComponents, OmBarnetFormData, OmBarnetFormField } from '../omBarnetFormConfig';\nimport {\n    validateAdopsjonFødselDate,\n    validateEktefellensBarnAdopsjonDate,\n    validateOvertaOmsorgAdopsjonDate,\n} from '../omBarnetValidering';\n\ninterface Fødtprops {\n    formValues: OmBarnetFormData;\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>;\n    kjønn: Kjønn;\n}\n\nconst Adopsjon: React.FunctionComponent<Fødtprops> = ({ visibility, formValues }) => {\n    const intl = useIntl();\n\n    if (formValues.adopsjonAvEktefellesBarn === YesOrNo.UNANSWERED) {\n        return null;\n    }\n\n    return (\n        <>\n            {visibility.isVisible(OmBarnetFormField.adopsjonsdato) && (\n                <Block margin=\"xl\">\n                    <OmBarnetFormComponents.DatePicker\n                        name={OmBarnetFormField.adopsjonsdato}\n                        label={\n                            formValues.adopsjonAvEktefellesBarn === YesOrNo.YES\n                                ? getMessage(intl, 'omBarnet.adopsjon.spørsmål.stebarnsadopsjondato')\n                                : getMessage(intl, 'omBarnet.adopsjon.spørsmål.overtaomsorgdato')\n                        }\n                        minDate={dayjs().subtract(6, 'month').toDate()}\n                        validate={\n                            formValues.adopsjonAvEktefellesBarn === YesOrNo.YES\n                                ? (value) => validateEktefellensBarnAdopsjonDate(value, intl)\n                                : (value) => validateOvertaOmsorgAdopsjonDate(value, intl)\n                        }\n                        placeholder={'dd.mm.åååå'}\n                    />\n                </Block>\n            )}\n            {visibility.isVisible(OmBarnetFormField.antallBarn) && (\n                <>\n                    <Block margin=\"xl\">\n                        <OmBarnetFormComponents.RadioGroup\n                            name={OmBarnetFormField.antallBarn}\n                            radios={[\n                                {\n                                    label: intlUtils(intl, 'omBarnet.radiobutton.ettbarn'),\n                                    value: '1',\n                                },\n                                {\n                                    label: intlUtils(intl, 'omBarnet.radiobutton.toBarn'),\n                                    value: '2',\n                                },\n                                {\n                                    label: intlUtils(intl, 'omBarnet.radiobutton.flere'),\n                                    value: '3',\n                                },\n                            ]}\n                            legend={getMessage(intl, 'omBarnet.adopsjon.spørsmål.antallBarnAdoptert')}\n                        />\n                    </Block>\n\n                    {formValues.antallBarn && parseInt(formValues.antallBarn, 10) >= 3 && (\n                        <Block margin=\"xl\">\n                            <OmBarnetFormComponents.Select\n                                name={OmBarnetFormField.antallBarn}\n                                label={getMessage(intl, 'omBarnet.text.antallBarn.omsorgsovertakelse')}\n                            >\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                                <option value=\"5\">5</option>\n                                <option value=\"6\">6</option>\n                                <option value=\"7\">7</option>\n                                <option value=\"8\">8</option>\n                                <option value=\"9\">9</option>\n                            </OmBarnetFormComponents.Select>\n                        </Block>\n                    )}\n                </>\n            )}\n            {visibility.isVisible(OmBarnetFormField.fødselsdatoer) && (\n                <Block margin=\"xl\">\n                    <FieldArray\n                        name={OmBarnetFormField.fødselsdatoer}\n                        render={() =>\n                            [...Array(parseInt(formValues.antallBarn!, 10))].map((_, index) => {\n                                return (\n                                    <Block padBottom=\"l\" key={`${index}`}>\n                                        <OmBarnetFormComponents.DatePicker\n                                            name={`${OmBarnetFormField.fødselsdatoer}.${index}` as OmBarnetFormField}\n                                            label={\n                                                formValues.antallBarn === '1'\n                                                    ? getMessage(intl, 'søknad.fødselsdato')\n                                                    : getMessage(\n                                                          intl,\n                                                          `omBarnet.adopsjon.spørsmål.fødselsdato.${index + 1}`\n                                                      )\n                                            }\n                                            minDate={dayjs().subtract(15, 'year').toDate()}\n                                            maxDate={dayjs().toDate()}\n                                            validate={(fødselsDatoer) =>\n                                                validateAdopsjonFødselDate(\n                                                    fødselsDatoer,\n                                                    formValues.adopsjonsdato,\n                                                    intl\n                                                )\n                                            }\n                                            placeholder={'dd.mm.åååå'}\n                                        />\n                                    </Block>\n                                );\n                            })\n                        }\n                    />\n                </Block>\n            )}\n            {visibility.isVisible(OmBarnetFormField.søkerAdopsjonAlene) && (\n                <Block margin=\"xl\">\n                    <OmBarnetFormComponents.YesOrNoQuestion\n                        name={OmBarnetFormField.søkerAdopsjonAlene}\n                        legend={getMessage(intl, 'omBarnet.adopsjon.spørsmål.adoptererDuAlene')}\n                        labels={{\n                            no: getMessage(intl, 'omBarnet.adopsjon.text.nei'),\n                            yes: getMessage(intl, 'omBarnet.adopsjon.text.ja'),\n                        }}\n                    />\n                </Block>\n            )}\n            {visibility.isVisible(OmBarnetFormField.omsorgsovertakelse) && (\n                <>\n                    <Block margin=\"xl\">\n                        <FormikFileUploader\n                            attachments={formValues.omsorgsovertakelse || []}\n                            label={getMessage(intl, 'vedlegg.lastoppknapp.label')}\n                            legend={getMessage(intl, 'vedlegg.adopsjon')}\n                            name={OmBarnetFormField.omsorgsovertakelse}\n                            description={getMessage(intl, 'omBarnet.adopsjon.veilederpanel.adopsjon.text')}\n                        />\n                        <UtvidetInformasjon apneLabel={<FormattedMessage id=\"psg.åpneLabel\" />}>\n                            <PictureScanningGuide backgroundColor=\"white\" />\n                        </UtvidetInformasjon>\n                    </Block>\n                </>\n            )}\n        </>\n    );\n};\nexport default Adopsjon;\n","import { bemUtils, Block, intlUtils, Step, useDocumentTitle } from '@navikt/fp-common';\nimport React from 'react';\nimport { useIntl } from 'react-intl';\nimport { Button } from '@navikt/ds-react';\nimport {\n    OmBarnetFormComponents,\n    OmBarnetFormField,\n    OmBarnetFormData,\n    initialOmBarnetValues,\n} from './omBarnetFormConfig';\nimport omBarnetQuestionsConfig from './omBarnetQuestionsConfig';\nimport getMessage from 'common/util/i18nUtils';\nimport { useNavigate } from 'react-router-dom';\nimport { UnansweredQuestionsInfo, YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport actionCreator from 'app/context/action/actionCreator';\nimport stepConfig, { getPreviousStepHref } from 'app/step-config/stepConfig';\nimport { cleanupOmBarnet } from './omBarnetUtils';\nimport { useEngangsstønadContext } from 'app/context/hooks/useEngangsstønadContext';\nimport Født from './situasjon/Født';\nimport Termin from './situasjon/Termin';\n\nimport { onAvbrytSøknad } from 'app/util/globalUtil';\nimport { logAmplitudeEvent } from 'app/amplitude/amplitude';\nimport { PageKeys } from 'app/types/PageKeys';\nimport Adopsjon from './situasjon/Adopsjon';\nimport Person from 'app/types/domain/Person';\n\nimport './omBarnet.less';\n\ninterface Props {\n    person: Person;\n}\n\nconst shouldResetInitialValues = (\n    situasjon: string,\n    erBarnetFødt: YesOrNo,\n    adopsjonAvEktefellesBarn: YesOrNo\n): boolean => {\n    if (\n        (situasjon === 'adopsjon' && erBarnetFødt !== YesOrNo.UNANSWERED) ||\n        (situasjon === 'fødsel' && adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED)\n    ) {\n        return true;\n    }\n\n    return false;\n};\n\nconst OmBarnet: React.FunctionComponent<Props> = ({ person }) => {\n    const intl = useIntl();\n    const bem = bemUtils('omBarnet');\n    const navigate = useNavigate();\n    useDocumentTitle(intlUtils(intl, 'søknad.omBarnet'));\n    const { state, dispatch } = useEngangsstønadContext();\n    const søkersituasjonValues = state.søknad.søkersituasjon;\n    const { omBarnet } = state.søknad;\n    const { situasjon } = søkersituasjonValues;\n    const initialValues = shouldResetInitialValues(situasjon!, omBarnet.erBarnetFødt, omBarnet.adopsjonAvEktefellesBarn)\n        ? initialOmBarnetValues\n        : omBarnet;\n\n    logAmplitudeEvent('sidevisning', {\n        app: 'engangsstonadny',\n        team: 'foreldrepenger',\n        pageKey: PageKeys.OmBarnet,\n    });\n\n    const onValidSubmit = (values: Partial<OmBarnetFormData>) => {\n        dispatch(\n            actionCreator.setOmBarnet({\n                erBarnetFødt: values.erBarnetFødt!,\n                adopsjonAvEktefellesBarn: values.adopsjonAvEktefellesBarn!,\n                antallBarn: values.antallBarn,\n                adopsjonsdato: values.adopsjonsdato,\n                søkerAdopsjonAlene: values.søkerAdopsjonAlene!,\n                fødselsdatoer: values.fødselsdatoer || [],\n                termindato: values.termindato,\n                terminbekreftelse: values.terminbekreftelse || [],\n                omsorgsovertakelse: values.omsorgsovertakelse || [],\n                terminbekreftelsedato: values.terminbekreftelsedato,\n            })\n        );\n        navigate('/soknad/utenlandsopphold');\n    };\n\n    return (\n        <OmBarnetFormComponents.FormikWrapper\n            initialValues={initialValues}\n            onSubmit={(values) => onValidSubmit(values)}\n            renderForm={({ values: formValues }) => {\n                // @ts-ignore Fiks denne\n                const visibility = omBarnetQuestionsConfig.getVisbility({\n                    ...formValues,\n                    situasjon: søkersituasjonValues.situasjon!,\n                    kjønn: person.kjønn,\n                });\n                const allQuestionsAnswered = visibility.areAllQuestionsAnswered();\n                return (\n                    <Step\n                        bannerTitle={getMessage(intl, 'søknad.pageheading')}\n                        activeStepId=\"omBarnet\"\n                        pageTitle={getMessage(intl, 'søknad.omBarnet')}\n                        stepTitle={getMessage(intl, 'søknad.omBarnet')}\n                        backLinkHref={getPreviousStepHref('omBarnet')}\n                        onCancel={() => onAvbrytSøknad(dispatch, navigate)}\n                        steps={stepConfig}\n                        kompakt={true}\n                    >\n                        <OmBarnetFormComponents.Form\n                            includeButtons={false}\n                            // @ts-ignore Fiks denne\n                            cleanup={() => cleanupOmBarnet(formValues)}\n                            noButtonsContentRenderer={\n                                allQuestionsAnswered\n                                    ? undefined\n                                    : () => (\n                                          <UnansweredQuestionsInfo>\n                                              {intlUtils(intl, 'søknad.footer.spørsmålMåBesvares')}\n                                          </UnansweredQuestionsInfo>\n                                      )\n                            }\n                        >\n                            <div className={bem.block}>\n                                {søkersituasjonValues.situasjon === 'adopsjon' ? (\n                                    <Block>\n                                        <OmBarnetFormComponents.YesOrNoQuestion\n                                            name={OmBarnetFormField.adopsjonAvEktefellesBarn}\n                                            legend={getMessage(intl, 'omBarnet.adopsjon.spørsmål.stebarnsadopsjon')}\n                                            labels={{\n                                                no: getMessage(intl, 'omBarnet.adopsjon.text.nei'),\n                                                yes: getMessage(intl, 'omBarnet.adopsjon.text.ja'),\n                                            }}\n                                        />\n                                    </Block>\n                                ) : (\n                                    <Block>\n                                        <OmBarnetFormComponents.YesOrNoQuestion\n                                            name={OmBarnetFormField.erBarnetFødt}\n                                            legend={getMessage(intl, 'omBarnet.spørsmål.erBarnetFødt')}\n                                            labels={{\n                                                no: getMessage(intl, 'omBarnet.radiobutton.nei'),\n                                                yes: getMessage(intl, 'omBarnet.radiobutton.ja'),\n                                            }}\n                                        />\n                                    </Block>\n                                )}\n                                <Adopsjon\n                                    visibility={visibility}\n                                    // @ts-ignore Fiks denne\n                                    formValues={formValues}\n                                    kjønn={person.kjønn}\n                                />\n                                <Født\n                                    visibility={visibility}\n                                    // @ts-ignore Fiks denne\n                                    formValues={formValues}\n                                />\n                                <Termin\n                                    visibility={visibility}\n                                    // @ts-ignore Fiks denne\n                                    formValues={formValues}\n                                />\n\n                                {allQuestionsAnswered && (\n                                    <Block margin=\"xl\" textAlignCenter={true}>\n                                        <Button type=\"submit\">{getMessage(intl, 'søknad.gåVidere')}</Button>\n                                    </Block>\n                                )}\n                            </div>\n                        </OmBarnetFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default OmBarnet;\n","import { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { OmBarnetFormData } from './omBarnetFormConfig';\n\nexport const cleanupOmBarnet = (formData: OmBarnetFormData): OmBarnetFormData => {\n    const cleanedData: Partial<OmBarnetFormData> = {};\n    cleanedData.antallBarn = undefined;\n    cleanedData.erBarnetFødt = YesOrNo.UNANSWERED;\n    cleanedData.adopsjonAvEktefellesBarn = YesOrNo.UNANSWERED;\n    cleanedData.søkerAdopsjonAlene = YesOrNo.UNANSWERED;\n\n    if (formData.erBarnetFødt === YesOrNo.YES) {\n        cleanedData.antallBarn = formData.antallBarn;\n        cleanedData.fødselsdatoer = formData.fødselsdatoer;\n        cleanedData.erBarnetFødt = formData.erBarnetFødt;\n    }\n    if (formData.erBarnetFødt === YesOrNo.NO) {\n        cleanedData.antallBarn = formData.antallBarn;\n        cleanedData.erBarnetFødt = formData.erBarnetFødt;\n        cleanedData.terminbekreftelse = formData.terminbekreftelse;\n        cleanedData.terminbekreftelsedato = formData.terminbekreftelsedato;\n        cleanedData.termindato = formData.termindato;\n    }\n    if (formData.adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED) {\n        cleanedData.antallBarn = formData.antallBarn;\n        cleanedData.adopsjonsdato = formData.adopsjonsdato;\n        cleanedData.fødselsdatoer = formData.fødselsdatoer;\n        cleanedData.omsorgsovertakelse = formData.omsorgsovertakelse;\n        cleanedData.adopsjonAvEktefellesBarn = formData.adopsjonAvEktefellesBarn;\n        cleanedData.søkerAdopsjonAlene = formData.søkerAdopsjonAlene;\n    }\n    return cleanedData as OmBarnetFormData;\n};\n","export enum PageKeys {\n    Velkommen = 'velkommen',\n    Situasjon = 'situasjon',\n    OmBarnet = 'om-barnet',\n    Utenlandsopphold = 'utenlandsopphold',\n    Oppsummering = 'oppsummering',\n    SøknadSendt = 'søknad-sendt',\n    Umyndig = 'umyndig',\n}\n","import * as React from 'react';\nimport { TrashcanIkon } from '@navikt/fp-common';\n\nimport './slettKnapp.less';\n\nexport interface SlettKnappProps {\n    ariaLabel: string;\n    onClick: () => void;\n}\n\nconst SlettKnapp: React.FunctionComponent<SlettKnappProps> = ({ onClick, ariaLabel }) => (\n    <button\n        type=\"button\"\n        className=\"slettKnapp\"\n        aria-label={ariaLabel}\n        onClick={(e) => {\n            e.stopPropagation();\n            onClick();\n        }}\n    >\n        <TrashcanIkon width={20} height={20} />\n    </button>\n);\n\nexport default SlettKnapp;\n","import * as React from 'react';\nimport * as classnames from 'classnames';\n\nimport { useIntl } from 'react-intl';\nimport SlettKnapp from '../../../components/slett-knapp/SlettKnapp';\n\nimport { Attachment as AttachmentType } from 'common/storage/attachment/types/Attachment';\nimport { bytesString } from 'common/util/filesize';\nimport { bemUtils, VedleggIkon } from '@navikt/fp-common';\nimport { Link, Loader } from '@navikt/ds-react';\n\nimport './attachment.less';\n\ninterface OwnProps {\n    attachment: AttachmentType;\n    showFileSize?: boolean;\n    onDelete?: (file: AttachmentType) => void;\n}\n\ntype Props = OwnProps;\n\nconst Attachment: React.FunctionComponent<Props> = ({ attachment, showFileSize, onDelete }) => {\n    const intl = useIntl();\n    const bem = bemUtils('attachment');\n    const cls = classnames(bem.block, {\n        [bem.modifier('pending')]: attachment.pending,\n    });\n\n    return (\n        <div className={cls}>\n            {attachment.pending && (\n                <div className={bem.element('spinner')}>\n                    <Loader type=\"S\" />\n                </div>\n            )}\n            <VedleggIkon className={bem.element('icon')} width={20} height={20} />\n            <div className={bem.element('filename')}>\n                {attachment.url ? (\n                    <Link href={attachment.url} target=\"_blank\">\n                        {attachment.filename}\n                    </Link>\n                ) : (\n                    <span>{attachment.filename}</span>\n                )}\n                {showFileSize && <div>{bytesString(attachment.filesize)}</div>}\n            </div>\n            {onDelete && (\n                <span className={bem.element('deleteButton')}>\n                    <SlettKnapp\n                        onClick={() => onDelete(attachment)}\n                        ariaLabel={intl.formatMessage({ id: 'vedlegg.arialabel.slett' }, { navn: attachment.filename })}\n                    />\n                </span>\n            )}\n        </div>\n    );\n};\n\nexport default Attachment;\n","import Bytes from 'bytes';\n\nexport const bytesString = (bytes: number): string => {\n    return Bytes(bytes, {\n        unitSeparator: ' ',\n        thousandsSeparator: ' ',\n        decimalPlaces: 1,\n        fixedDecimals: false\n    });\n};\n\nexport const getTotalFileSize = (files: File[]): number => {\n    return files.reduce(\n        (a, b) =>\n            ({\n                size: a.size + b.size\n            } as any),\n        { size: 0 }\n    ).size;\n};\n","import * as React from 'react';\nimport AttachmentComponent from './Attachment';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport './attachment.less';\nimport { Attachment } from 'common/storage/attachment/types/Attachment';\n\ninterface Props {\n    attachments: Attachment[];\n    showFileSize?: boolean;\n    onDelete?: (file: Attachment) => void;\n}\n\nconst AttachmentList: React.FunctionComponent<Props> = (props) => {\n    const { attachments, showFileSize, onDelete } = props;\n    return (\n        <ul className=\"attachmentList\">\n            <TransitionGroup>\n                {attachments.map((attachment, index) => (\n                    <CSSTransition classNames=\"transitionFade\" timeout={500} key={index}>\n                        <li>\n                            <AttachmentComponent\n                                attachment={attachment}\n                                onDelete={onDelete}\n                                showFileSize={showFileSize}\n                            />\n                        </li>\n                    </CSSTransition>\n                ))}\n            </TransitionGroup>\n        </ul>\n    );\n};\nexport default AttachmentList;\n","const s4 = (): string =>\n  Math.floor((1 + Math.random()) * 0x10000)\n    .toString()\n    .substring(1);\n\nconst guid = (): string => `${s4()}${s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`;\n\nexport default guid;\n","import { Attachment, AttachmentType, Skjemanummer } from 'common/storage/attachment/types/Attachment';\nimport guid from 'common/util/guid';\n\nconst generateAttachmentId = () => 'V'.concat(guid().replace(/-/g, ''));\n\nexport const mapFileToAttachment = (file: File, type: AttachmentType, skjemanummer: Skjemanummer): Attachment => {\n    return {\n        id: generateAttachmentId(),\n        file,\n        filename: file.name,\n        filesize: file.size,\n        uploaded: false,\n        pending: false,\n        type,\n        skjemanummer,\n    };\n};\n\nexport const isAttachmentWithError = ({ pending, uploaded, filesize }: Attachment) =>\n    (pending === false && uploaded === false) || filesize === 0;\n"],"names":["OmBarnetFormConfig","_defineProperty","_OmBarnetFormConfig","OmBarnetFormField","isIncluded","_ref","situasjon","isAnswered","_ref2","adopsjonAvEktefellesBarn","YesOrNo","visibilityFilter","_ref3","_ref4","_ref5","erBarnetFødt","_ref6","_ref7","antallBarn","hasValue","_ref8","adopsjonsdato","_ref9","_ref10","_ref11","_ref12","kjønn","_ref13","søkerAdopsjonAlene","_ref14","fødselsdatoer","length","_ref15","_ref16","_ref17","_ref18","_ref19","omsorgsovertakelse","_ref20","_ref21","_ref22","termindato","_ref23","_ref24","_ref25","terminbekreftelse","_ref26","_ref27","_ref28","terminbekreftelsedato","_ref29","Questions","Født","visibility","formValues","intl","useIntl","React","isVisible","Block","margin","OmBarnetFormComponents","name","radios","label","intlUtils","value","legend","getMessage","parseInt","FieldArray","render","key","concat","minDate","dayjs","subtract","toDate","maxDate","validate","validateFødselDate","dato","etterDagensDato","sisteDatoBarnetKanVæreFødt","placeholder","AttachmentType","Skjemanummer","saveAttachment","attachment","formData","FormData","append","id","file","filename","url","window","REST_API_URL","axios","withCredentials","timeout","headers","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","_catch","thrown","delegateYield","_toConsumableArray","arr","_arrayWithoutHoles","Array","isArray","_arrayLikeToArray","_iterableToArray","from","_unsupportedIterableToArray","_nonIterableSpread","o","minLen","n","toString","test","len","arr2","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","sourceKeys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","removeFn","VALID_EXTENSIONS","getPendingAttachmentFromFile","newAttachment","getAttachmentFromFile","mapFileToAttachment","TERMINBEKREFTELSE","OMSORGSOVERTAKELSE","pending","attachmentUploadHasFailed","uploaded","fileExtensionIsValid","ext","split","includes","toLowerCase","FormikFileUploader","attachments","onFileInputClick","description","otherProps","_excluded","useFormikContext","uploadAttachment","_x","_uploadAttachment","_callee2","response","_callee2$","_context2","AttachmentApi","setAttachmentPendingToFalse","location","uuid","data","t0","uploadAttachments","_x2","_x3","_uploadAttachments","_callee3","allAttachments","replaceFn","_iterator","_step","failedAttachments","_callee3$","_context3","_createForOfIteratorHelper","s","updateAttachmentListElement","e","f","filter","updateFailedAttachments","atts","addPendingAttachmentToFieldArray","pushFn","FormikFileInput","_extends","accept","join","onFilesSelect","_callee","files","replace","remove","_callee$","_context","map","_x4","_x5","onClick","buttonLabel","AttachmentList","a","isAttachmentWithError","showFileSize","onDelete","Termin","add","validateTerminDate","datepickerUtils","erMindreEnn3UkerSiden","sisteMuligeTermindato","UtvidetInformasjon","apneLabel","FormattedMessage","PictureScanningGuide","backgroundColor","terminBekreftelseDato","valideringAvTerminbekreftelsesdato","utstedtDatoErIUke22","Adopsjon","validateEktefellensBarnAdopsjonDate","sisteMuligeDatoForOvertaOmsorg","validateOvertaOmsorgAdopsjonDate","_","index","padBottom","fødselsDatoer","validateAdopsjonFødselDate","labels","no","yes","OmBarnet","person","bem","bemUtils","navigate","useNavigate","useDocumentTitle","_useEngangsstønadCont","useEngangsstønadContext","dispatch","søkersituasjonValues","søknad","søkersituasjon","omBarnet","initialValues","shouldResetInitialValues","initialOmBarnetValues","logAmplitudeEvent","app","team","pageKey","PageKeys","onSubmit","onValidSubmit","actionCreator","renderForm","omBarnetQuestionsConfig","_objectSpread","allQuestionsAnswered","areAllQuestionsAnswered","Step","bannerTitle","activeStepId","pageTitle","stepTitle","backLinkHref","getPreviousStepHref","onCancel","onAvbrytSøknad","steps","stepConfig","kompakt","includeButtons","cleanup","cleanupOmBarnet","cleanedData","noButtonsContentRenderer","UnansweredQuestionsInfo","className","block","textAlignCenter","Button","SlettKnapp","ariaLabel","stopPropagation","TrashcanIkon","width","height","Attachment","cls","classnames","modifier","element","Loader","VedleggIkon","Link","href","bytesString","bytes","Bytes","unitSeparator","thousandsSeparator","decimalPlaces","fixedDecimals","filesize","formatMessage","navn","props","TransitionGroup","CSSTransition","classNames","AttachmentComponent","s4","Math","floor","random","substring","guid","generateAttachmentId","skjemanummer","size"],"sourceRoot":""}