{"version":3,"file":"steps-utenlandsopphold-Utenlandsopphold-stories.98cc83a9.iframe.bundle.js","mappings":"kQAKA,MAAMA,kBAAoB,CAACC,UAAWC,SAAUC,WAC5C,MAAMC,OAASH,UAAUC,UACzB,IAAKE,OACD,OAAO,EAEX,GAAIA,OAAOC,aAA6C,IAA/BD,OAAOC,WAAWF,SACvC,OAAO,EAEX,GAAIC,OAAOE,mBAAyD,IAArCF,OAAOE,iBAAiBH,SACnD,OAAO,EAEX,QAA8BI,IAA1BH,OAAOI,eAA8B,CACrC,MAAMA,eAAiBP,UAAUG,OAAOI,gBACxC,OAAOR,kBAAkBC,UAAWG,OAAOI,eAAgBL,UAAYK,eAAeC,WAAWN,QACrG,CACA,OAAO,CAAI,EAETO,mBAAqB,CAACT,UAAWC,SAAUC,WAC7C,MAAMC,OAASH,UAAUC,UACzB,SAAKE,SAAWA,OAAOK,aAGhBL,OAAOK,WAAWN,QAAQ,EAE/BQ,mBAAqB,CAACV,UAAWC,SAAUC,WAC7C,MAAMC,OAASH,UAAUC,UACzB,QAAKE,UAGEA,OAAOC,YAAaD,OAAOC,WAAWF,SAAe,EAmB1DS,iBAAmB,CAACC,MAAOZ,UAAWC,SAAUC,WAClD,MAAMC,OAASH,UAAUC,UACzB,GAAKE,QAAWA,OAAOU,SAGvB,OAAOV,OAAOU,SAASX,QAAQ,EAEnCY,QAAQ,GAAad,YAAc,CAC/Be,aAAeb,UAAY,CACvBW,SAAWG,KAASJ,OAAUD,iBAAiBC,EAAOZ,UAAWgB,IAAKd,SACtEe,UAAYD,KAAQjB,kBAAkBC,UAAWgB,IAAKd,SACtDM,WAAaQ,KAAQP,mBAAmBT,UAAWgB,IAAKd,SACxDE,WAAaY,KAAQN,mBAAmBV,UAAWgB,IAAKd,SACxDgB,wBAAyB,IA9BD,EAAClB,UAAWE,WACxC,IAAIiB,wBAAyB,EAQ7B,OAPAC,OAAOC,KAAKrB,WAAWsB,SAASN,MAC5B,MAAMf,SAAWD,UAAUgB,KAC3B,GAAIjB,kBAAkBC,UAAWgB,IAAKd,SAAU,CAC5C,MAAMqB,gBAAqCjB,IAAxBL,SAASsB,aAA4D,IAAjCtB,SAASsB,WAAWrB,SAC3EiB,wBAAoD,IAA3BA,yBAAoClB,SAASO,WAAWN,UAAYqB,WACjG,KAEGJ,sBAAsB,EAqBMD,CAAwBlB,UAAWE,SAClEsB,qBAAsB,IApBD,EAACxB,UAAWE,UACxBkB,OAAOC,KAAKrB,WAAWyB,QAAQT,KACjCN,mBAAmBV,UAAWgB,IAAKd,WAkBdsB,CAAqBxB,UAAWE,WAEhEwB,yBAA0B,CAACV,IAAKd,WACf,CACTW,SAAWD,OAAUD,iBAAiBC,EAAOZ,UAAWgB,IAAKd,SAC7De,UAAW,IAAMlB,kBAAkBC,UAAWgB,IAAKd,SACnDM,WAAY,IAAMC,mBAAmBT,UAAWgB,IAAKd,Y,q+BC/DjE,kCACEyB,MAAO,mBACPC,UAAWC,+CAAAA,EACXC,WAAY,CAACC,6DAAAA,IAGf,IAUaC,QAVgB,SAAvBC,WACJ,OACEC,mCAAAA,cAACC,2DAAAA,EAA4B,KAC3BD,mCAAAA,cAACE,+CAAAA,EAAY,CAACC,UAAU,MACtBH,mCAAAA,cAACL,+CAAAA,EAAgB,OAIvB,EAE8BS,KAAK,CAAC,E,oGC1B/B,IAAKC,S,4DAQX,SARWA,UAAAA,SAAQ,sBAARA,SAAQ,sBAARA,SAAQ,qBAARA,SAAQ,oCAARA,SAAQ,4BAARA,SAAQ,8BAARA,SAAQ,kBAQnB,CARWA,WAAAA,SAAQ,I","sources":["webpack://engangsstonad/../../node_modules/.pnpm/@navikt+sif-common-question-config@0.0.7/node_modules/@navikt/sif-common-question-config/lib/index.js","webpack://engangsstonad/./src/app/steps/utenlandsopphold/Utenlandsopphold.stories.tsx","webpack://engangsstonad/./src/app/types/PageKeys.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.questionValueIsOk = (value) => {\n    return value !== undefined && value !== '';\n};\nconst isQuestionVisible = (questions, question, payload) => {\n    const config = questions[question];\n    if (!config) {\n        return false;\n    }\n    if (config.isIncluded && config.isIncluded(payload) === false) {\n        return false;\n    }\n    if (config.visibilityFilter && config.visibilityFilter(payload) === false) {\n        return false;\n    }\n    if (config.parentQuestion !== undefined) {\n        const parentQuestion = questions[config.parentQuestion];\n        return isQuestionVisible(questions, config.parentQuestion, payload) && parentQuestion.isAnswered(payload);\n    }\n    return true;\n};\nconst isQuestionAnswered = (questions, question, payload) => {\n    const config = questions[question];\n    if (!config || !config.isAnswered) {\n        return false;\n    }\n    return config.isAnswered(payload);\n};\nconst isQuestionIncluded = (questions, question, payload) => {\n    const config = questions[question];\n    if (!config) {\n        return false;\n    }\n    return config.isIncluded ? config.isIncluded(payload) : true;\n};\nconst areAllQuestionsAnswered = (questions, payload) => {\n    let allQuestionsHasAnswers = true;\n    Object.keys(questions).forEach((key) => {\n        const question = questions[key];\n        if (isQuestionVisible(questions, key, payload)) {\n            const isOptional = question.isOptional !== undefined ? question.isOptional(payload) === true : false;\n            allQuestionsHasAnswers = allQuestionsHasAnswers === true && (question.isAnswered(payload) || isOptional);\n        }\n    });\n    return allQuestionsHasAnswers;\n};\nconst getIncludedQuestions = (questions, payload) => {\n    const keys = Object.keys(questions).filter((key) => {\n        return isQuestionIncluded(questions, key, payload);\n    });\n    return keys;\n};\nconst validateQuestion = (value, questions, question, payload) => {\n    const config = questions[question];\n    if (!config || !config.validate) {\n        return undefined;\n    }\n    return config.validate(payload);\n};\nexports.Questions = (questions) => ({\n    getVisbility: (payload) => ({\n        validate: (key) => (value) => validateQuestion(value, questions, key, payload),\n        isVisible: (key) => isQuestionVisible(questions, key, payload),\n        isAnswered: (key) => isQuestionAnswered(questions, key, payload),\n        isIncluded: (key) => isQuestionIncluded(questions, key, payload),\n        areAllQuestionsAnswered: () => areAllQuestionsAnswered(questions, payload),\n        getIncludedQuestions: () => getIncludedQuestions(questions, payload),\n    }),\n    getQuestionVisbilityInfo: (key, payload) => {\n        const info = {\n            validate: (value) => validateQuestion(value, questions, key, payload),\n            isVisible: () => isQuestionVisible(questions, key, payload),\n            isAnswered: () => isQuestionAnswered(questions, key, payload),\n        };\n        return info;\n    },\n});\n","import React from 'react';\nimport { Story } from '@storybook/react';\nimport { withRouter } from 'storybook-addon-react-router-v6';\nimport EngangsstønadContextProvider from '../../context/EngangsstønadContext';\nimport Utenlandsopphold from './Utenlandsopphold';\nimport IntlProvider from 'intl/IntlProvider';\n\nimport '@navikt/ds-css';\nimport '../../styles/globals.less';\n\nexport default {\n  title: 'Utenlandsopphold',\n  component: Utenlandsopphold,\n  decorators: [withRouter],\n};\n\nconst Template: Story<any> = () => {\n  return (\n    <EngangsstønadContextProvider>\n      <IntlProvider språkkode=\"nb\">\n        <Utenlandsopphold />\n      </IntlProvider>\n    </EngangsstønadContextProvider>\n  )\n  };\n\nexport const VisSide = Template.bind({});\n","export enum PageKeys {\n    Velkommen = 'velkommen',\n    Situasjon = 'situasjon',\n    OmBarnet = 'om-barnet',\n    Utenlandsopphold = 'utenlandsopphold',\n    Oppsummering = 'oppsummering',\n    SøknadSendt = 'søknad-sendt',\n    Umyndig = 'umyndig',\n}\n"],"names":["isQuestionVisible","questions","question","payload","config","isIncluded","visibilityFilter","undefined","parentQuestion","isAnswered","isQuestionAnswered","isQuestionIncluded","validateQuestion","value","validate","exports","getVisbility","key","isVisible","areAllQuestionsAnswered","allQuestionsHasAnswers","Object","keys","forEach","isOptional","getIncludedQuestions","filter","getQuestionVisbilityInfo","title","component","Utenlandsopphold","decorators","withRouter","VisSide","Template","React","EngangsstønadContextProvider","IntlProvider","språkkode","bind","PageKeys"],"sourceRoot":""}