{"version":3,"file":"OmBarnet-6aa61b91.js","sources":["../../../../packages/fp-common/lib/assets/scanning-ikon/ScanningIkon.js","../../../../packages/fp-common/lib/components/picture-scanning-guide/PictureScanningGuide.js","../../src/app/steps/om-barnet/omBarnetQuestionsConfig.ts","../../src/app/steps/om-barnet/omBarnetUtils.ts","../../src/app/steps/om-barnet/omBarnetValidering.ts","../../src/app/steps/om-barnet/situasjon/FÃ¸dt.tsx","../../src/common/storage/attachment/types/Attachment.ts","../../src/common/storage/api/attachmentApi.ts","../../src/app/components/formik-file-uploader/FormikFileUploader.tsx","../../src/app/steps/om-barnet/situasjon/Termin.tsx","../../src/app/steps/om-barnet/situasjon/Adopsjon.tsx","../../src/app/steps/om-barnet/OmBarnet.tsx"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GoodScanning = ({ title, height }) => {\n    return (_jsxs(\"svg\", { role: \"img\", \"aria-hidden\": \"true\", focusable: \"false\", viewBox: \"0 0 83 121\", height: height, children: [title && _jsx(\"title\", { children: title }), _jsxs(\"defs\", { children: [_jsxs(\"filter\", { x: \"-10.6%\", y: \"-5.4%\", width: \"121.2%\", height: \"115.1%\", filterUnits: \"objectBoundingBox\", id: \"good_1__a\", children: [_jsx(\"feOffset\", { dy: 2, in: \"SourceAlpha\", result: \"shadowOffsetOuter1\" }), _jsx(\"feGaussianBlur\", { stdDeviation: 2, in: \"shadowOffsetOuter1\", result: \"shadowBlurOuter1\" }), _jsx(\"feColorMatrix\", { values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\", in: \"shadowBlurOuter1\" })] }), _jsx(\"path\", { id: \"good_1__b\", d: \"M8 11h66v93H8z\" })] }), _jsxs(\"g\", { fill: \"none\", fillRule: \"evenodd\", children: [_jsx(\"path\", { d: \"M1 1h81v119H1z\", fill: \"#BABABA\", stroke: \"#000\", strokeOpacity: 0.85, strokeWidth: 2 }), _jsx(\"use\", { fill: \"#000\", filter: \"url(#good_1__a)\", xlinkHref: \"#good_1__b\" }), _jsx(\"use\", { fill: \"#FFF\", xlinkHref: \"#good_1__b\" }), _jsx(\"g\", { stroke: \"#B7B4B4\", strokeLinecap: \"square\", strokeWidth: 2, children: _jsx(\"path\", { d: \"M15.5 30.5h53M15.5 44.5h50M15.5 23.5h45M15.5 37.5h43\" }) }), _jsx(\"g\", { stroke: \"#B7B4B4\", strokeLinecap: \"square\", strokeWidth: 2, children: _jsx(\"path\", { d: \"M15.5 77.5h41M15.5 63.5h50M15.5 84.5h45M15.5 70.5h43\" }) })] })] }));\n};\nconst KeystoneScanning = ({ title, height }) => {\n    return (_jsxs(\"svg\", { role: \"img\", \"aria-hidden\": \"true\", focusable: \"false\", viewBox: \"0 0 83 121\", height: height, children: [title && _jsx(\"title\", { children: title }), _jsx(\"desc\", { children: \"Bildet er ikke tatt ovenfra\" }), _jsxs(\"defs\", { children: [_jsxs(\"filter\", { x: \"-9.7%\", y: \"-7.2%\", width: \"119.4%\", height: \"120.3%\", filterUnits: \"objectBoundingBox\", id: \"keystone_2__a\", children: [_jsx(\"feOffset\", { dy: 2, in: \"SourceAlpha\", result: \"shadowOffsetOuter1\" }), _jsx(\"feGaussianBlur\", { stdDeviation: 2, in: \"shadowOffsetOuter1\", result: \"shadowBlurOuter1\" }), _jsx(\"feColorMatrix\", { values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\", in: \"shadowBlurOuter1\" })] }), _jsx(\"path\", { id: \"keystone_2__b\", d: \"M16.528 20h49.06L78 89H6z\" })] }), _jsxs(\"g\", { fill: \"none\", fillRule: \"evenodd\", children: [_jsx(\"path\", { d: \"M1 1h81v119H1z\", fill: \"#BABABA\", stroke: \"#000\", strokeOpacity: 0.85, strokeWidth: 2 }), _jsx(\"use\", { fill: \"#000\", filter: \"url(#keystone_2__a)\", xlinkHref: \"#keystone_2__b\" }), _jsx(\"use\", { fill: \"#FFF\", xlinkHref: \"#keystone_2__b\" }), _jsx(\"g\", { stroke: \"#B7B4B4\", strokeLinecap: \"square\", strokeWidth: 2, children: _jsx(\"path\", { d: \"M20 41.5h37M21 35.5h39M22 29.5h36M19 47.5h43\" }) }), _jsx(\"g\", { stroke: \"#B7B4B4\", strokeLinecap: \"square\", strokeWidth: 2, children: _jsx(\"path\", { d: \"M15 70.5h48M16 64.5h45M17 58.5h38M14 76.5h45\" }) })] })] }));\n};\nconst HorizontalScanning = ({ title, height }) => {\n    return (_jsxs(\"svg\", { role: \"img\", \"aria-hidden\": \"true\", focusable: \"false\", viewBox: \"0 0 83 121\", height: height, children: [title && _jsx(\"title\", { children: title }), _jsx(\"desc\", { children: \"Bildet har ikke riktig retning\" }), _jsxs(\"defs\", { children: [_jsxs(\"filter\", { x: \"-10.6%\", y: \"-11.1%\", width: \"121.2%\", height: \"131.1%\", filterUnits: \"objectBoundingBox\", id: \"horizontal_3__a\", children: [_jsx(\"feOffset\", { dy: 2, in: \"SourceAlpha\", result: \"shadowOffsetOuter1\" }), _jsx(\"feGaussianBlur\", { stdDeviation: 2, in: \"shadowOffsetOuter1\", result: \"shadowBlurOuter1\" }), _jsx(\"feColorMatrix\", { values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\", in: \"shadowBlurOuter1\" })] }), _jsx(\"path\", { id: \"horizontal_3__b\", d: \"M8 36h66v45H8z\" })] }), _jsxs(\"g\", { fill: \"none\", fillRule: \"evenodd\", children: [_jsx(\"path\", { d: \"M1 1h81v119H1z\", fill: \"#BABABA\", stroke: \"#000\", strokeOpacity: 0.85, strokeWidth: 2 }), _jsx(\"use\", { fill: \"#000\", filter: \"url(#horizontal_3__a)\", xlinkHref: \"#horizontal_3__b\" }), _jsx(\"use\", { fill: \"#FFF\", xlinkHref: \"#horizontal_3__b\" }), _jsx(\"path\", { stroke: \"#B7B4B4\", strokeWidth: 2, strokeLinecap: \"square\", d: \"M35 44v28M30 44v22M25 44v19M20 44v24M52 44v24M57 44v30M47 44v27M62 44v26\" })] })] }));\n};\nconst ShadowScanning = ({ title, height }) => {\n    return (_jsxs(\"svg\", { role: \"img\", \"aria-hidden\": \"true\", focusable: \"false\", viewBox: \"0 0 83 121\", height: height, children: [title && _jsx(\"title\", { children: title }), _jsx(\"desc\", { children: \"Bildet har har skygge opp\\u00E5 legeerkl\\u00E6ring\" }), _jsxs(\"defs\", { children: [_jsxs(\"filter\", { x: \"-10%\", y: \"-5.2%\", width: \"120%\", height: \"114.6%\", filterUnits: \"objectBoundingBox\", id: \"shadow_4__a\", children: [_jsx(\"feOffset\", { dy: 2, in: \"SourceAlpha\", result: \"shadowOffsetOuter1\" }), _jsx(\"feGaussianBlur\", { stdDeviation: 2, in: \"shadowOffsetOuter1\", result: \"shadowBlurOuter1\" }), _jsx(\"feColorMatrix\", { values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\", in: \"shadowBlurOuter1\" })] }), _jsx(\"path\", { id: \"shadow_4__b\", d: \"M6 12h70v96H6z\" })] }), _jsxs(\"g\", { fill: \"none\", fillRule: \"evenodd\", children: [_jsx(\"path\", { strokeOpacity: 0.85, stroke: \"#000\", strokeWidth: 2, fill: \"#BABABA\", d: \"M1 1h81v119H1z\" }), _jsxs(\"g\", { transform: \"translate(1 1)\", children: [_jsx(\"use\", { fill: \"#000\", filter: \"url(#shadow_4__a)\", xlinkHref: \"#shadow_4__b\" }), _jsx(\"use\", { fill: \"#FFF\", xlinkHref: \"#shadow_4__b\" })] }), _jsx(\"g\", { stroke: \"#B7B4B4\", strokeLinecap: \"square\", strokeWidth: 2, children: _jsx(\"path\", { d: \"M15.5 30.5h53M15.5 44.5h50M15.5 23.5h45M15.5 37.5h43\" }) }), _jsx(\"g\", { stroke: \"#B7B4B4\", strokeLinecap: \"square\", strokeWidth: 2, children: _jsx(\"path\", { d: \"M15.5 77.5h41M15.5 63.5h50M15.5 84.5h45M15.5 70.5h43\" }) }), _jsx(\"path\", { d: \"M53.57 120C65.186 86.185 63.996 65.163 50 56.935 29.004 44.593 1 69.565 1 90v30h52.57z\", fillOpacity: 0.3, fill: \"#7C7C7C\" })] })] }));\n};\nconst ScanningIkon = (props) => {\n    const { height = 100, title } = props;\n    switch (props.status) {\n        case 'good':\n            return _jsx(GoodScanning, { title: title, height: height });\n        case 'keystone':\n            return _jsx(KeystoneScanning, { title: title, height: height });\n        case 'horizontal':\n            return _jsx(HorizontalScanning, { title: title, height: height });\n        case 'shadow':\n            return _jsx(ShadowScanning, { title: title, height: height });\n        default:\n            return _jsx(GoodScanning, { title: title, height: height });\n    }\n};\nexport default ScanningIkon;\n//# sourceMappingURL=ScanningIkon.js.map","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport PictureScanningExample from './PictureScanningExample';\nimport bemUtils from './../../utils/bemUtils';\nimport intlHelper from './../../utils/intlUtils';\nimport ScanningIkon from './../../assets/scanning-ikon/ScanningIkon';\nimport { Heading, Link } from '@navikt/ds-react';\nimport classNames from 'classnames';\nimport './pictureScanningGuide.less';\nconst PictureScanningGuide = ({ backgroundColor = 'blue' }) => {\n    const intl = useIntl();\n    const svgIconHeight = 100;\n    const bem = bemUtils('pictureScanningGuide');\n    return (_jsxs(\"div\", { className: classNames(bem.block, backgroundColor === 'blue' ? bem.modifier('blue') : bem.modifier('white')), children: [_jsx(Heading, { level: \"2\", size: \"medium\", children: _jsx(FormattedMessage, { id: \"psg.innholdstittel\" }) }), _jsx(Heading, { size: \"small\", level: \"3\", className: bem.element('title'), children: _jsx(FormattedMessage, { id: \"psg.section1.tittel\" }) }), _jsxs(\"ul\", { children: [_jsx(FormattedMessage, { tagName: \"li\", id: \"psg.section1.liste.punkt1\" }), _jsx(FormattedMessage, { tagName: \"li\", id: \"psg.section1.liste.punkt2\", values: {\n                            i: (msg) => _jsx(\"i\", { children: msg }),\n                        } }), _jsx(FormattedMessage, { tagName: \"li\", id: \"psg.section1.liste.punkt3\" })] }), _jsx(Heading, { size: \"small\", level: \"3\", className: bem.element('title'), children: _jsx(FormattedMessage, { id: \"psg.section2.tittel\" }) }), _jsxs(\"ul\", { children: [_jsx(FormattedMessage, { tagName: \"li\", id: \"psg.section2.liste.punkt1\" }), _jsx(FormattedMessage, { tagName: \"li\", id: \"psg.section2.liste.punkt2\" }), _jsx(FormattedMessage, { tagName: \"li\", id: \"psg.section2.liste.punkt3\" })] }), _jsxs(\"div\", { className: bem.element('examples'), children: [_jsx(Heading, { size: \"small\", level: \"3\", className: bem.element('title'), children: _jsx(FormattedMessage, { id: \"psg.icon.heading\" }) }), _jsxs(\"div\", { className: bem.element('body'), children: [_jsx(\"div\", { className: bem.element('cell'), children: _jsx(PictureScanningExample, { image: _jsx(ScanningIkon, { status: \"good\", height: svgIconHeight }), status: \"suksess\", statusText: intlHelper(intl, 'psg.good'), description: intlHelper(intl, 'psg.icon.label.good') }) }), _jsx(\"div\", { className: bem.element('cell'), children: _jsx(PictureScanningExample, { image: _jsx(ScanningIkon, { status: \"keystone\", height: svgIconHeight }), status: \"feil\", statusText: intlHelper(intl, 'psg.bad'), description: intlHelper(intl, 'psg.icon.label.keystone') }) }), _jsx(\"div\", { className: bem.element('cell'), children: _jsx(PictureScanningExample, { image: _jsx(ScanningIkon, { status: \"horizontal\", height: svgIconHeight }), status: \"feil\", statusText: intlHelper(intl, 'psg.bad'), description: intlHelper(intl, 'psg.icon.label.horizontal') }) }), _jsx(\"div\", { className: bem.element('cell'), children: _jsx(PictureScanningExample, { image: _jsx(ScanningIkon, { status: \"shadow\", height: svgIconHeight }), status: \"feil\", statusText: intlHelper(intl, 'psg.bad'), description: intlHelper(intl, 'psg.icon.label.shadow') }) })] }), _jsx(Link, { target: \"_blank\", href: intlHelper(intl, 'psg.lenkepanel.url'), children: _jsx(FormattedMessage, { id: \"psg.lenkepanel.text\" }) })] })] }));\n};\nexport default PictureScanningGuide;\n//# sourceMappingURL=PictureScanningGuide.js.map","import { hasValue } from '@navikt/fp-common';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { QuestionConfig, Questions } from '@navikt/sif-common-question-config/lib';\nimport { OmBarnetFormData, OmBarnetFormField } from './omBarnetFormConfig';\n\nexport interface OmBarnetQuestionPayload extends OmBarnetFormData {\n    situasjon: string;\n    kjÃ¸nn: string;\n}\n\nconst OmBarnetFormConfig: QuestionConfig<OmBarnetQuestionPayload, OmBarnetFormField> = {\n    [OmBarnetFormField.adopsjonAvEktefellesBarn]: {\n        isIncluded: ({ situasjon }) => situasjon === 'adopsjon',\n        isAnswered: ({ adopsjonAvEktefellesBarn }) => adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED,\n        visibilityFilter: ({ situasjon }) => situasjon === 'adopsjon',\n    },\n    [OmBarnetFormField.erBarnetFÃ¸dt]: {\n        isIncluded: ({ situasjon }) => situasjon === 'fÃ¸dsel',\n        isAnswered: ({ erBarnetFÃ¸dt }) => erBarnetFÃ¸dt !== YesOrNo.UNANSWERED,\n        visibilityFilter: ({ situasjon }) => situasjon === 'fÃ¸dsel',\n    },\n    [OmBarnetFormField.antallBarn]: {\n        isIncluded: () => true,\n        isAnswered: ({ antallBarn }) => hasValue(antallBarn),\n        visibilityFilter: ({ adopsjonAvEktefellesBarn, erBarnetFÃ¸dt, adopsjonsdato }) =>\n            erBarnetFÃ¸dt !== YesOrNo.UNANSWERED ||\n            (adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED && hasValue(adopsjonsdato)),\n    },\n    [OmBarnetFormField.adopsjonsdato]: {\n        isIncluded: ({ adopsjonAvEktefellesBarn }) => adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED,\n        isAnswered: ({ adopsjonsdato }) => hasValue(adopsjonsdato),\n        visibilityFilter: ({ adopsjonAvEktefellesBarn }) => adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED,\n    },\n    [OmBarnetFormField.sÃ¸kerAdopsjonAlene]: {\n        isIncluded: ({ situasjon, kjÃ¸nn, adopsjonAvEktefellesBarn }) =>\n            situasjon === 'adopsjon' && kjÃ¸nn === 'M' && adopsjonAvEktefellesBarn === YesOrNo.NO,\n        isAnswered: ({ sÃ¸kerAdopsjonAlene }) => sÃ¸kerAdopsjonAlene !== YesOrNo.UNANSWERED,\n        visibilityFilter: ({ adopsjonAvEktefellesBarn, fÃ¸dselsdatoer }) =>\n            adopsjonAvEktefellesBarn === YesOrNo.NO && fÃ¸dselsdatoer?.length > 0 && fÃ¸dselsdatoer[0] !== '',\n    },\n    [OmBarnetFormField.fÃ¸dselsdatoer]: {\n        isIncluded: ({ erBarnetFÃ¸dt, adopsjonAvEktefellesBarn }) =>\n            erBarnetFÃ¸dt === YesOrNo.YES || adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED,\n        isAnswered: ({ fÃ¸dselsdatoer }) => fÃ¸dselsdatoer?.length > 0 && fÃ¸dselsdatoer[0] !== '',\n        visibilityFilter: ({ antallBarn }) => hasValue(antallBarn),\n    },\n    [OmBarnetFormField.omsorgsovertakelse]: {\n        isIncluded: ({ adopsjonAvEktefellesBarn }) => adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED,\n        isAnswered: ({ omsorgsovertakelse }) => omsorgsovertakelse?.length > 0,\n        visibilityFilter: ({ adopsjonAvEktefellesBarn, fÃ¸dselsdatoer, sÃ¸kerAdopsjonAlene, kjÃ¸nn }) =>\n            (adopsjonAvEktefellesBarn === YesOrNo.YES && fÃ¸dselsdatoer?.length > 0 && fÃ¸dselsdatoer[0] !== '') ||\n            (adopsjonAvEktefellesBarn === YesOrNo.NO && sÃ¸kerAdopsjonAlene !== YesOrNo.UNANSWERED) ||\n            (kjÃ¸nn === 'K' && fÃ¸dselsdatoer?.length > 0 && fÃ¸dselsdatoer[0] !== ''),\n    },\n    [OmBarnetFormField.termindato]: {\n        isIncluded: ({ erBarnetFÃ¸dt }) => erBarnetFÃ¸dt === YesOrNo.NO,\n        isAnswered: ({ termindato }) => hasValue(termindato),\n        visibilityFilter: ({ antallBarn }) => hasValue(antallBarn),\n    },\n    [OmBarnetFormField.terminbekreftelse]: {\n        isIncluded: ({ erBarnetFÃ¸dt }) => erBarnetFÃ¸dt === YesOrNo.NO,\n        isAnswered: ({ terminbekreftelse }) => terminbekreftelse?.length > 0,\n        visibilityFilter: ({ termindato }) => hasValue(termindato),\n    },\n    [OmBarnetFormField.terminbekreftelsedato]: {\n        isIncluded: ({ erBarnetFÃ¸dt }) => erBarnetFÃ¸dt === YesOrNo.NO,\n        isAnswered: ({ terminbekreftelsedato }) => hasValue(terminbekreftelsedato),\n        visibilityFilter: ({ terminbekreftelse }) => terminbekreftelse?.length > 0,\n    },\n};\n\nconst omBarnetQuestionsConfig = Questions<OmBarnetQuestionPayload, OmBarnetFormField>(OmBarnetFormConfig);\n\nexport default omBarnetQuestionsConfig;\n","import { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { OmBarnetFormData } from './omBarnetFormConfig';\n\nexport const cleanupOmBarnet = (formData: OmBarnetFormData): OmBarnetFormData => {\n    const cleanedData: Partial<OmBarnetFormData> = {};\n    cleanedData.antallBarn = undefined;\n    cleanedData.erBarnetFÃ¸dt = YesOrNo.UNANSWERED;\n    cleanedData.adopsjonAvEktefellesBarn = YesOrNo.UNANSWERED;\n    cleanedData.sÃ¸kerAdopsjonAlene = YesOrNo.UNANSWERED;\n\n    if (formData.erBarnetFÃ¸dt === YesOrNo.YES) {\n        cleanedData.antallBarn = formData.antallBarn;\n        cleanedData.fÃ¸dselsdatoer = formData.fÃ¸dselsdatoer;\n        cleanedData.erBarnetFÃ¸dt = formData.erBarnetFÃ¸dt;\n    }\n    if (formData.erBarnetFÃ¸dt === YesOrNo.NO) {\n        cleanedData.antallBarn = formData.antallBarn;\n        cleanedData.erBarnetFÃ¸dt = formData.erBarnetFÃ¸dt;\n        cleanedData.terminbekreftelse = formData.terminbekreftelse;\n        cleanedData.terminbekreftelsedato = formData.terminbekreftelsedato;\n        cleanedData.termindato = formData.termindato;\n    }\n    if (formData.adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED) {\n        cleanedData.antallBarn = formData.antallBarn;\n        cleanedData.adopsjonsdato = formData.adopsjonsdato;\n        cleanedData.fÃ¸dselsdatoer = formData.fÃ¸dselsdatoer;\n        cleanedData.omsorgsovertakelse = formData.omsorgsovertakelse;\n        cleanedData.adopsjonAvEktefellesBarn = formData.adopsjonAvEktefellesBarn;\n        cleanedData.sÃ¸kerAdopsjonAlene = formData.sÃ¸kerAdopsjonAlene;\n    }\n    return cleanedData as OmBarnetFormData;\n};\n","import {\n    erMindreEnn3UkerSiden,\n    etterDagensDato,\n    hasValue,\n    sisteDatoBarnetKanVÃ¦reFÃ¸dt,\n    sisteMuligeTermindato,\n    utstedtDatoErIUke22,\n    sisteMuligeDatoForOvertaOmsorg,\n    intlUtils,\n} from '@navikt/fp-common';\nimport datepickerUtils from '@navikt/sif-common-formik-ds/lib/components/formik-datepicker/datepickerUtils';\nimport { IntlShape } from 'react-intl';\n\nexport const validateEktefellensBarnAdopsjonDate = (dato: string, intl: IntlShape) => {\n    if (!hasValue(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.adopsjonDato.ektefellensBarn.duMÃ¥Oppgi');\n    }\n\n    if (!datepickerUtils.isValidFormattedDateString(dato)) {\n        return intlUtils(intl, 'invalidFormatErrorKey.adopsjonsdato');\n    }\n\n    if (sisteMuligeDatoForOvertaOmsorg(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.adopsjonDato.forLangtFremITid');\n    }\n\n    return undefined;\n};\n\nexport const validateOvertaOmsorgAdopsjonDate = (dato: string, intl: IntlShape) => {\n    if (!hasValue(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.adopsjonDato.overtaOmsorg.duMÃ¥Oppgi');\n    }\n    if (sisteMuligeDatoForOvertaOmsorg(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.adopsjonDato.forLangtFremITid');\n    }\n    return undefined;\n};\n\nexport const validateNÃ¥rKommerBarnetDate = (dato: string, intl: IntlShape) => {\n    if (!hasValue(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.nÃ¥rKommerBarnetDato.duMÃ¥Oppgi');\n    }\n    return undefined;\n};\n\nexport const validateFÃ¸dselDate = (dato: string, intl: IntlShape) => {\n    if (!hasValue(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fodselsdato.duMÃ¥Oppgi');\n    }\n    if (etterDagensDato(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fodselsdato.mÃ¥VÃ¦reIdagEllerTidligere');\n    }\n    if (sisteDatoBarnetKanVÃ¦reFÃ¸dt(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fodselsdato.ikkeMerEnn6MÃ¥nederTilbake');\n    }\n    return undefined;\n};\n\nexport const validateAdopsjonFÃ¸dselDate = (\n    dato: string | undefined,\n    adopsjonsdato: string | undefined,\n    intl: IntlShape\n) => {\n    if (!hasValue(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fodselsdato.duMÃ¥Oppgi');\n    }\n\n    if (!datepickerUtils.isValidFormattedDateString(dato)) {\n        return intlUtils(intl, 'invalidFormatErrorKey.fÃ¸dselsdato');\n    }\n\n    if (!dato || !adopsjonsdato) {\n        return undefined;\n    }\n    if (etterDagensDato(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.fodselsdato.mÃ¥VÃ¦reIdagEllerTidligere');\n    }\n    return undefined;\n};\n\nexport const validateTerminDate = (dato: string, intl: IntlShape) => {\n    if (!hasValue(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.duMÃ¥Oppgi');\n    }\n    if (!datepickerUtils.isValidFormattedDateString(dato)) {\n        return intlUtils(intl, 'invalidFormatErrorKey.termindato');\n    }\n    if (!erMindreEnn3UkerSiden(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.termindatoKanIkkeVÃ¦re3UkerFraIdag');\n    }\n    if (sisteMuligeTermindato(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.termindato.duMÃ¥VÃ¦reIUke22');\n    }\n    return undefined;\n};\n\nexport const valideringAvTerminbekreftelsesdato = (\n    dato: string | undefined,\n    termindato: string | undefined,\n    intl: IntlShape\n) => {\n    if (!hasValue(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.terminbekreftelseDato.duMÃ¥Oppgi');\n    }\n    if (!dato || !termindato) {\n        return undefined;\n    }\n\n    if (!datepickerUtils.isValidFormattedDateString(dato)) {\n        return intlUtils(intl, 'invalidFormatErrorKey.terminBekreftelsedato');\n    }\n\n    if (etterDagensDato(dato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.terminbekreftelseDato.mÃ¥VÃ¦reIdagEllerTidligere');\n    }\n    if (!utstedtDatoErIUke22(dato, termindato)) {\n        return intlUtils(intl, 'valideringsfeil.omBarnet.terminbekreftelseDato.duMÃ¥VÃ¦reIUke22');\n    }\n    return undefined;\n};\n","import { Block, intlUtils } from '@navikt/fp-common';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport getMessage from 'common/util/i18nUtils';\nimport dayjs from 'dayjs';\nimport { FieldArray } from 'formik';\nimport React from 'react';\nimport { useIntl } from 'react-intl';\nimport { OmBarnetFormComponents, OmBarnetFormData, OmBarnetFormField } from '../omBarnetFormConfig';\nimport { validateFÃ¸dselDate } from '../omBarnetValidering';\n\ninterface FÃ¸dtprops {\n    formValues: OmBarnetFormData;\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>;\n}\n\nconst FÃ¸dt: React.FunctionComponent<FÃ¸dtprops> = ({ visibility, formValues }) => {\n    const intl = useIntl();\n\n    if (formValues.erBarnetFÃ¸dt === YesOrNo.NO || formValues.erBarnetFÃ¸dt === YesOrNo.UNANSWERED) {\n        return null;\n    }\n    return (\n        <>\n            {visibility.isVisible(OmBarnetFormField.antallBarn) && (\n                <>\n                    <Block margin=\"xl\">\n                        <OmBarnetFormComponents.RadioGroup\n                            name={OmBarnetFormField.antallBarn}\n                            radios={[\n                                {\n                                    label: intlUtils(intl, 'omBarnet.radiobutton.ettbarn'),\n                                    value: '1',\n                                },\n                                {\n                                    label: intlUtils(intl, 'omBarnet.radiobutton.tvillinger'),\n                                    value: '2',\n                                },\n                                {\n                                    label: intlUtils(intl, 'omBarnet.radiobutton.flere'),\n                                    value: '3',\n                                },\n                            ]}\n                            legend={getMessage(intl, 'omBarnet.text.antallBarn.fÃ¸dt')}\n                        />\n                    </Block>\n                    {formValues.antallBarn && parseInt(formValues.antallBarn, 10) >= 3 && (\n                        <Block margin=\"xl\">\n                            <OmBarnetFormComponents.Select\n                                name={OmBarnetFormField.antallBarn}\n                                label={getMessage(intl, 'omBarnet.text.antallBarn.fÃ¸dt')}\n                            >\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                                <option value=\"5\">5</option>\n                                <option value=\"6\">6</option>\n                                <option value=\"7\">7</option>\n                                <option value=\"8\">8</option>\n                                <option value=\"9\">9</option>\n                            </OmBarnetFormComponents.Select>\n                        </Block>\n                    )}\n                </>\n            )}\n            {visibility.isVisible(OmBarnetFormField.fÃ¸dselsdatoer) && (\n                <Block margin=\"xl\">\n                    <FieldArray\n                        name={OmBarnetFormField.fÃ¸dselsdatoer}\n                        render={() => [\n                            <OmBarnetFormComponents.DatePicker\n                                key={`${OmBarnetFormField.fÃ¸dselsdatoer}.0`}\n                                name={`${OmBarnetFormField.fÃ¸dselsdatoer}.0` as OmBarnetFormField}\n                                label={getMessage(intl, 'sÃ¸knad.fÃ¸dselsdato')}\n                                minDate={dayjs().subtract(6, 'month').toDate()}\n                                maxDate={dayjs().toDate()}\n                                validate={(value) => validateFÃ¸dselDate(value, intl)}\n                                placeholder={'dd.mm.Ã¥Ã¥Ã¥Ã¥'}\n                            />,\n                        ]}\n                    />\n                </Block>\n            )}\n        </>\n    );\n};\nexport default FÃ¸dt;\n","export interface Attachment {\n    id: string;\n    filename: string;\n    filesize: number;\n    file: File;\n    url?: string;\n    uuid?: string;\n    pending: boolean;\n    uploaded: boolean;\n    type: AttachmentType;\n    skjemanummer: Skjemanummer;\n    error?: any;\n}\n\nexport enum AttachmentType {\n    TERMINBEKREFTELSE = 'terminbekreftelse',\n    OMSORGSOVERTAKELSE = 'omsorgsovertakelse',\n}\n\nexport enum Skjemanummer {\n    TERMINBEKREFTELSE = 'I000062',\n    OMSORGSOVERTAKELSE = 'I000042',\n}\n","import { Attachment } from '../attachment/types/Attachment';\nimport axios from 'axios';\n\nfunction saveAttachment(attachment: Attachment) {\n    const config = {\n        withCredentials: true,\n        timeout: 45 * 1000,\n        headers: {\n            'content-type': 'multipart/form-data',\n        },\n    };\n\n    const formData = new FormData();\n    formData.append('id', attachment.id);\n    formData.append('vedlegg', attachment.file, attachment.filename);\n\n    const url = `${(window as any).REST_API_URL}/storage/vedlegg`;\n    return axios.post(url, formData, config);\n}\n\nconst AttachmentApi = { saveAttachment };\n\nexport default AttachmentApi;\n","import * as React from 'react';\nimport { ArrayHelpers, useFormikContext } from 'formik';\nimport { Attachment, AttachmentType, Skjemanummer } from 'common/storage/attachment/types/Attachment';\nimport FormikFileInput from '@navikt/sif-common-formik-ds/lib/components/formik-file-input/FormikFileInput';\nimport { OmBarnetFormData, OmBarnetFormField } from 'app/steps/om-barnet/omBarnetFormConfig';\nimport { isAttachmentWithError, mapFileToAttachment } from 'common/storage/attachment/components/util';\nimport AttachmentApi from 'common/storage/api/attachmentApi';\nimport AttachmentList from 'common/storage/attachment/components/AttachmentList';\nimport { Block } from '@navikt/fp-common';\n\nexport type FieldArrayReplaceFn = (index: number, value: any) => void;\nexport type FieldArrayPushFn = (obj: any) => void;\nexport type FieldArrayRemoveFn = (index: number) => undefined;\n\ninterface Props {\n    attachments: Attachment[];\n    name: OmBarnetFormField;\n    label: string;\n    legend: string;\n    description?: string;\n    validate?: any;\n    onFileInputClick?: () => void;\n}\n\nconst VALID_EXTENSIONS = ['.pdf', '.jpeg', '.jpg', '.png'];\n\nconst getAttachmentFromFile = (file: File, name: string): Attachment => {\n    if (name === OmBarnetFormField.terminbekreftelse) {\n        return mapFileToAttachment(file, AttachmentType.TERMINBEKREFTELSE, Skjemanummer.TERMINBEKREFTELSE);\n    }\n    return mapFileToAttachment(file, AttachmentType.OMSORGSOVERTAKELSE, Skjemanummer.OMSORGSOVERTAKELSE);\n};\n\nconst getPendingAttachmentFromFile = (file: File, name: string): Attachment => {\n    const newAttachment = getAttachmentFromFile(file, name);\n    newAttachment.pending = true;\n    return newAttachment;\n};\n\nconst attachmentUploadHasFailed = ({ pending, uploaded, file: { name } }: Attachment): boolean =>\n    (!pending && !uploaded) || !fileExtensionIsValid(name);\n\nconst fileExtensionIsValid = (filename: string): boolean => {\n    const ext = filename.split('.').pop();\n    return VALID_EXTENSIONS.includes(`.${ext!.toLowerCase()}`);\n};\n\nlet removeFn: FieldArrayRemoveFn;\n\nconst FormikFileUploader: React.FunctionComponent<Props> = ({\n    attachments,\n    name,\n    onFileInputClick,\n    label,\n    legend,\n    description,\n    ...otherProps\n}) => {\n    const { values } = useFormikContext<OmBarnetFormData>();\n\n    async function uploadAttachment(attachment: Attachment) {\n        try {\n            const response = await AttachmentApi.saveAttachment(attachment);\n            attachment = setAttachmentPendingToFalse(attachment);\n            attachment.url = response.headers.location;\n            attachment.uploaded = true;\n            attachment.uuid = response.data;\n        } catch (error) {\n            setAttachmentPendingToFalse(attachment);\n        }\n    }\n\n    async function uploadAttachments(allAttachments: Attachment[], replaceFn: FieldArrayReplaceFn) {\n        for (const attachment of allAttachments) {\n            await uploadAttachment(attachment);\n            updateAttachmentListElement(allAttachments, attachment, replaceFn);\n        }\n\n        const failedAttachments = [...allAttachments.filter(attachmentUploadHasFailed)];\n        updateFailedAttachments(allAttachments, failedAttachments, replaceFn);\n    }\n\n    function updateFailedAttachments(\n        allAttachments: Attachment[],\n        failedAttachments: Attachment[],\n        replaceFn: FieldArrayReplaceFn\n    ) {\n        failedAttachments.forEach((attachment) => {\n            attachment = setAttachmentPendingToFalse(attachment);\n            updateAttachmentListElement(allAttachments, attachment, replaceFn);\n        });\n    }\n\n    function updateAttachmentListElement(atts: Attachment[], attachment: Attachment, replaceFn: FieldArrayReplaceFn) {\n        replaceFn(atts.indexOf(attachment), attachment);\n    }\n\n    function setAttachmentPendingToFalse(attachment: Attachment) {\n        attachment.pending = false;\n        return attachment;\n    }\n\n    function addPendingAttachmentToFieldArray(file: File, pushFn: FieldArrayPushFn) {\n        const attachment = getPendingAttachmentFromFile(file, name);\n        pushFn(attachment);\n        return attachment;\n    }\n\n    return (\n        <>\n            <FormikFileInput\n                name={name}\n                accept={VALID_EXTENSIONS.join(', ')}\n                onFilesSelect={async (files: File[], { push, replace, remove }: ArrayHelpers) => {\n                    removeFn = remove;\n                    const atts = files.map((file) => addPendingAttachmentToFieldArray(file, push));\n                    await uploadAttachments([...(values as any)[name], ...atts], replace);\n                }}\n                onClick={onFileInputClick}\n                legend={legend}\n                buttonLabel={label}\n                description={description}\n                {...otherProps}\n            />\n            <Block margin=\"xl\">\n                <AttachmentList\n                    attachments={attachments.filter((a) => !isAttachmentWithError(a))}\n                    showFileSize={true}\n                    onDelete={(file: Attachment) => {\n                        removeFn(attachments.indexOf(file));\n                    }}\n                />\n            </Block>\n        </>\n    );\n};\n\nexport default FormikFileUploader;\n","import { Block, intlUtils, PictureScanningGuide, UtvidetInformasjon } from '@navikt/fp-common';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport FormikFileUploader from 'app/components/formik-file-uploader/FormikFileUploader';\nimport getMessage from 'common/util/i18nUtils';\nimport dayjs from 'dayjs';\nimport React from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { OmBarnetFormComponents, OmBarnetFormData, OmBarnetFormField } from '../omBarnetFormConfig';\nimport { validateTerminDate, valideringAvTerminbekreftelsesdato } from '../omBarnetValidering';\n\ninterface FÃ¸dtprops {\n    formValues: OmBarnetFormData;\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>;\n}\n\nconst Termin: React.FunctionComponent<FÃ¸dtprops> = ({ visibility, formValues }) => {\n    const intl = useIntl();\n\n    if (formValues.erBarnetFÃ¸dt === YesOrNo.YES || formValues.erBarnetFÃ¸dt === YesOrNo.UNANSWERED) {\n        return null;\n    }\n    return (\n        <>\n            {visibility.isVisible(OmBarnetFormField.antallBarn) && (\n                <>\n                    <Block margin=\"xl\">\n                        <OmBarnetFormComponents.RadioGroup\n                            name={OmBarnetFormField.antallBarn}\n                            radios={[\n                                {\n                                    label: intlUtils(intl, 'omBarnet.radiobutton.ettbarn'),\n                                    value: '1',\n                                },\n                                {\n                                    label: intlUtils(intl, 'omBarnet.radiobutton.tvillinger'),\n                                    value: '2',\n                                },\n                                {\n                                    label: intlUtils(intl, 'omBarnet.radiobutton.flere'),\n                                    value: '3',\n                                },\n                            ]}\n                            legend={getMessage(intl, 'omBarnet.text.antallBarn.termin')}\n                        />\n                    </Block>\n                    {formValues.antallBarn && parseInt(formValues.antallBarn, 10) >= 3 && (\n                        <Block margin=\"xl\">\n                            <OmBarnetFormComponents.Select name={OmBarnetFormField.antallBarn} label=\"test\">\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                                <option value=\"5\">5</option>\n                                <option value=\"6\">6</option>\n                                <option value=\"7\">7</option>\n                                <option value=\"8\">8</option>\n                                <option value=\"9\">9</option>\n                            </OmBarnetFormComponents.Select>\n                        </Block>\n                    )}\n                </>\n            )}\n            {visibility.isVisible(OmBarnetFormField.termindato) && (\n                <Block margin=\"xl\">\n                    <OmBarnetFormComponents.DatePicker\n                        name={OmBarnetFormField.termindato}\n                        label={getMessage(intl, 'sÃ¸knad.termindato')}\n                        minDate={dayjs().subtract(3, 'week').toDate()}\n                        maxDate={dayjs().add(18, 'weeks').add(3, 'days').toDate()}\n                        validate={(value) => validateTerminDate(value, intl)}\n                        placeholder={'dd.mm.Ã¥Ã¥Ã¥Ã¥'}\n                    />\n                </Block>\n            )}\n            {visibility.isVisible(OmBarnetFormField.terminbekreftelse) && (\n                <>\n                    <Block margin=\"xl\">\n                        <FormikFileUploader\n                            attachments={formValues.terminbekreftelse || []}\n                            label={getMessage(intl, 'vedlegg.lastoppknapp.label')}\n                            legend={getMessage(intl, 'vedlegg.terminbekreftelse')}\n                            description={getMessage(intl, 'terminbekreftelsen.text.terminbekreftelsen')}\n                            name={OmBarnetFormField.terminbekreftelse}\n                        />\n                        <UtvidetInformasjon apneLabel={<FormattedMessage id=\"psg.Ã¥pneLabel\" />}>\n                            <PictureScanningGuide backgroundColor=\"white\" />\n                        </UtvidetInformasjon>\n                    </Block>\n                </>\n            )}\n            {visibility.isVisible(OmBarnetFormField.terminbekreftelsedato) && (\n                <Block margin=\"xl\">\n                    <OmBarnetFormComponents.DatePicker\n                        name={OmBarnetFormField.terminbekreftelsedato}\n                        label={getMessage(intl, 'sÃ¸knad.terminbekreftelsesdato')}\n                        minDate={dayjs(formValues.termindato).subtract(18, 'week').subtract(3, 'day').toDate()}\n                        maxDate={dayjs().toDate()}\n                        validate={(terminBekreftelseDato) =>\n                            valideringAvTerminbekreftelsesdato(terminBekreftelseDato, formValues.termindato, intl)\n                        }\n                    />\n                </Block>\n            )}\n        </>\n    );\n};\nexport default Termin;\n","import { Block, intlUtils, PictureScanningGuide, UtvidetInformasjon } from '@navikt/fp-common';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { QuestionVisibility } from '@navikt/sif-common-question-config/lib';\nimport FormikFileUploader from 'app/components/formik-file-uploader/FormikFileUploader';\nimport { KjÃ¸nn } from 'app/types/domain/Person';\nimport getMessage from 'common/util/i18nUtils';\nimport dayjs from 'dayjs';\nimport { FieldArray } from 'formik';\nimport React from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { OmBarnetFormComponents, OmBarnetFormData, OmBarnetFormField } from '../omBarnetFormConfig';\nimport {\n    validateAdopsjonFÃ¸dselDate,\n    validateEktefellensBarnAdopsjonDate,\n    validateOvertaOmsorgAdopsjonDate,\n} from '../omBarnetValidering';\n\ninterface FÃ¸dtprops {\n    formValues: OmBarnetFormData;\n    visibility: QuestionVisibility<OmBarnetFormField, undefined>;\n    kjÃ¸nn: KjÃ¸nn;\n}\n\nconst Adopsjon: React.FunctionComponent<FÃ¸dtprops> = ({ visibility, formValues }) => {\n    const intl = useIntl();\n\n    if (formValues.adopsjonAvEktefellesBarn === YesOrNo.UNANSWERED) {\n        return null;\n    }\n\n    return (\n        <>\n            {visibility.isVisible(OmBarnetFormField.adopsjonsdato) && (\n                <Block margin=\"xl\">\n                    <OmBarnetFormComponents.DatePicker\n                        name={OmBarnetFormField.adopsjonsdato}\n                        label={\n                            formValues.adopsjonAvEktefellesBarn === YesOrNo.YES\n                                ? getMessage(intl, 'omBarnet.adopsjon.spÃ¸rsmÃ¥l.stebarnsadopsjondato')\n                                : getMessage(intl, 'omBarnet.adopsjon.spÃ¸rsmÃ¥l.overtaomsorgdato')\n                        }\n                        minDate={dayjs().subtract(6, 'month').toDate()}\n                        validate={\n                            formValues.adopsjonAvEktefellesBarn === YesOrNo.YES\n                                ? (value) => validateEktefellensBarnAdopsjonDate(value, intl)\n                                : (value) => validateOvertaOmsorgAdopsjonDate(value, intl)\n                        }\n                        placeholder={'dd.mm.Ã¥Ã¥Ã¥Ã¥'}\n                    />\n                </Block>\n            )}\n            {visibility.isVisible(OmBarnetFormField.antallBarn) && (\n                <>\n                    <Block margin=\"xl\">\n                        <OmBarnetFormComponents.RadioGroup\n                            name={OmBarnetFormField.antallBarn}\n                            radios={[\n                                {\n                                    label: intlUtils(intl, 'omBarnet.radiobutton.ettbarn'),\n                                    value: '1',\n                                },\n                                {\n                                    label: intlUtils(intl, 'omBarnet.radiobutton.toBarn'),\n                                    value: '2',\n                                },\n                                {\n                                    label: intlUtils(intl, 'omBarnet.radiobutton.flere'),\n                                    value: '3',\n                                },\n                            ]}\n                            legend={getMessage(intl, 'omBarnet.adopsjon.spÃ¸rsmÃ¥l.antallBarnAdoptert')}\n                        />\n                    </Block>\n\n                    {formValues.antallBarn && parseInt(formValues.antallBarn, 10) >= 3 && (\n                        <Block margin=\"xl\">\n                            <OmBarnetFormComponents.Select\n                                name={OmBarnetFormField.antallBarn}\n                                label={getMessage(intl, 'omBarnet.text.antallBarn.omsorgsovertakelse')}\n                            >\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                                <option value=\"5\">5</option>\n                                <option value=\"6\">6</option>\n                                <option value=\"7\">7</option>\n                                <option value=\"8\">8</option>\n                                <option value=\"9\">9</option>\n                            </OmBarnetFormComponents.Select>\n                        </Block>\n                    )}\n                </>\n            )}\n            {visibility.isVisible(OmBarnetFormField.fÃ¸dselsdatoer) && (\n                <Block margin=\"xl\">\n                    <FieldArray\n                        name={OmBarnetFormField.fÃ¸dselsdatoer}\n                        render={() =>\n                            [...Array(parseInt(formValues.antallBarn!, 10))].map((_, index) => {\n                                return (\n                                    <Block padBottom=\"l\" key={`${index}`}>\n                                        <OmBarnetFormComponents.DatePicker\n                                            name={`${OmBarnetFormField.fÃ¸dselsdatoer}.${index}` as OmBarnetFormField}\n                                            label={\n                                                formValues.antallBarn === '1'\n                                                    ? getMessage(intl, 'sÃ¸knad.fÃ¸dselsdato')\n                                                    : getMessage(\n                                                          intl,\n                                                          `omBarnet.adopsjon.spÃ¸rsmÃ¥l.fÃ¸dselsdato.${index + 1}`\n                                                      )\n                                            }\n                                            minDate={dayjs().subtract(15, 'year').toDate()}\n                                            maxDate={dayjs().toDate()}\n                                            validate={(fÃ¸dselsDatoer) =>\n                                                validateAdopsjonFÃ¸dselDate(\n                                                    fÃ¸dselsDatoer,\n                                                    formValues.adopsjonsdato,\n                                                    intl\n                                                )\n                                            }\n                                            placeholder={'dd.mm.Ã¥Ã¥Ã¥Ã¥'}\n                                        />\n                                    </Block>\n                                );\n                            })\n                        }\n                    />\n                </Block>\n            )}\n            {visibility.isVisible(OmBarnetFormField.sÃ¸kerAdopsjonAlene) && (\n                <Block margin=\"xl\">\n                    <OmBarnetFormComponents.YesOrNoQuestion\n                        name={OmBarnetFormField.sÃ¸kerAdopsjonAlene}\n                        legend={getMessage(intl, 'omBarnet.adopsjon.spÃ¸rsmÃ¥l.adoptererDuAlene')}\n                        labels={{\n                            no: getMessage(intl, 'omBarnet.adopsjon.text.nei'),\n                            yes: getMessage(intl, 'omBarnet.adopsjon.text.ja'),\n                        }}\n                    />\n                </Block>\n            )}\n            {visibility.isVisible(OmBarnetFormField.omsorgsovertakelse) && (\n                <>\n                    <Block margin=\"xl\">\n                        <FormikFileUploader\n                            attachments={formValues.omsorgsovertakelse || []}\n                            label={getMessage(intl, 'vedlegg.lastoppknapp.label')}\n                            legend={getMessage(intl, 'vedlegg.adopsjon')}\n                            name={OmBarnetFormField.omsorgsovertakelse}\n                            description={getMessage(intl, 'omBarnet.adopsjon.veilederpanel.adopsjon.text')}\n                        />\n                        <UtvidetInformasjon apneLabel={<FormattedMessage id=\"psg.Ã¥pneLabel\" />}>\n                            <PictureScanningGuide backgroundColor=\"white\" />\n                        </UtvidetInformasjon>\n                    </Block>\n                </>\n            )}\n        </>\n    );\n};\nexport default Adopsjon;\n","import { bemUtils, Block, intlUtils, Step, useDocumentTitle } from '@navikt/fp-common';\nimport React from 'react';\nimport { useIntl } from 'react-intl';\nimport { Button } from '@navikt/ds-react';\nimport {\n    OmBarnetFormComponents,\n    OmBarnetFormField,\n    OmBarnetFormData,\n    initialOmBarnetValues,\n} from './omBarnetFormConfig';\nimport omBarnetQuestionsConfig from './omBarnetQuestionsConfig';\nimport getMessage from 'common/util/i18nUtils';\nimport { useNavigate } from 'react-router-dom';\nimport { UnansweredQuestionsInfo, YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport actionCreator from 'app/context/action/actionCreator';\nimport stepConfig, { getPreviousStepHref } from 'app/step-config/stepConfig';\nimport { cleanupOmBarnet } from './omBarnetUtils';\nimport { useEngangsstÃ¸nadContext } from 'app/context/hooks/useEngangsstÃ¸nadContext';\nimport FÃ¸dt from './situasjon/FÃ¸dt';\nimport Termin from './situasjon/Termin';\n\nimport { onAvbrytSÃ¸knad } from 'app/util/globalUtil';\nimport { logAmplitudeEvent } from 'app/amplitude/amplitude';\nimport { PageKeys } from 'app/types/PageKeys';\nimport Adopsjon from './situasjon/Adopsjon';\nimport Person from 'app/types/domain/Person';\n\nimport './omBarnet.less';\n\ninterface Props {\n    person: Person;\n}\n\nconst shouldResetInitialValues = (\n    situasjon: string,\n    erBarnetFÃ¸dt: YesOrNo,\n    adopsjonAvEktefellesBarn: YesOrNo\n): boolean => {\n    if (\n        (situasjon === 'adopsjon' && erBarnetFÃ¸dt !== YesOrNo.UNANSWERED) ||\n        (situasjon === 'fÃ¸dsel' && adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED)\n    ) {\n        return true;\n    }\n\n    return false;\n};\n\nconst OmBarnet: React.FunctionComponent<Props> = ({ person }) => {\n    const intl = useIntl();\n    const bem = bemUtils('omBarnet');\n    const navigate = useNavigate();\n    useDocumentTitle(intlUtils(intl, 'sÃ¸knad.omBarnet'));\n    const { state, dispatch } = useEngangsstÃ¸nadContext();\n    const sÃ¸kersituasjonValues = state.sÃ¸knad.sÃ¸kersituasjon;\n    const { omBarnet } = state.sÃ¸knad;\n    const { situasjon } = sÃ¸kersituasjonValues;\n    const initialValues = shouldResetInitialValues(situasjon!, omBarnet.erBarnetFÃ¸dt, omBarnet.adopsjonAvEktefellesBarn)\n        ? initialOmBarnetValues\n        : omBarnet;\n\n    logAmplitudeEvent('sidevisning', {\n        app: 'engangsstonadny',\n        team: 'foreldrepenger',\n        pageKey: PageKeys.OmBarnet,\n    });\n\n    const onValidSubmit = (values: Partial<OmBarnetFormData>) => {\n        dispatch(\n            actionCreator.setOmBarnet({\n                erBarnetFÃ¸dt: values.erBarnetFÃ¸dt!,\n                adopsjonAvEktefellesBarn: values.adopsjonAvEktefellesBarn!,\n                antallBarn: values.antallBarn,\n                adopsjonsdato: values.adopsjonsdato,\n                sÃ¸kerAdopsjonAlene: values.sÃ¸kerAdopsjonAlene!,\n                fÃ¸dselsdatoer: values.fÃ¸dselsdatoer || [],\n                termindato: values.termindato,\n                terminbekreftelse: values.terminbekreftelse || [],\n                omsorgsovertakelse: values.omsorgsovertakelse || [],\n                terminbekreftelsedato: values.terminbekreftelsedato,\n            })\n        );\n        navigate('/soknad/utenlandsopphold');\n    };\n\n    return (\n        <OmBarnetFormComponents.FormikWrapper\n            initialValues={initialValues}\n            onSubmit={(values) => onValidSubmit(values)}\n            renderForm={({ values: formValues }) => {\n                // @ts-ignore Fiks denne\n                const visibility = omBarnetQuestionsConfig.getVisbility({\n                    ...formValues,\n                    situasjon: sÃ¸kersituasjonValues.situasjon!,\n                    kjÃ¸nn: person.kjÃ¸nn,\n                });\n                const allQuestionsAnswered = visibility.areAllQuestionsAnswered();\n                return (\n                    <Step\n                        bannerTitle={getMessage(intl, 'sÃ¸knad.pageheading')}\n                        activeStepId=\"omBarnet\"\n                        pageTitle={getMessage(intl, 'sÃ¸knad.omBarnet')}\n                        stepTitle={getMessage(intl, 'sÃ¸knad.omBarnet')}\n                        backLinkHref={getPreviousStepHref('omBarnet')}\n                        onCancel={() => onAvbrytSÃ¸knad(dispatch, navigate)}\n                        steps={stepConfig}\n                        kompakt={true}\n                    >\n                        <OmBarnetFormComponents.Form\n                            includeButtons={false}\n                            // @ts-ignore Fiks denne\n                            cleanup={() => cleanupOmBarnet(formValues)}\n                            noButtonsContentRenderer={\n                                allQuestionsAnswered\n                                    ? undefined\n                                    : () => (\n                                          <UnansweredQuestionsInfo>\n                                              {intlUtils(intl, 'sÃ¸knad.footer.spÃ¸rsmÃ¥lMÃ¥Besvares')}\n                                          </UnansweredQuestionsInfo>\n                                      )\n                            }\n                        >\n                            <div className={bem.block}>\n                                {sÃ¸kersituasjonValues.situasjon === 'adopsjon' ? (\n                                    <Block>\n                                        <OmBarnetFormComponents.YesOrNoQuestion\n                                            name={OmBarnetFormField.adopsjonAvEktefellesBarn}\n                                            legend={getMessage(intl, 'omBarnet.adopsjon.spÃ¸rsmÃ¥l.stebarnsadopsjon')}\n                                            labels={{\n                                                no: getMessage(intl, 'omBarnet.adopsjon.text.nei'),\n                                                yes: getMessage(intl, 'omBarnet.adopsjon.text.ja'),\n                                            }}\n                                        />\n                                    </Block>\n                                ) : (\n                                    <Block>\n                                        <OmBarnetFormComponents.YesOrNoQuestion\n                                            name={OmBarnetFormField.erBarnetFÃ¸dt}\n                                            legend={getMessage(intl, 'omBarnet.spÃ¸rsmÃ¥l.erBarnetFÃ¸dt')}\n                                            labels={{\n                                                no: getMessage(intl, 'omBarnet.radiobutton.nei'),\n                                                yes: getMessage(intl, 'omBarnet.radiobutton.ja'),\n                                            }}\n                                        />\n                                    </Block>\n                                )}\n                                <Adopsjon\n                                    visibility={visibility}\n                                    // @ts-ignore Fiks denne\n                                    formValues={formValues}\n                                    kjÃ¸nn={person.kjÃ¸nn}\n                                />\n                                <FÃ¸dt\n                                    visibility={visibility}\n                                    // @ts-ignore Fiks denne\n                                    formValues={formValues}\n                                />\n                                <Termin\n                                    visibility={visibility}\n                                    // @ts-ignore Fiks denne\n                                    formValues={formValues}\n                                />\n\n                                {allQuestionsAnswered && (\n                                    <Block margin=\"xl\" textAlignCenter={true}>\n                                        <Button type=\"submit\">{getMessage(intl, 'sÃ¸knad.gÃ¥Videre')}</Button>\n                                    </Block>\n                                )}\n                            </div>\n                        </OmBarnetFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default OmBarnet;\n"],"names":["GoodScanning","title","height","_jsxs","_jsx","KeystoneScanning","HorizontalScanning","ShadowScanning","ScanningIkon","props","PictureScanningGuide","backgroundColor","intl","useIntl","svgIconHeight","bem","bemUtils","classNames","Heading","FormattedMessage","msg","PictureScanningExample","intlHelper","Link","OmBarnetFormConfig","OmBarnetFormField","situasjon","adopsjonAvEktefellesBarn","YesOrNo","erBarnetFÃ¸dt","antallBarn","hasValue","adopsjonsdato","kjÃ¸nn","sÃ¸kerAdopsjonAlene","fÃ¸dselsdatoer","omsorgsovertakelse","termindato","terminbekreftelse","terminbekreftelsedato","omBarnetQuestionsConfig","Questions","cleanupOmBarnet","formData","cleanedData","validateEktefellensBarnAdopsjonDate","dato","intlUtils","datepickerUtils","sisteMuligeDatoForOvertaOmsorg","validateOvertaOmsorgAdopsjonDate","validateFÃ¸dselDate","etterDagensDato","sisteDatoBarnetKanVÃ¦reFÃ¸dt","validateAdopsjonFÃ¸dselDate","validateTerminDate","erMindreEnn3UkerSiden","sisteMuligeTermindato","valideringAvTerminbekreftelsesdato","utstedtDatoErIUke22","FÃ¸dt","visibility","formValues","jsxs","Fragment","jsx","Block","OmBarnetFormComponents","getMessage","FieldArray","dayjs","value","AttachmentType","Skjemanummer","saveAttachment","attachment","config","url","axios","AttachmentApi","VALID_EXTENSIONS","getAttachmentFromFile","file","name","mapFileToAttachment","getPendingAttachmentFromFile","newAttachment","attachmentUploadHasFailed","pending","uploaded","fileExtensionIsValid","filename","ext","removeFn","FormikFileUploader","attachments","onFileInputClick","label","legend","description","otherProps","values","useFormikContext","uploadAttachment","response","setAttachmentPendingToFalse","uploadAttachments","allAttachments","replaceFn","updateAttachmentListElement","failedAttachments","updateFailedAttachments","atts","addPendingAttachmentToFieldArray","pushFn","FormikFileInput","files","push","replace","remove","AttachmentList","a","isAttachmentWithError","Termin","UtvidetInformasjon","terminBekreftelseDato","Adopsjon","_","index","fÃ¸dselsDatoer","shouldResetInitialValues","OmBarnet","person","navigate","useNavigate","useDocumentTitle","state","dispatch","useEngangsstÃ¸nadContext","sÃ¸kersituasjonValues","omBarnet","initialValues","initialOmBarnetValues","logAmplitudeEvent","PageKeys","onValidSubmit","actionCreator","allQuestionsAnswered","Step","getPreviousStepHref","onAvbrytSÃ¸knad","stepConfig","UnansweredQuestionsInfo","Button","OmBarnet$1"],"mappings":"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"}