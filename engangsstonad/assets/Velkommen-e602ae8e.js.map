{"version":3,"file":"Velkommen-e602ae8e.js","sources":["../../../../node_modules/.pnpm/react-aria-menubutton@7.0.3_react@18.2.0/node_modules/react-aria-menubutton/dist/index.js","../../../../packages/fp-common/lib/components/language-toggle/NorwayFlag.js","../../../../packages/fp-common/lib/components/language-toggle/LanguageToggle.js","../../src/app/components/modal-content/Personopplysninger.tsx","../../src/app/components/modal-content/Plikter.tsx","../../src/app/pages/velkommen/Velkommen.tsx"],"sourcesContent":["'use strict';\n\nvar externalStateControl = require('./externalStateControl');\n\nmodule.exports = {\n  Wrapper: require('./Wrapper'),\n  Button: require('./Button'),\n  Menu: require('./Menu'),\n  MenuItem: require('./MenuItem'),\n  openMenu: externalStateControl.openMenu,\n  closeMenu: externalStateControl.closeMenu\n};","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst NorwayFlagSVG = () => (_jsxs(\"svg\", { focusable: \"false\", role: \"img\", \"aria-hidden\": \"true\", width: 25, height: 18, children: [_jsx(\"title\", { children: 'Flag_of_Norway' }), _jsxs(\"g\", { fill: \"none\", fillRule: \"evenodd\", children: [_jsx(\"path\", { fill: \"#EF2B2D\", d: \"M0 0h25v18H0z\" }), _jsx(\"path\", { fill: \"#FFF\", d: \"M6.875 0h4.688v18H6.875z\" }), _jsx(\"path\", { fill: \"#FFF\", d: \"M0 6.9h25v4.5H0z\" }), _jsx(\"path\", { fill: \"#002868\", d: \"M8.125 0h2.188v18H8.125z\" }), _jsx(\"path\", { fill: \"#002868\", d: \"M0 7.8h25v2.4H0z\" })] })] }));\nexport default NorwayFlagSVG;\n//# sourceMappingURL=NorwayFlag.js.map","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Button, Menu, MenuItem, Wrapper } from 'react-aria-menubutton';\nimport { useIntl } from 'react-intl';\nimport intlHelper from '../../utils/intlUtils';\nimport NorwayFlagSVG from './NorwayFlag';\nimport { Expand } from '@navikt/ds-icons';\nimport './languageToggle.less';\nconst renderMenuItem = (intl, locale) => {\n    return (_jsx(\"li\", { children: _jsxs(MenuItem, { className: \"languageToggle__menu__item\", children: [_jsx(\"div\", { className: \"languageToggle__button__flag\", children: _jsx(NorwayFlagSVG, {}) }), _jsx(\"div\", { className: \"languageToggle__button__language\", \"data-locale\": locale, children: intlHelper(intl, `locale.${locale}`) })] }) }, locale));\n};\nconst LanguageToggle = ({ locale, toggle: toggleLanguage, availableLocales, }) => {\n    const selectableOtherMenuLanguages = [...availableLocales].filter((code) => code !== locale);\n    const intl = useIntl();\n    return (_jsx(\"div\", { className: \"languageToggle\", children: _jsxs(Wrapper, { className: \"languageToggle__wrapper\", onSelection: (element) => toggleLanguage(element[1].props['data-locale']), children: [_jsxs(Button, { className: \"languageToggle__button\", children: [_jsx(\"div\", { className: \"languageToggle__button__flag\", children: _jsx(NorwayFlagSVG, {}) }), _jsx(\"div\", { className: \"languageToggle__button__language\", children: intlHelper(intl, `locale.${locale}`) }), _jsx(\"div\", { children: _jsx(Expand, {}) })] }), _jsx(Menu, { className: \"languageToggle__menu\", children: _jsx(\"ul\", { children: selectableOtherMenuLanguages.map((code) => renderMenuItem(intl, code)) }) })] }) }));\n};\nexport default LanguageToggle;\n//# sourceMappingURL=LanguageToggle.js.map","import React from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { BodyShort, Heading, Link, Label } from '@navikt/ds-react';\nimport { lenker } from 'util/lenker';\nimport getMessage from 'common/util/i18nUtils';\n\nconst Personopplysninger = () => {\n    const intl = useIntl();\n    return (\n        <div className=\"modalContent\">\n            <Heading size=\"small\" className=\"modalContent__header\">\n                {getMessage(intl, 'personopplysninger.sectionheading')}\n            </Heading>\n            <BodyShort className=\"blokk-xs\">{getMessage(intl, 'personopplysninger.ingress.1')}</BodyShort>\n            <BodyShort className=\"blokk-xs\">{getMessage(intl, 'personopplysninger.ingress.2')}</BodyShort>\n\n            <div className=\"blokk-xs\">\n                <Label className=\"blokk-xs\">\n                    {getMessage(intl, 'personopplysninger.text.opplysningerViInnhenter')}\n                </Label>\n                <BodyShort className=\"blokk-xs\">\n                    {getMessage(intl, 'personopplysninger.text.opplysningerViInnhenter.ingress')}\n                </BodyShort>\n                <ul>\n                    <li>\n                        <BodyShort>{getMessage(intl, 'personopplysninger.opplysningerViInnhenter.1')}</BodyShort>\n                    </li>\n                    <li>\n                        <BodyShort>{getMessage(intl, 'personopplysninger.opplysningerViInnhenter.2')}</BodyShort>\n                    </li>\n                    <li>\n                        <BodyShort>{getMessage(intl, 'personopplysninger.opplysningerViInnhenter.3')}</BodyShort>\n                    </li>\n                </ul>\n                <BodyShort>{getMessage(intl, 'personopplysninger.opplysningerViInnhenter.utro')}</BodyShort>\n            </div>\n\n            <div>\n                <Label className=\"blokk-xs\">\n                    {getMessage(intl, 'personopplysninger.text.lagringAvOpplysninger')}\n                </Label>\n                <BodyShort className=\"blokk-xs\">\n                    {getMessage(intl, 'personopplysninger.text.lagringAvOpplysninger.1')}\n                </BodyShort>\n                <BodyShort className=\"blokk-xs\">\n                    {getMessage(intl, 'personopplysninger.text.lagringAvOpplysninger.2')}\n                </BodyShort>\n            </div>\n\n            <div className=\"blokk-xs\">\n                <Label className=\"blokk-xs\">{getMessage(intl, 'personopplysninger.text.automatiskLagring')}</Label>\n                <BodyShort className=\"blokk-xs\">\n                    {getMessage(intl, 'personopplysninger.text.automatiskLagring.ingress')}\n                </BodyShort>\n                <ul>\n                    <li>\n                        <BodyShort>{getMessage(intl, 'personopplysninger.text.automatiskLagring.1')}</BodyShort>\n                    </li>\n                    <li>\n                        <BodyShort>{getMessage(intl, 'personopplysninger.text.automatiskLagring.2')}</BodyShort>\n                    </li>\n                    <li>\n                        <BodyShort>{getMessage(intl, 'personopplysninger.text.automatiskLagring.3')}</BodyShort>\n                    </li>\n                    <li>\n                        <BodyShort>{getMessage(intl, 'personopplysninger.text.automatiskLagring.4')}</BodyShort>\n                    </li>\n                </ul>\n            </div>\n\n            <div className=\"blokk-xs\">\n                <Label className=\"blokk-xs\">{getMessage(intl, 'personopplysninger.text.svarPåSøknaden')}</Label>\n                <BodyShort className=\"blokk-xs\">\n                    {getMessage(intl, 'personopplysninger.text.svarPåSøknaden.ingress')}\n                </BodyShort>\n                <ul>\n                    <li>\n                        <BodyShort>{getMessage(intl, 'personopplysninger.text.svarPåSøknaden.1')}</BodyShort>\n                    </li>\n                    <li>\n                        <BodyShort>{getMessage(intl, 'personopplysninger.text.svarPåSøknaden.2')}</BodyShort>\n                    </li>\n                    <li>\n                        <BodyShort>{getMessage(intl, 'personopplysninger.text.svarPåSøknaden.3')}</BodyShort>\n                    </li>\n                </ul>\n            </div>\n\n            <div>\n                <Label className=\"blokk-xs\">\n                    {getMessage(intl, 'personopplysninger.text.personvernerklæringeniNAV')}\n                </Label>\n                <BodyShort>\n                    <FormattedMessage\n                        id=\"personopplysninger.text.personvernerklering\"\n                        values={{\n                            link: (\n                                <Link href={lenker.personvernerklæring} target=\"_blank\">\n                                    <FormattedMessage id=\"personopplysninger.text.personvernerklering.link\" />\n                                </Link>\n                            ),\n                        }}\n                    />\n                </BodyShort>\n            </div>\n        </div>\n    );\n};\nexport default Personopplysninger;\n","import React from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { BodyShort, Link } from '@navikt/ds-react';\nimport getMessage from 'common/util/i18nUtils';\nimport { lenker } from 'util/lenker';\n\nimport './modalContent.less';\n\nconst Plikter = () => {\n    const intl = useIntl();\n    return (\n        <article className=\"modalContent\">\n            <ul>\n                <li>\n                    <BodyShort>{getMessage(intl, 'rettigheter.text.2')}</BodyShort>\n                </li>\n                <li>\n                    <BodyShort>\n                        <FormattedMessage\n                            id=\"rettigheter.text.lestOgForstått\"\n                            values={{\n                                link: (\n                                    <Link href={lenker.plikter} target=\"_blank\">\n                                        <FormattedMessage id=\"rettigheter.text.lestOgForstått.link\" />\n                                    </Link>\n                                ),\n                            }}\n                        />\n                    </BodyShort>\n                </li>\n            </ul>\n        </article>\n    );\n};\n\nexport default Plikter;\n","import React, { FunctionComponent, useState } from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport {\n    bemUtils,\n    LanguageToggle,\n    intlUtils,\n    Block,\n    Locale,\n    useDocumentTitle,\n    UtvidetInformasjon,\n    Sidebanner,\n} from '@navikt/fp-common';\nimport { Alert, BodyShort, Button, Heading, Ingress, Modal } from '@navikt/ds-react';\nimport { lenker } from 'util/lenker';\nimport {\n    initialVelkommenValues,\n    VelkommenFormComponents,\n    VelkommenFormData,\n    VelkommenFormField,\n} from './velkommenFormConfig';\nimport actionCreator from 'app/context/action/actionCreator';\nimport { useNavigate } from 'react-router-dom';\nimport { useEngangsstønadContext } from 'app/context/hooks/useEngangsstønadContext';\nimport Personopplysninger from 'app/components/modal-content/Personopplysninger';\nimport Plikter from 'app/components/modal-content/Plikter';\nimport { logAmplitudeEvent } from 'app/amplitude/amplitude';\n\nimport './velkommen.less';\nimport { PageKeys } from 'app/types/PageKeys';\n\ninterface Props {\n    fornavn: string;\n    onChangeLocale: (locale: Locale) => void;\n    locale: Locale;\n}\n\nconst Velkommen: FunctionComponent<Props> = ({ fornavn, locale, onChangeLocale }) => {\n    const intl = useIntl();\n    const bem = bemUtils('velkommen');\n    const navigate = useNavigate();\n    useDocumentTitle(intlUtils(intl, 'velkommen.standard.dokumenttittel'));\n    const { dispatch } = useEngangsstønadContext();\n\n    logAmplitudeEvent('sidevisning', {\n        app: 'engangsstonadny',\n        team: 'foreldrepenger',\n        pageKey: PageKeys.Velkommen,\n    });\n\n    const onValidSubmit = (values: Partial<VelkommenFormData>) => {\n        dispatch(\n            actionCreator.setVelkommen({\n                harForståttRettigheterOgPlikter: values.harForståttRettigheterOgPlikter!,\n            })\n        );\n        navigate('/soknad/søkersituasjon');\n    };\n\n    const [PersonopplysningerModalOpen, setPersonopplysningerModalOpen] = useState<boolean>(false);\n\n    return (\n        <VelkommenFormComponents.FormikWrapper\n            initialValues={initialVelkommenValues}\n            onSubmit={(values: any) => onValidSubmit(values)}\n            renderForm={() => {\n                return (\n                    <VelkommenFormComponents.Form includeButtons={false}>\n                        <LanguageToggle\n                            locale={locale}\n                            availableLocales={['en', 'nb', 'nn']}\n                            toggle={(l: Locale) => onChangeLocale(l)}\n                        />\n                        <Sidebanner\n                            dialog={{\n                                title: intlUtils(intl, 'velkommen.standard.bobletittel', { name: fornavn }),\n                                text: (\n                                    <>\n                                        <Block padBottom=\"m\">\n                                            <FormattedMessage id={'velkommen.standard.bobletekst.del1'} />\n                                        </Block>\n                                        <Block>\n                                            <FormattedMessage id={'velkommen.standard.bobletekst.del2'} />\n                                        </Block>\n                                    </>\n                                ),\n                            }}\n                        />\n                        <div className={bem.block}>\n                            <Block padBottom=\"xl\">\n                                <div className={bem.element('tittel')}>\n                                    <Heading size=\"large\">\n                                        {intlUtils(intl, 'velkommen.standard.velkommentittel')}\n                                    </Heading>\n                                </div>\n                            </Block>\n                            <Block padBottom=\"xl\">\n                                <Ingress>\n                                    <FormattedMessage id=\"velkommen.standard.ingress\" />\n                                </Ingress>\n                            </Block>\n                            <Block padBottom=\"xl\">\n                                <Alert variant=\"info\">\n                                    <FormattedMessage id=\"velkommen.text.veiviser\" />\n                                    <div className={bem.element('veiviserLenke')}>\n                                        <FormattedMessage\n                                            id=\"velkommen.text.veiviser.lenke\"\n                                            values={{\n                                                a: (msg: any) => (\n                                                    <a\n                                                        className=\"lenke\"\n                                                        rel=\"noopener noreferrer\"\n                                                        href={lenker.veiviser}\n                                                        target=\"_blank\"\n                                                    >\n                                                        {msg}\n                                                    </a>\n                                                ),\n                                            }}\n                                        />\n                                    </div>\n                                </Alert>\n                            </Block>\n                            <Block padBottom=\"xl\">\n                                <VelkommenFormComponents.ConfirmationCheckbox\n                                    name={VelkommenFormField.harForståttRettigheterOgPlikter}\n                                    label={intlUtils(intl, 'velkommen.text.samtykke')}\n                                    validate={(value: boolean) => {\n                                        let result;\n                                        if (value !== true) {\n                                            result = intlUtils(\n                                                intl,\n                                                'valideringsfeil.velkommen.bekreftLestOgForståttRettigheter'\n                                            );\n                                        }\n                                        return result;\n                                    }}\n                                >\n                                    <>\n                                        <Block padBottom=\"l\">\n                                            <FormattedMessage id=\"velkommen.text.samtykkeIntro\" />\n                                        </Block>\n                                        <Block>\n                                            <UtvidetInformasjon\n                                                apneLabel={intlUtils(intl, 'velkommen.text.plikter.apneLabel')}\n                                            >\n                                                <Plikter />\n                                            </UtvidetInformasjon>\n                                        </Block>\n                                        <BodyShort>\n                                            <FormattedMessage id=\"velkommen.text.kunEnStønad\" />\n                                        </BodyShort>\n                                    </>\n                                </VelkommenFormComponents.ConfirmationCheckbox>\n                            </Block>\n                            <Block padBottom=\"xl\">\n                                <div className={bem.element('startSøknadKnapp')}>\n                                    <Button type=\"submit\">{intlUtils(intl, 'velkommen.button.startSøknad')}</Button>\n                                </div>\n                            </Block>\n                            <Block>\n                                <div className={bem.element('personopplysningLenke')}>\n                                    <a\n                                        className=\"lenke\"\n                                        href=\"#\"\n                                        onClick={() => setPersonopplysningerModalOpen(!PersonopplysningerModalOpen)}\n                                    >\n                                        <FormattedMessage id=\"velkommen.text.personopplysningene.link\" />\n                                    </a>\n                                </div>\n                                <Modal\n                                    open={PersonopplysningerModalOpen}\n                                    closeButton={true}\n                                    onClose={() => setPersonopplysningerModalOpen(!PersonopplysningerModalOpen)}\n                                    aria-label=\"rettigheter og plikter\"\n                                >\n                                    <Modal.Content>\n                                        <Personopplysninger />\n                                    </Modal.Content>\n                                </Modal>\n                            </Block>\n                        </div>\n                    </VelkommenFormComponents.Form>\n                );\n            }}\n        />\n    );\n};\n\nexport default Velkommen;\n"],"names":["externalStateControl","require$$0","dist","require$$1","require$$2","require$$3","require$$4","NorwayFlagSVG","_jsxs","_jsx","renderMenuItem","intl","locale","MenuItem","intlHelper","LanguageToggle","toggleLanguage","availableLocales","selectableOtherMenuLanguages","code","useIntl","Wrapper","element","Button","Expand","Menu","Personopplysninger","jsxs","jsx","Heading","getMessage","BodyShort","Label","FormattedMessage","Link","lenker","Plikter","Velkommen","fornavn","onChangeLocale","bem","bemUtils","navigate","useNavigate","useDocumentTitle","intlUtils","dispatch","useEngangsstønadContext","logAmplitudeEvent","PageKeys","onValidSubmit","values","actionCreator","PersonopplysningerModalOpen","setPersonopplysningerModalOpen","useState","VelkommenFormComponents","initialVelkommenValues","l","Sidebanner","Fragment","Block","Ingress","Alert","msg","VelkommenFormField","value","result","UtvidetInformasjon","Modal","Velkommen$1"],"mappings":"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","x_google_ignoreList":[0]}