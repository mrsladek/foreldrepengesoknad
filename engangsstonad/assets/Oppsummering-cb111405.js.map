{"version":3,"file":"Oppsummering-cb111405.js","sources":["../../../../packages/fp-common/lib/components/display-text-with-label/DisplayTextWithLabel.js","../../src/app/util/login.ts","../../src/app/api/api.ts","../../src/app/steps/oppsummering/Oppsummeringspunkt.tsx","../../src/app/util/formats/formatUtils.ts","../../src/app/steps/oppsummering/OmBarnetOppsummering.tsx","../../src/app/steps/oppsummering/LandOppsummering.tsx","../../src/app/steps/oppsummering/UtenlandsoppholdOppsummering.tsx","../../src/app/steps/oppsummering/oppsummeringFormConfig.ts","../../src/app/steps/oppsummering/oppsummeringQuestionsConfig.ts","../../src/app/util/apiUtils.ts","../../src/app/steps/oppsummering/OmDegOppsummering.tsx","../../src/app/steps/oppsummering/Oppsummering.tsx"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { BodyShort, Heading } from '@navikt/ds-react';\nconst DisplayTextWithLabel = (props) => (_jsxs(\"div\", { className: \"textWithLabel\", children: [props.label && (_jsx(Heading, { size: \"xsmall\", level: \"3\", children: props.label })), Array.isArray(props.text) &&\n            props.text.map((textElement, index) => (_jsx(BodyShort, { children: textElement }, `${textElement}-${index}`))), !Array.isArray(props.text) && _jsx(BodyShort, { children: props.text })] }));\nexport default DisplayTextWithLabel;\n//# sourceMappingURL=DisplayTextWithLabel.js.map","\nexport const redirectToLogin = () => {\n    redirect((window as any).LOGIN_URL + '?redirect=' + window.location.origin);\n};\n\nexport const redirect = (url: string) => {\n    window.location.href = url;\n};\n","import { EngangsstønadSøknadDto } from '../types/domain/EngangsstønadSøknad';\nimport axios, { AxiosResponse, AxiosError } from 'axios';\nimport { redirectToLogin } from 'util/login';\n\nexport const foreldrepengersoknadApi = axios.create({\n    baseURL: (window as any).REST_API_URL,\n    withCredentials: true,\n});\n\nforeldrepengersoknadApi.interceptors.request.use(\n    (config) => {\n        config.withCredentials = true;\n        config.timeout = 60 * 1000;\n        return config;\n    }\n);\n\nforeldrepengersoknadApi.interceptors.response.use(\n    (response: AxiosResponse) => {\n        return response;\n    },\n    (error: AxiosError) => {\n        if (\n            error.response &&\n            error.response.status === 401 &&\n            error?.config?.url &&\n            !error.config.url.includes('/soknad')\n        ) {\n             redirectToLogin();\n        }\n        return Promise.reject(error);\n    }\n);\n\nconst getPerson = () => {\n    return foreldrepengersoknadApi.get('/personinfo');\n};\n\nconst sendSøknad = (soknad: EngangsstønadSøknadDto) => {\n    return foreldrepengersoknadApi.post('/soknad', soknad, {\n        headers: {\n            'content-type': 'application/json;',\n        },\n    });\n};\n\nconst Api = { getPerson, sendSøknad };\nexport default Api;\n","import React, { ReactNode } from 'react';\nimport { Block } from '@navikt/fp-common';\nimport { Accordion, Heading } from '@navikt/ds-react';\n\ninterface Props {\n    tittel: string;\n    children: ReactNode;\n}\n\nconst Oppsummeringspunkt = ({ tittel, children }: Props) => (\n    <Block>\n        <Accordion>\n            <Accordion.Item>\n                <Accordion.Header>\n                    <Heading level=\"2\" size=\"small\">\n                        {tittel}\n                    </Heading>\n                </Accordion.Header>\n                <Accordion.Content>{children}</Accordion.Content>\n            </Accordion.Item>\n        </Accordion>\n    </Block>\n);\n\nexport default Oppsummeringspunkt;\n","export const fullNameFormat = (fornavn: string, mellomnavn: string, etternavn: string) => {\n    if (mellomnavn) {\n        return `${fornavn} ${mellomnavn} ${etternavn}`;\n    }\n    return `${fornavn} ${etternavn}`;\n};\n\nexport default {\n    fullNameFormat\n};\n","import * as React from 'react';\nimport { Attachment } from 'common/storage/attachment/types/Attachment';\nimport { useIntl } from 'react-intl';\nimport { isAttachmentWithError } from 'common/storage/attachment/components/util';\nimport AttachmentList from 'common/storage/attachment/components/AttachmentList';\nimport getMessage from 'common/util/i18nUtils';\nimport { OmBarnetFormData } from 'app/steps/om-barnet/omBarnetFormConfig';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { Block, DisplayTextWithLabel, formatDate, guid } from '@navikt/fp-common';\nimport { BodyLong, Label } from '@navikt/ds-react';\n\ninterface Props {\n    barn: OmBarnetFormData;\n}\n\nconst OmBarnetOppsummering: React.FunctionComponent<Props> = ({ barn }) => {\n    const intl = useIntl();\n\n    let antallBarnSummaryText;\n    if (barn.antallBarn === '1') {\n        antallBarnSummaryText = getMessage(intl, 'oppsummering.omBarnet.ettBarn');\n    } else if (barn.antallBarn === '2' && barn.adopsjonAvEktefellesBarn === YesOrNo.UNANSWERED) {\n        antallBarnSummaryText = getMessage(intl, 'oppsummering.omBarnet.tvillinger');\n    } else if (barn.antallBarn === '2' && barn.adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED) {\n        antallBarnSummaryText = getMessage(intl, 'oppsummering.omBarnet.toBarn');\n    } else {\n        antallBarnSummaryText = getMessage(intl, 'oppsummering.omBarnet.flereBarn', {\n            antall: barn.antallBarn,\n        });\n    }\n\n    return (\n        <div>\n            <Block padBottom=\"l\">\n                <DisplayTextWithLabel\n                    label={getMessage(intl, 'oppsummering.text.soknadenGjelder')}\n                    text={antallBarnSummaryText}\n                />\n            </Block>\n            {barn.adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED && (\n                <div>\n                    <Block padBottom=\"l\">\n                        <DisplayTextWithLabel\n                            label={getMessage(intl, 'oppsummering.text.medAdopsjonsdato')}\n                            text={formatDate(barn.adopsjonsdato!)}\n                        />\n                    </Block>\n                    <Block padBottom=\"l\">\n                        <Label className=\"textWithLabel__label\">\n                            {barn.fødselsdatoer.length > 1\n                                ? getMessage(intl, 'oppsummering.text.medFødselsdatoer')\n                                : getMessage(intl, 'oppsummering.text.medFødselsdato')}\n                        </Label>\n                        {barn.fødselsdatoer.map((_, index) => {\n                            return (\n                                <Block padBottom=\"s\" key={guid()}>\n                                    <BodyLong>{formatDate(barn.fødselsdatoer[index])}</BodyLong>\n                                </Block>\n                            );\n                        })}\n                    </Block>\n                </div>\n            )}\n            {barn.adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED && (\n                <Block padBottom=\"l\" className=\"oppsummering__attachments\">\n                    <Label className=\"textWithLabel__label\">\n                        {getMessage(intl, 'oppsummering.text.vedlagtOmsorgsovertakelseBekreftelse')}\n                    </Label>\n                    <AttachmentList\n                        attachments={barn.omsorgsovertakelse.filter((a: Attachment) => !isAttachmentWithError(a))}\n                    />\n                </Block>\n            )}\n            {barn.erBarnetFødt === YesOrNo.YES && (\n                <Block padBottom=\"l\">\n                    <DisplayTextWithLabel\n                        label={getMessage(intl, 'oppsummering.text.medFødselsdato')}\n                        text={formatDate(barn.fødselsdatoer[0])}\n                    />\n                </Block>\n            )}\n            {barn.erBarnetFødt === YesOrNo.NO && barn.termindato && barn.terminbekreftelsedato && (\n                <div>\n                    <Block padBottom=\"l\">\n                        <DisplayTextWithLabel\n                            label={getMessage(intl, 'oppsummering.text.medTermindato')}\n                            text={formatDate(barn.termindato)}\n                        />\n                    </Block>\n                    <Block padBottom=\"l\" className=\"oppsummering__attachments\">\n                        <Label className=\"textWithLabel__label\">\n                            {getMessage(intl, 'oppsummering.text.vedlagtTerminbekreftelse')}\n                        </Label>\n                        <AttachmentList\n                            attachments={barn.terminbekreftelse.filter((a: Attachment) => !isAttachmentWithError(a))}\n                        />\n                    </Block>\n                    <Block padBottom=\"l\">\n                        <DisplayTextWithLabel\n                            label={getMessage(intl, 'oppsummering.text.somErDatert')}\n                            text={formatDate(barn.terminbekreftelsedato)}\n                        />\n                    </Block>\n                </div>\n            )}\n        </div>\n    );\n};\nexport default OmBarnetOppsummering;\n","import React from 'react';\nimport { BostedUtland } from 'app/steps/utenlandsopphold/bostedUtlandListAndDialog/types';\nimport * as countries from 'i18n-iso-countries';\n\nimport './landOppsummering.less';\nimport { formatDate } from '@navikt/fp-common';\nimport { BodyLong } from '@navikt/ds-react';\n\ninterface Props {\n    utenlandsoppholdListe: BostedUtland[];\n}\n\nconst LandOppsummering: React.FunctionComponent<Props> = ({ utenlandsoppholdListe }) => (\n    <ul className=\"landOppsummering\">\n        {utenlandsoppholdListe.map((opphold: BostedUtland) => (\n            <div key={`${opphold.landkode}${opphold.fom}`} style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <BodyLong>{countries.getName(opphold.landkode, 'nb')}</BodyLong>\n                <BodyLong>\n                    {formatDate(opphold.fom)} - {formatDate(opphold.tom)}\n                </BodyLong>\n            </div>\n        ))}\n    </ul>\n);\n\nexport default LandOppsummering;\n","import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { UtenlandsoppholdFormData } from 'app/steps/utenlandsopphold/utenlandsoppholdFormTypes';\nimport dayjs from 'dayjs';\nimport getMessage from 'common/util/i18nUtils';\nimport { OmBarnetFormData } from 'app/steps/om-barnet/omBarnetFormConfig';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport LandOppsummering from './LandOppsummering';\nimport { Block, DisplayTextWithLabel } from '@navikt/fp-common';\nimport { Label } from '@navikt/ds-react';\n\ninterface Props {\n    barn: OmBarnetFormData;\n    informasjonOmUtenlandsopphold: UtenlandsoppholdFormData;\n}\n\nconst erDatoITidsperiode = (dato: string, fom: string, tom: string) => {\n    return dayjs(dato).isBetween(dayjs(fom), dayjs(tom), 'day', '[]');\n};\n\nconst erFamiliehendelsedatoIEnUtenlandsoppholdPeriode = (\n    familiehendelsedato: string,\n    informasjonOmUtenlandsopphold: UtenlandsoppholdFormData\n) => {\n    return (\n        informasjonOmUtenlandsopphold.utenlandsoppholdSiste12Mnd.some((tidligereOpphold) =>\n            erDatoITidsperiode(familiehendelsedato, tidligereOpphold.fom, tidligereOpphold.tom)\n        ) ||\n        informasjonOmUtenlandsopphold.utenlandsoppholdNeste12Mnd.some((senereOpphold) =>\n            erDatoITidsperiode(familiehendelsedato, senereOpphold.fom, senereOpphold.tom)\n        )\n    );\n};\n\nconst UtenlandsoppholdOppsummering: React.FunctionComponent<Props> = ({ barn, informasjonOmUtenlandsopphold }) => {\n    const intl = useIntl();\n\n    return (\n        <Block>\n            {informasjonOmUtenlandsopphold.harBoddUtenforNorgeSiste12Mnd === YesOrNo.NO ? (\n                <Block padBottom=\"l\">\n                    <DisplayTextWithLabel label={getMessage(intl, 'oppsummering.text.boddSisteTolv')} text=\"Norge\" />\n                </Block>\n            ) : (\n                <Block padBottom=\"l\" className=\"textWithLabel\">\n                    <Label className=\"textWithLabel__label\">\n                        {getMessage(intl, 'oppsummering.text.boddSisteTolv')}\n                    </Label>\n                    <LandOppsummering\n                        utenlandsoppholdListe={informasjonOmUtenlandsopphold.utenlandsoppholdSiste12Mnd}\n                    />\n                </Block>\n            )}\n            {informasjonOmUtenlandsopphold.skalBoUtenforNorgeNeste12Mnd === YesOrNo.NO ? (\n                <Block padBottom=\"l\">\n                    <DisplayTextWithLabel\n                        label={getMessage(intl, 'oppsummering.text.neste12mnd')}\n                        text={getMessage(intl, 'medlemmskap.radiobutton.boNorge')}\n                    />\n                </Block>\n            ) : (\n                <Block padBottom=\"l\" className=\"textWithLabel\">\n                    <Label className=\"textWithLabel__label\">{getMessage(intl, 'oppsummering.text.neste12mnd')}</Label>\n                    <LandOppsummering\n                        utenlandsoppholdListe={informasjonOmUtenlandsopphold.utenlandsoppholdNeste12Mnd}\n                    />\n                </Block>\n            )}\n            {barn.erBarnetFødt === YesOrNo.NO && (\n                <Block padBottom=\"l\">\n                    <DisplayTextWithLabel\n                        label={getMessage(intl, 'oppsummering.text.ogKommerPåFødselstidspunktet')}\n                        text={\n                            erFamiliehendelsedatoIEnUtenlandsoppholdPeriode(\n                                barn.termindato!,\n                                informasjonOmUtenlandsopphold\n                            )\n                                ? getMessage(intl, 'medlemmskap.radiobutton.vareUtlandet')\n                                : getMessage(intl, 'medlemmskap.radiobutton.vareNorge')\n                        }\n                    />\n                </Block>\n            )}\n            {barn.erBarnetFødt === YesOrNo.YES && (\n                <Block padBottom=\"l\">\n                    <DisplayTextWithLabel\n                        label={getMessage(intl, 'oppsummering.text.varPåFødselstidspunktet')}\n                        text={\n                            erFamiliehendelsedatoIEnUtenlandsoppholdPeriode(\n                                barn.fødselsdatoer[0],\n                                informasjonOmUtenlandsopphold\n                            )\n                                ? getMessage(intl, 'oppsummering.utenlandsopphold.iUtlandet')\n                                : getMessage(intl, 'oppsummering.utenlandsopphold.iNorge')\n                        }\n                    />\n                </Block>\n            )}\n        </Block>\n    );\n};\n\nexport default UtenlandsoppholdOppsummering;\n","import { getTypedFormComponents } from '@navikt/sif-common-formik-ds/lib';\n\nexport enum OppsummeringFormField {\n    oppgittKorrekteOpplysninger = 'oppgittKorrekteOpplysninger',\n}\n\nexport interface OppsummeringFormData {\n    [OppsummeringFormField.oppgittKorrekteOpplysninger]: boolean;\n}\n\nexport const initialOppsummeringValues: OppsummeringFormData = {\n    [OppsummeringFormField.oppgittKorrekteOpplysninger]: false,\n};\n\nexport const OppsummeringFormComponents = getTypedFormComponents<OppsummeringFormField, OppsummeringFormData>();\n","import { QuestionConfig, Questions } from '@navikt/sif-common-question-config/lib';\nimport { OppsummeringFormData, OppsummeringFormField } from './oppsummeringFormConfig';\n\nconst OppsummeringFormConfig: QuestionConfig<OppsummeringFormData, OppsummeringFormField> = {\n    [OppsummeringFormField.oppgittKorrekteOpplysninger]: {\n        isIncluded: () => true,\n        isAnswered: ({ oppgittKorrekteOpplysninger }) => oppgittKorrekteOpplysninger === true,\n    },\n};\n\nconst oppsummeringQuestionsConfig = Questions<OppsummeringFormData, OppsummeringFormField>(OppsummeringFormConfig);\n\nexport default oppsummeringQuestionsConfig;\n","import { Attachment } from 'common/storage/attachment/types/Attachment';\nimport { isAttachmentWithError } from 'common/storage/attachment/components/util';\nimport { EngangsstønadSøknadDto } from 'app/types/domain/EngangsstønadSøknad';\nimport { EngangsstønadContextState } from 'app/context/EngangsstønadContextConfig';\nimport { YesOrNo } from '@navikt/sif-common-formik-ds/lib';\nimport { FodtBarn, UfodtBarn } from 'app/types/domain/Barn';\nimport { OmBarnetFormData } from 'app/steps/om-barnet/omBarnetFormConfig';\nimport { UtenlandsoppholdFormData } from 'app/steps/utenlandsopphold/utenlandsoppholdFormTypes';\nimport InformasjonOmUtenlandsopphold, { Utenlandsopphold } from 'app/types/domain/InformasjonOmUtenlandsopphold';\nimport { BostedUtland } from 'app/steps/utenlandsopphold/bostedUtlandListAndDialog/types';\nimport dayjs from 'dayjs';\nimport { Locale } from '@navikt/fp-common';\n\nimport utc from 'dayjs/plugin/utc';\nimport Adopsjon from 'app/types/domain/Adopsjon';\n\ndayjs.extend(utc);\n\nconst isArrayOfAttachments = (attachment: Attachment) => {\n    return Array.isArray(attachment) && attachment.some((element: Attachment) => element.filename);\n};\n\nconst removeAttachmentsWithUploadError = (attachments: Attachment[]) =>\n    attachments.filter((a: Attachment) => !isAttachmentWithError(a));\n\nexport const mapAttachments = (object: any): Attachment[] => {\n    const foundAttachments = [] as Attachment[];\n    Object.keys(object).forEach((key: string) => {\n        if (typeof object[key] === 'object') {\n            if (isArrayOfAttachments(object[key])) {\n                foundAttachments.push(...removeAttachmentsWithUploadError(object[key]));\n                delete object[key];\n            } else {\n                foundAttachments.push(...mapAttachments(object[key]));\n            }\n        }\n    });\n    return foundAttachments;\n};\n\nconst mapBarnForInnsending = (omBarnet: OmBarnetFormData): FodtBarn | UfodtBarn | Adopsjon => {\n    if (omBarnet.adopsjonAvEktefellesBarn !== YesOrNo.UNANSWERED) {\n        return {\n            adopsjonAvEktefellesBarn: omBarnet.adopsjonAvEktefellesBarn === YesOrNo.YES ? true : false,\n            søkerAdopsjonAlene: omBarnet.søkerAdopsjonAlene === YesOrNo.YES ? true : false,\n            adopsjonsdato: dayjs(omBarnet.adopsjonsdato).toDate(),\n            antallBarn: parseInt(omBarnet.antallBarn!, 10),\n            fødselsdatoer: omBarnet.fødselsdatoer.map((fødselsdato) => dayjs.utc(fødselsdato).toDate()),\n        };\n    }\n    return omBarnet.erBarnetFødt === YesOrNo.YES\n        ? {\n              antallBarn: parseInt(omBarnet.antallBarn!, 10),\n              erBarnetFødt: true,\n              fødselsdatoer: [dayjs.utc(omBarnet.fødselsdatoer[0]).toDate()],\n          }\n        : {\n              antallBarn: parseInt(omBarnet.antallBarn!, 10),\n              erBarnetFødt: false,\n              termindato: dayjs.utc(omBarnet.termindato).toDate(),\n              terminbekreftelseDato: dayjs.utc(omBarnet.terminbekreftelsedato).toDate(),\n          };\n};\n\nconst mapBostedUtlandTilUtenlandsopphold = (bostedUtland: BostedUtland[]): Utenlandsopphold[] => {\n    return bostedUtland.map((bosted) => ({\n        land: bosted.landkode,\n        tidsperiode: {\n            fom: dayjs.utc(bosted.fom).toDate(),\n            tom: dayjs.utc(bosted.tom).toDate(),\n        },\n    }));\n};\n\nconst mapUtenlandsoppholdForInnsending = (\n    utenlandsopphold: UtenlandsoppholdFormData\n): InformasjonOmUtenlandsopphold => {\n    return {\n        senereOpphold: mapBostedUtlandTilUtenlandsopphold(utenlandsopphold.utenlandsoppholdNeste12Mnd),\n        tidligereOpphold: mapBostedUtlandTilUtenlandsopphold(utenlandsopphold.utenlandsoppholdSiste12Mnd),\n        iNorgeNeste12Mnd: utenlandsopphold.skalBoUtenforNorgeNeste12Mnd === YesOrNo.YES,\n        iNorgeSiste12Mnd: utenlandsopphold.harBoddUtenforNorgeSiste12Mnd === YesOrNo.YES,\n    };\n};\n\nexport const mapStateForInnsending = (state: EngangsstønadContextState, locale: Locale): EngangsstønadSøknadDto => {\n    const { omBarnet, utenlandsopphold } = state.søknad;\n    const barn: FodtBarn | UfodtBarn | Adopsjon = mapBarnForInnsending(omBarnet);\n    const utenlandsoppholdDto = mapUtenlandsoppholdForInnsending(utenlandsopphold);\n\n    return {\n        barn,\n        type: 'engangsstønad',\n        erEndringssøknad: false,\n        informasjonOmUtenlandsopphold: utenlandsoppholdDto,\n        søker: {\n            språkkode: locale,\n        },\n        vedlegg: mapAttachments(JSON.parse(JSON.stringify(state.søknad))),\n    };\n};\n","import * as React from 'react';\nimport { Block, DisplayTextWithLabel } from '@navikt/fp-common';\n\ninterface Props {\n    søkerNavn: string;\n    søkerFnr: string;\n}\n\nconst OmDegOppsummering: React.FunctionComponent<Props> = ({ søkerNavn, søkerFnr }) => {\n    return (\n        <div>\n            <Block padBottom=\"l\">\n                <DisplayTextWithLabel label={søkerNavn} text={søkerFnr} />\n            </Block>\n        </div>\n    );\n};\nexport default OmDegOppsummering;\n","import { bemUtils, Block, intlUtils, Locale, Step } from '@navikt/fp-common';\nimport { Button, GuidePanel } from '@navikt/ds-react';\nimport React, { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport Oppsummeringspunkt from './Oppsummeringspunkt';\nimport Person from 'app/types/domain/Person';\nimport { fullNameFormat } from 'app/util/formats/formatUtils';\nimport OmBarnetOppsummering from './OmBarnetOppsummering';\nimport UtenlandsoppholdOppsummering from './UtenlandsoppholdOppsummering';\nimport stepConfig, { getPreviousStepHref } from 'app/step-config/stepConfig';\nimport { useEngangsstønadContext } from 'app/context/hooks/useEngangsstønadContext';\nimport { OppsummeringFormComponents, initialOppsummeringValues, OppsummeringFormField } from './oppsummeringFormConfig';\nimport { UnansweredQuestionsInfo } from '@navikt/sif-common-formik-ds/lib';\nimport oppsummeringQuestionsConfig from './oppsummeringQuestionsConfig';\nimport { EngangsstønadSøknadDto } from 'app/types/domain/EngangsstønadSøknad';\nimport { mapStateForInnsending } from 'app/util/apiUtils';\nimport Api from 'app/api/api';\nimport { useNavigate } from 'react-router-dom';\nimport actionCreator from 'app/context/action/actionCreator';\nimport { onAvbrytSøknad } from 'app/util/globalUtil';\nimport { logAmplitudeEvent } from 'app/amplitude/amplitude';\nimport { PageKeys } from 'app/types/PageKeys';\n\nimport './oppsummering.less';\nimport OmDegOppsummering from './OmDegOppsummering';\n\ninterface Props {\n    person: Person;\n    locale: Locale;\n}\n\nconst Oppsummering: React.FunctionComponent<Props> = ({ person, locale }) => {\n    const intl = useIntl();\n    const bem = bemUtils('oppsummering');\n    const { state, dispatch } = useEngangsstønadContext();\n    const navigate = useNavigate();\n    const [isSending, setIsSending] = useState(false);\n\n    logAmplitudeEvent('sidevisning', {\n        app: 'engangsstonadny',\n        team: 'foreldrepenger',\n        pageKey: PageKeys.Oppsummering,\n    });\n\n    const sendSøknad = async () => {\n        const søknadForInnsending: EngangsstønadSøknadDto = mapStateForInnsending(state, locale);\n        setIsSending(true);\n\n        try {\n            const kvitteringResponse = Api.sendSøknad(søknadForInnsending);\n\n            kvitteringResponse.then((response) => {\n                dispatch(actionCreator.setKvittering(response.data));\n                navigate('/kvittering');\n                setIsSending(false);\n            });\n\n            logAmplitudeEvent('skjema fullført', {\n                app: 'engangsstonadny',\n                team: 'foreldrepenger',\n            });\n        } catch (error) {\n            navigate('/kvittering');\n        }\n    };\n\n    return (\n        <OppsummeringFormComponents.FormikWrapper\n            initialValues={initialOppsummeringValues}\n            onSubmit={() => sendSøknad()}\n            renderForm={({ values: formValues }) => {\n                // @ts-ignore Fiks denne\n                const visibility = oppsummeringQuestionsConfig.getVisbility(formValues);\n                const allQuestionsAnswered = visibility.areAllQuestionsAnswered();\n\n                return (\n                    <Step\n                        bannerTitle={intlUtils(intl, 'søknad.pageheading')}\n                        activeStepId=\"oppsummering\"\n                        pageTitle={intlUtils(intl, 'søknad.oppsummering')}\n                        stepTitle={intlUtils(intl, 'søknad.oppsummering')}\n                        backLinkHref={getPreviousStepHref('oppsummering')}\n                        onCancel={() => onAvbrytSøknad(dispatch, navigate)}\n                        steps={stepConfig}\n                        kompakt={true}\n                    >\n                        <OppsummeringFormComponents.Form\n                            includeButtons={false}\n                            noButtonsContentRenderer={\n                                allQuestionsAnswered\n                                    ? undefined\n                                    : () => (\n                                          <UnansweredQuestionsInfo>\n                                              {intlUtils(intl, 'søknad.footer.spørsmålMåBesvares')}\n                                          </UnansweredQuestionsInfo>\n                                      )\n                            }\n                        >\n                            <GuidePanel>{intlUtils(intl, 'oppsummering.text.lesNoye')}</GuidePanel>\n                            <div className={bem.block}>\n                                <Oppsummeringspunkt tittel={intlUtils(intl, 'søknad.omDeg')}>\n                                    <OmDegOppsummering\n                                        søkerNavn={fullNameFormat(person.fornavn, person.mellomnavn, person.etternavn)}\n                                        søkerFnr={person.fnr}\n                                    />\n                                </Oppsummeringspunkt>\n                                <Oppsummeringspunkt tittel={intlUtils(intl, 'søknad.omBarnet')}>\n                                    <OmBarnetOppsummering barn={state.søknad.omBarnet} />\n                                </Oppsummeringspunkt>\n                                <Oppsummeringspunkt tittel={intlUtils(intl, 'søknad.utenlandsopphold')}>\n                                    <UtenlandsoppholdOppsummering\n                                        barn={state.søknad.omBarnet}\n                                        informasjonOmUtenlandsopphold={state.søknad.utenlandsopphold}\n                                    />\n                                </Oppsummeringspunkt>\n                            </div>\n                            <Block margin=\"xl\">\n                                <OppsummeringFormComponents.ConfirmationCheckbox\n                                    name={OppsummeringFormField.oppgittKorrekteOpplysninger}\n                                    label=\"De opplysninger jeg har oppgitt er riktige og jeg har ikke holdt tilbake opplysninger som har betydning for min rett til engangsstønad.\"\n                                />\n                            </Block>\n                            {allQuestionsAnswered && (\n                                <Block margin=\"xl\">\n                                    <div className={bem.element('sendSøknadKnapp')}>\n                                        <Button type=\"submit\" disabled={isSending} loading={isSending}>\n                                            {intlUtils(intl, 'oppsummering.button.sendSøknad')}\n                                        </Button>\n                                    </div>\n                                </Block>\n                            )}\n                        </OppsummeringFormComponents.Form>\n                    </Step>\n                );\n            }}\n        />\n    );\n};\n\nexport default Oppsummering;\n"],"names":["DisplayTextWithLabel","props","_jsxs","_jsx","Heading","textElement","index","BodyShort","redirectToLogin","redirect","url","foreldrepengersoknadApi","axios","config","response","error","_a","getPerson","sendSøknad","soknad","Api","Oppsummeringspunkt","tittel","children","jsx","Block","Accordion","jsxs","fullNameFormat","fornavn","mellomnavn","etternavn","OmBarnetOppsummering","barn","intl","useIntl","antallBarnSummaryText","getMessage","YesOrNo","formatDate","Label","_","BodyLong","guid","AttachmentList","a","isAttachmentWithError","LandOppsummering","utenlandsoppholdListe","opphold","countries.getName","erDatoITidsperiode","dato","fom","tom","dayjs","erFamiliehendelsedatoIEnUtenlandsoppholdPeriode","familiehendelsedato","informasjonOmUtenlandsopphold","tidligereOpphold","senereOpphold","UtenlandsoppholdOppsummering","OppsummeringFormField","initialOppsummeringValues","OppsummeringFormComponents","getTypedFormComponents","OppsummeringFormConfig","oppgittKorrekteOpplysninger","oppsummeringQuestionsConfig","Questions","utc","isArrayOfAttachments","attachment","element","removeAttachmentsWithUploadError","attachments","mapAttachments","object","foundAttachments","key","mapBarnForInnsending","omBarnet","fødselsdato","mapBostedUtlandTilUtenlandsopphold","bostedUtland","bosted","mapUtenlandsoppholdForInnsending","utenlandsopphold","mapStateForInnsending","state","locale","utenlandsoppholdDto","OmDegOppsummering","søkerNavn","søkerFnr","Oppsummering","person","bem","bemUtils","dispatch","useEngangsstønadContext","navigate","useNavigate","isSending","setIsSending","useState","logAmplitudeEvent","PageKeys","søknadForInnsending","actionCreator","formValues","allQuestionsAnswered","Step","intlUtils","getPreviousStepHref","onAvbrytSøknad","stepConfig","UnansweredQuestionsInfo","GuidePanel","Button","Oppsummering$1"],"mappings":"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"}